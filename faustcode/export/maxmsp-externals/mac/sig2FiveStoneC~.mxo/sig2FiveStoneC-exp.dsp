declare version "2.72.12";
declare compile_options "-single -scal -e ./sig2FiveStoneC.dsp -o faust.89z/sig2FiveStoneC/sig2FiveStoneC-exp.dsp";
declare library_path0 "/Users/master/Documents/GitHub/dip-musel/pezzo/faustcode/vecOp.lib";
declare library_path1 "/usr/local/share/faust/stdfaust.lib";
declare library_path2 "/Users/master/Documents/GitHub/dip-musel/pezzo/faustcode/tools.lib";
declare library_path3 "/Users/master/Documents/GitHub/dip-musel/pezzo/faustcode/ST.lib";
declare library_path4 "/usr/local/share/faust/signals.lib";
declare library_path5 "/usr/local/share/faust/maths.lib";
declare library_path6 "/usr/local/share/faust/platform.lib";
declare library_path7 "/usr/local/share/faust/basics.lib";
declare library_path8 "/usr/local/share/faust/delays.lib";
declare library_path9 "/usr/local/share/faust/physmodels.lib";
declare author "Francesco Vitucci";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_tabulateNd "Copyright (C) 2023 Bart Brouns <bart@magnetophon.nl>";
declare basics_lib_version "1.15.0";
declare delays_lib_name "Faust Delay Library";
declare delays_lib_version "1.1.0";
declare filename "sig2FiveStoneC.dsp";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.8.0";
declare name "sig2FiveStoneC";
declare physmodels_lib_name "Faust Physical Models Library";
declare physmodels_lib_version "1.1.0";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "1.3.0";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "1.5.0";
declare version "1.0";
ID_0 = hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f);
ID_1 = (ID_0 : \(x7).(\(x8).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_2 = ID_1, 7.3f;
ID_3 = (ID_2 : -);
ID_4 = ID_3, 2;
ID_5 = (ID_4 : pow);
ID_6 = hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f);
ID_7 = (ID_6 : \(x7).(\(x8).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_8 = ID_7, -6.7f;
ID_9 = (ID_8 : -);
ID_10 = ID_9, 2;
ID_11 = (ID_10 : pow);
ID_12 = ID_5, ID_11;
ID_13 = (ID_12 : +);
ID_14 = hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f);
ID_15 = (ID_14 : \(x7).(\(x8).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_16 = ID_15, 0;
ID_17 = (ID_16 : -);
ID_18 = ID_17, 2;
ID_19 = (ID_18 : pow);
ID_20 = ID_13, ID_19;
ID_21 = ID_20 : +;
ID_22 = (ID_21 : sqrt);
ID_23 = ID_22, 1;
ID_24 = ID_23 : max;
ID_25 = (ID_24 : log10);
ID_26 = 11, ID_25;
ID_27 = (ID_26 : *);
ID_28 = 0, ID_27;
ID_29 = (ID_28 : -);
ID_30 = ID_29, 2e+01f;
ID_31 = (ID_30 : /);
ID_32 = 1e+01f, ID_31;
ID_33 = (ID_32 : pow);
ID_34 = _, ID_33;
ID_35 = ID_34 : *;
ID_36 = _, 1;
ID_37 = (ID_36 : *);
ID_38 = (ID_0 : \(x769).(\(x770).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x769 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x770 : *) : +)~_));
ID_39 = ID_38, -6.7f;
ID_40 = (ID_39 : *);
ID_41 = (ID_6 : \(x769).(\(x770).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x769 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x770 : *) : +)~_));
ID_42 = ID_41, 7.3f;
ID_43 = (ID_42 : *);
ID_44 = ID_40, ID_43;
ID_45 = (ID_44 : -);
ID_46 = ID_45, 0;
ID_47 = (ID_46 : <);
ID_48 = 1, -1;
ID_49 = ID_47, ID_48;
ID_50 = (ID_49 : select2);
ID_51 = (ID_0 : \(x771).(\(x772).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x771 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x772 : *) : +)~_));
ID_52 = 7.3f, ID_51;
ID_53 = (ID_52 : -);
ID_54 = 0, ID_53;
ID_55 = (ID_54 : -);
ID_56 = ID_55, 2;
ID_57 = (ID_56 : pow);
ID_58 = (ID_6 : \(x773).(\(x774).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x773 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x774 : *) : +)~_));
ID_59 = -6.7f, ID_58;
ID_60 = (ID_59 : -);
ID_61 = 0, ID_60;
ID_62 = (ID_61 : -);
ID_63 = ID_62, 2;
ID_64 = (ID_63 : pow);
ID_65 = ID_57, ID_64;
ID_66 = (ID_65 :> sqrt);
ID_67 = ID_66, 0;
ID_68 = (ID_67 : ==);
ID_69 = 0, 1;
ID_70 = ID_68, ID_69;
ID_71 = (ID_70 : select2);
ID_72 = (ID_0 : \(x775).(\(x776).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x775 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x776 : *) : +)~_));
ID_73 = 7.3f, ID_72;
ID_74 = (ID_73 : -);
ID_75 = 0, ID_74;
ID_76 = (ID_75 : -);
ID_77 = (ID_0 : \(x777).(\(x778).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x777 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x778 : *) : +)~_));
ID_78 = 7.3f, ID_77;
ID_79 = (ID_78 : -);
ID_80 = 0, ID_79;
ID_81 = (ID_80 : -);
ID_82 = ID_81, 2;
ID_83 = (ID_82 : pow);
ID_84 = (ID_6 : \(x779).(\(x780).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x779 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x780 : *) : +)~_));
ID_85 = -6.7f, ID_84;
ID_86 = (ID_85 : -);
ID_87 = 0, ID_86;
ID_88 = (ID_87 : -);
ID_89 = ID_88, 2;
ID_90 = (ID_89 : pow);
ID_91 = ID_83, ID_90;
ID_92 = (ID_91 :> sqrt);
ID_93 = ID_92, 0;
ID_94 = (ID_93 : <);
ID_95 = ID_92, 0.0001f;
ID_96 = (ID_95 : max);
ID_97 = ID_96, ID_92;
ID_98 = ID_94, ID_97;
ID_99 = (ID_98 : select2);
ID_100 = ID_76, ID_99;
ID_101 = (ID_100 : /);
ID_102 = ID_101, 0;
ID_103 = ID_71, ID_102;
ID_104 = (ID_103 : select2);
ID_105 = ID_104, 2;
ID_106 = (ID_105 : pow);
ID_107 = (ID_0 : \(x781).(\(x782).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x781 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x782 : *) : +)~_));
ID_108 = 7.3f, ID_107;
ID_109 = (ID_108 : -);
ID_110 = 0, ID_109;
ID_111 = (ID_110 : -);
ID_112 = ID_111, 2;
ID_113 = (ID_112 : pow);
ID_114 = (ID_6 : \(x783).(\(x784).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x783 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x784 : *) : +)~_));
ID_115 = -6.7f, ID_114;
ID_116 = (ID_115 : -);
ID_117 = 0, ID_116;
ID_118 = (ID_117 : -);
ID_119 = ID_118, 2;
ID_120 = (ID_119 : pow);
ID_121 = ID_113, ID_120;
ID_122 = (ID_121 :> sqrt);
ID_123 = ID_122, 0;
ID_124 = (ID_123 : ==);
ID_125 = ID_124, ID_69;
ID_126 = (ID_125 : select2);
ID_127 = (ID_6 : \(x785).(\(x786).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x785 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x786 : *) : +)~_));
ID_128 = -6.7f, ID_127;
ID_129 = (ID_128 : -);
ID_130 = 0, ID_129;
ID_131 = (ID_130 : -);
ID_132 = (ID_0 : \(x787).(\(x788).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x787 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x788 : *) : +)~_));
ID_133 = 7.3f, ID_132;
ID_134 = (ID_133 : -);
ID_135 = 0, ID_134;
ID_136 = (ID_135 : -);
ID_137 = ID_136, 2;
ID_138 = (ID_137 : pow);
ID_139 = (ID_6 : \(x789).(\(x790).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x789 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x790 : *) : +)~_));
ID_140 = -6.7f, ID_139;
ID_141 = (ID_140 : -);
ID_142 = 0, ID_141;
ID_143 = (ID_142 : -);
ID_144 = ID_143, 2;
ID_145 = (ID_144 : pow);
ID_146 = ID_138, ID_145;
ID_147 = (ID_146 :> sqrt);
ID_148 = ID_147, 0;
ID_149 = (ID_148 : <);
ID_150 = ID_147, 0.0001f;
ID_151 = (ID_150 : max);
ID_152 = ID_151, ID_147;
ID_153 = ID_149, ID_152;
ID_154 = (ID_153 : select2);
ID_155 = ID_131, ID_154;
ID_156 = (ID_155 : /);
ID_157 = ID_156, 0;
ID_158 = ID_126, ID_157;
ID_159 = (ID_158 : select2);
ID_160 = ID_159, 2;
ID_161 = (ID_160 : pow);
ID_162 = ID_106, ID_161;
ID_163 = (ID_162 :> sqrt);
ID_164 = 53.29f, 44.89f;
ID_165 = (ID_164 :> sqrt);
ID_166 = ID_165, 0;
ID_167 = (ID_166 : ==);
ID_168 = ID_167, ID_69;
ID_169 = (ID_168 : select2);
ID_170 = 9.908582f, 9.908582f;
ID_171 = 0, ID_170;
ID_172 = (ID_171 : select2);
ID_173 = 7.3f, ID_172;
ID_174 = (ID_173 : /);
ID_175 = ID_174, 0;
ID_176 = ID_169, ID_175;
ID_177 = (ID_176 : select2);
ID_178 = ID_177, 2;
ID_179 = (ID_178 : pow);
ID_180 = -6.7f, ID_172;
ID_181 = (ID_180 : /);
ID_182 = ID_181, 0;
ID_183 = ID_169, ID_182;
ID_184 = (ID_183 : select2);
ID_185 = ID_184, 2;
ID_186 = (ID_185 : pow);
ID_187 = ID_179, ID_186;
ID_188 = (ID_187 :> sqrt);
ID_189 = ID_163, ID_188;
ID_190 = (ID_189 : *);
ID_191 = ID_190, 0;
ID_192 = (ID_191 : ==);
ID_193 = (ID_0 : \(x791).(\(x792).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x791 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x792 : *) : +)~_));
ID_194 = 7.3f, ID_193;
ID_195 = (ID_194 : -);
ID_196 = 0, ID_195;
ID_197 = (ID_196 : -);
ID_198 = ID_197, 2;
ID_199 = (ID_198 : pow);
ID_200 = (ID_6 : \(x793).(\(x794).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x793 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x794 : *) : +)~_));
ID_201 = -6.7f, ID_200;
ID_202 = (ID_201 : -);
ID_203 = 0, ID_202;
ID_204 = (ID_203 : -);
ID_205 = ID_204, 2;
ID_206 = (ID_205 : pow);
ID_207 = ID_199, ID_206;
ID_208 = (ID_207 :> sqrt);
ID_209 = ID_208, 0;
ID_210 = (ID_209 : ==);
ID_211 = ID_210, ID_69;
ID_212 = (ID_211 : select2);
ID_213 = (ID_0 : \(x795).(\(x796).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x795 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x796 : *) : +)~_));
ID_214 = 7.3f, ID_213;
ID_215 = (ID_214 : -);
ID_216 = 0, ID_215;
ID_217 = (ID_216 : -);
ID_218 = (ID_0 : \(x797).(\(x798).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x797 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x798 : *) : +)~_));
ID_219 = 7.3f, ID_218;
ID_220 = (ID_219 : -);
ID_221 = 0, ID_220;
ID_222 = (ID_221 : -);
ID_223 = ID_222, 2;
ID_224 = (ID_223 : pow);
ID_225 = (ID_6 : \(x799).(\(x800).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x799 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x800 : *) : +)~_));
ID_226 = -6.7f, ID_225;
ID_227 = (ID_226 : -);
ID_228 = 0, ID_227;
ID_229 = (ID_228 : -);
ID_230 = ID_229, 2;
ID_231 = (ID_230 : pow);
ID_232 = ID_224, ID_231;
ID_233 = (ID_232 :> sqrt);
ID_234 = ID_233, 0;
ID_235 = (ID_234 : <);
ID_236 = ID_233, 0.0001f;
ID_237 = (ID_236 : max);
ID_238 = ID_237, ID_233;
ID_239 = ID_235, ID_238;
ID_240 = (ID_239 : select2);
ID_241 = ID_217, ID_240;
ID_242 = (ID_241 : /);
ID_243 = ID_242, 0;
ID_244 = ID_212, ID_243;
ID_245 = (ID_244 : select2);
ID_246 = ID_177, ID_245;
ID_247 = (ID_246 : *);
ID_248 = (ID_0 : \(x801).(\(x802).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x801 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x802 : *) : +)~_));
ID_249 = 7.3f, ID_248;
ID_250 = (ID_249 : -);
ID_251 = 0, ID_250;
ID_252 = (ID_251 : -);
ID_253 = ID_252, 2;
ID_254 = (ID_253 : pow);
ID_255 = (ID_6 : \(x803).(\(x804).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x803 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x804 : *) : +)~_));
ID_256 = -6.7f, ID_255;
ID_257 = (ID_256 : -);
ID_258 = 0, ID_257;
ID_259 = (ID_258 : -);
ID_260 = ID_259, 2;
ID_261 = (ID_260 : pow);
ID_262 = ID_254, ID_261;
ID_263 = (ID_262 :> sqrt);
ID_264 = ID_263, 0;
ID_265 = (ID_264 : ==);
ID_266 = ID_265, ID_69;
ID_267 = (ID_266 : select2);
ID_268 = (ID_6 : \(x805).(\(x806).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x805 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x806 : *) : +)~_));
ID_269 = -6.7f, ID_268;
ID_270 = (ID_269 : -);
ID_271 = 0, ID_270;
ID_272 = (ID_271 : -);
ID_273 = (ID_0 : \(x807).(\(x808).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x807 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x808 : *) : +)~_));
ID_274 = 7.3f, ID_273;
ID_275 = (ID_274 : -);
ID_276 = 0, ID_275;
ID_277 = (ID_276 : -);
ID_278 = ID_277, 2;
ID_279 = (ID_278 : pow);
ID_280 = (ID_6 : \(x809).(\(x810).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x809 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x810 : *) : +)~_));
ID_281 = -6.7f, ID_280;
ID_282 = (ID_281 : -);
ID_283 = 0, ID_282;
ID_284 = (ID_283 : -);
ID_285 = ID_284, 2;
ID_286 = (ID_285 : pow);
ID_287 = ID_279, ID_286;
ID_288 = (ID_287 :> sqrt);
ID_289 = ID_288, 0;
ID_290 = (ID_289 : <);
ID_291 = ID_288, 0.0001f;
ID_292 = (ID_291 : max);
ID_293 = ID_292, ID_288;
ID_294 = ID_290, ID_293;
ID_295 = (ID_294 : select2);
ID_296 = ID_272, ID_295;
ID_297 = (ID_296 : /);
ID_298 = ID_297, 0;
ID_299 = ID_267, ID_298;
ID_300 = (ID_299 : select2);
ID_301 = ID_184, ID_300;
ID_302 = (ID_301 : *);
ID_303 = ID_247, ID_302;
ID_304 = (ID_303 :> _);
ID_305 = (ID_0 : \(x811).(\(x812).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x811 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x812 : *) : +)~_));
ID_306 = 7.3f, ID_305;
ID_307 = (ID_306 : -);
ID_308 = 0, ID_307;
ID_309 = (ID_308 : -);
ID_310 = ID_309, 2;
ID_311 = (ID_310 : pow);
ID_312 = (ID_6 : \(x813).(\(x814).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x813 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x814 : *) : +)~_));
ID_313 = -6.7f, ID_312;
ID_314 = (ID_313 : -);
ID_315 = 0, ID_314;
ID_316 = (ID_315 : -);
ID_317 = ID_316, 2;
ID_318 = (ID_317 : pow);
ID_319 = ID_311, ID_318;
ID_320 = (ID_319 :> sqrt);
ID_321 = ID_320, 0;
ID_322 = (ID_321 : ==);
ID_323 = ID_322, ID_69;
ID_324 = (ID_323 : select2);
ID_325 = (ID_0 : \(x815).(\(x816).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x815 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x816 : *) : +)~_));
ID_326 = 7.3f, ID_325;
ID_327 = (ID_326 : -);
ID_328 = 0, ID_327;
ID_329 = (ID_328 : -);
ID_330 = (ID_0 : \(x817).(\(x818).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x817 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x818 : *) : +)~_));
ID_331 = 7.3f, ID_330;
ID_332 = (ID_331 : -);
ID_333 = 0, ID_332;
ID_334 = (ID_333 : -);
ID_335 = ID_334, 2;
ID_336 = (ID_335 : pow);
ID_337 = (ID_6 : \(x819).(\(x820).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x819 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x820 : *) : +)~_));
ID_338 = -6.7f, ID_337;
ID_339 = (ID_338 : -);
ID_340 = 0, ID_339;
ID_341 = (ID_340 : -);
ID_342 = ID_341, 2;
ID_343 = (ID_342 : pow);
ID_344 = ID_336, ID_343;
ID_345 = (ID_344 :> sqrt);
ID_346 = ID_345, 0;
ID_347 = (ID_346 : <);
ID_348 = ID_345, 0.0001f;
ID_349 = (ID_348 : max);
ID_350 = ID_349, ID_345;
ID_351 = ID_347, ID_350;
ID_352 = (ID_351 : select2);
ID_353 = ID_329, ID_352;
ID_354 = (ID_353 : /);
ID_355 = ID_354, 0;
ID_356 = ID_324, ID_355;
ID_357 = (ID_356 : select2);
ID_358 = ID_357, 2;
ID_359 = (ID_358 : pow);
ID_360 = (ID_0 : \(x821).(\(x822).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x821 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x822 : *) : +)~_));
ID_361 = 7.3f, ID_360;
ID_362 = (ID_361 : -);
ID_363 = 0, ID_362;
ID_364 = (ID_363 : -);
ID_365 = ID_364, 2;
ID_366 = (ID_365 : pow);
ID_367 = (ID_6 : \(x823).(\(x824).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x823 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x824 : *) : +)~_));
ID_368 = -6.7f, ID_367;
ID_369 = (ID_368 : -);
ID_370 = 0, ID_369;
ID_371 = (ID_370 : -);
ID_372 = ID_371, 2;
ID_373 = (ID_372 : pow);
ID_374 = ID_366, ID_373;
ID_375 = (ID_374 :> sqrt);
ID_376 = ID_375, 0;
ID_377 = (ID_376 : ==);
ID_378 = ID_377, ID_69;
ID_379 = (ID_378 : select2);
ID_380 = (ID_6 : \(x825).(\(x826).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x825 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x826 : *) : +)~_));
ID_381 = -6.7f, ID_380;
ID_382 = (ID_381 : -);
ID_383 = 0, ID_382;
ID_384 = (ID_383 : -);
ID_385 = (ID_0 : \(x827).(\(x828).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x827 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x828 : *) : +)~_));
ID_386 = 7.3f, ID_385;
ID_387 = (ID_386 : -);
ID_388 = 0, ID_387;
ID_389 = (ID_388 : -);
ID_390 = ID_389, 2;
ID_391 = (ID_390 : pow);
ID_392 = (ID_6 : \(x829).(\(x830).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x829 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x830 : *) : +)~_));
ID_393 = -6.7f, ID_392;
ID_394 = (ID_393 : -);
ID_395 = 0, ID_394;
ID_396 = (ID_395 : -);
ID_397 = ID_396, 2;
ID_398 = (ID_397 : pow);
ID_399 = ID_391, ID_398;
ID_400 = (ID_399 :> sqrt);
ID_401 = ID_400, 0;
ID_402 = (ID_401 : <);
ID_403 = ID_400, 0.0001f;
ID_404 = (ID_403 : max);
ID_405 = ID_404, ID_400;
ID_406 = ID_402, ID_405;
ID_407 = (ID_406 : select2);
ID_408 = ID_384, ID_407;
ID_409 = (ID_408 : /);
ID_410 = ID_409, 0;
ID_411 = ID_379, ID_410;
ID_412 = (ID_411 : select2);
ID_413 = ID_412, 2;
ID_414 = (ID_413 : pow);
ID_415 = ID_359, ID_414;
ID_416 = (ID_415 :> sqrt);
ID_417 = ID_416, ID_188;
ID_418 = (ID_417 : *);
ID_419 = ID_418, 0;
ID_420 = (ID_419 : <);
ID_421 = ID_418, 0.0001f;
ID_422 = (ID_421 : max);
ID_423 = ID_422, ID_418;
ID_424 = ID_420, ID_423;
ID_425 = (ID_424 : select2);
ID_426 = ID_304, ID_425;
ID_427 = (ID_426 : /);
ID_428 = ID_427, 0;
ID_429 = ID_192, ID_428;
ID_430 = (ID_429 : select2);
ID_431 = ID_430, 0;
ID_432 = (ID_431 : ==);
ID_433 = (ID_419 : ==);
ID_434 = (ID_0 : \(x831).(\(x832).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x831 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x832 : *) : +)~_));
ID_435 = 7.3f, ID_434;
ID_436 = (ID_435 : -);
ID_437 = 0, ID_436;
ID_438 = (ID_437 : -);
ID_439 = ID_438, 2;
ID_440 = (ID_439 : pow);
ID_441 = (ID_6 : \(x833).(\(x834).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x833 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x834 : *) : +)~_));
ID_442 = -6.7f, ID_441;
ID_443 = (ID_442 : -);
ID_444 = 0, ID_443;
ID_445 = (ID_444 : -);
ID_446 = ID_445, 2;
ID_447 = (ID_446 : pow);
ID_448 = ID_440, ID_447;
ID_449 = (ID_448 :> sqrt);
ID_450 = ID_449, 0;
ID_451 = (ID_450 : ==);
ID_452 = ID_451, ID_69;
ID_453 = (ID_452 : select2);
ID_454 = (ID_0 : \(x835).(\(x836).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x835 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x836 : *) : +)~_));
ID_455 = 7.3f, ID_454;
ID_456 = (ID_455 : -);
ID_457 = 0, ID_456;
ID_458 = (ID_457 : -);
ID_459 = (ID_0 : \(x837).(\(x838).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x837 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x838 : *) : +)~_));
ID_460 = 7.3f, ID_459;
ID_461 = (ID_460 : -);
ID_462 = 0, ID_461;
ID_463 = (ID_462 : -);
ID_464 = ID_463, 2;
ID_465 = (ID_464 : pow);
ID_466 = (ID_6 : \(x839).(\(x840).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x839 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x840 : *) : +)~_));
ID_467 = -6.7f, ID_466;
ID_468 = (ID_467 : -);
ID_469 = 0, ID_468;
ID_470 = (ID_469 : -);
ID_471 = ID_470, 2;
ID_472 = (ID_471 : pow);
ID_473 = ID_465, ID_472;
ID_474 = (ID_473 :> sqrt);
ID_475 = ID_474, 0;
ID_476 = (ID_475 : <);
ID_477 = ID_474, 0.0001f;
ID_478 = (ID_477 : max);
ID_479 = ID_478, ID_474;
ID_480 = ID_476, ID_479;
ID_481 = (ID_480 : select2);
ID_482 = ID_458, ID_481;
ID_483 = (ID_482 : /);
ID_484 = ID_483, 0;
ID_485 = ID_453, ID_484;
ID_486 = (ID_485 : select2);
ID_487 = ID_177, ID_486;
ID_488 = (ID_487 : *);
ID_489 = (ID_0 : \(x841).(\(x842).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x841 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x842 : *) : +)~_));
ID_490 = 7.3f, ID_489;
ID_491 = (ID_490 : -);
ID_492 = 0, ID_491;
ID_493 = (ID_492 : -);
ID_494 = ID_493, 2;
ID_495 = (ID_494 : pow);
ID_496 = (ID_6 : \(x843).(\(x844).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x843 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x844 : *) : +)~_));
ID_497 = -6.7f, ID_496;
ID_498 = (ID_497 : -);
ID_499 = 0, ID_498;
ID_500 = (ID_499 : -);
ID_501 = ID_500, 2;
ID_502 = (ID_501 : pow);
ID_503 = ID_495, ID_502;
ID_504 = (ID_503 :> sqrt);
ID_505 = ID_504, 0;
ID_506 = (ID_505 : ==);
ID_507 = ID_506, ID_69;
ID_508 = (ID_507 : select2);
ID_509 = (ID_6 : \(x845).(\(x846).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x845 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x846 : *) : +)~_));
ID_510 = -6.7f, ID_509;
ID_511 = (ID_510 : -);
ID_512 = 0, ID_511;
ID_513 = (ID_512 : -);
ID_514 = (ID_0 : \(x847).(\(x848).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x847 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x848 : *) : +)~_));
ID_515 = 7.3f, ID_514;
ID_516 = (ID_515 : -);
ID_517 = 0, ID_516;
ID_518 = (ID_517 : -);
ID_519 = ID_518, 2;
ID_520 = (ID_519 : pow);
ID_521 = (ID_6 : \(x849).(\(x850).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x849 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x850 : *) : +)~_));
ID_522 = -6.7f, ID_521;
ID_523 = (ID_522 : -);
ID_524 = 0, ID_523;
ID_525 = (ID_524 : -);
ID_526 = ID_525, 2;
ID_527 = (ID_526 : pow);
ID_528 = ID_520, ID_527;
ID_529 = (ID_528 :> sqrt);
ID_530 = ID_529, 0;
ID_531 = (ID_530 : <);
ID_532 = ID_529, 0.0001f;
ID_533 = (ID_532 : max);
ID_534 = ID_533, ID_529;
ID_535 = ID_531, ID_534;
ID_536 = (ID_535 : select2);
ID_537 = ID_513, ID_536;
ID_538 = (ID_537 : /);
ID_539 = ID_538, 0;
ID_540 = ID_508, ID_539;
ID_541 = (ID_540 : select2);
ID_542 = ID_184, ID_541;
ID_543 = (ID_542 : *);
ID_544 = ID_488, ID_543;
ID_545 = (ID_544 :> _);
ID_546 = (ID_0 : \(x851).(\(x852).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x851 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x852 : *) : +)~_));
ID_547 = 7.3f, ID_546;
ID_548 = (ID_547 : -);
ID_549 = 0, ID_548;
ID_550 = (ID_549 : -);
ID_551 = ID_550, 2;
ID_552 = (ID_551 : pow);
ID_553 = (ID_6 : \(x853).(\(x854).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x853 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x854 : *) : +)~_));
ID_554 = -6.7f, ID_553;
ID_555 = (ID_554 : -);
ID_556 = 0, ID_555;
ID_557 = (ID_556 : -);
ID_558 = ID_557, 2;
ID_559 = (ID_558 : pow);
ID_560 = ID_552, ID_559;
ID_561 = (ID_560 :> sqrt);
ID_562 = ID_561, 0;
ID_563 = (ID_562 : ==);
ID_564 = ID_563, ID_69;
ID_565 = (ID_564 : select2);
ID_566 = (ID_0 : \(x855).(\(x856).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x855 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x856 : *) : +)~_));
ID_567 = 7.3f, ID_566;
ID_568 = (ID_567 : -);
ID_569 = 0, ID_568;
ID_570 = (ID_569 : -);
ID_571 = (ID_0 : \(x857).(\(x858).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x857 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x858 : *) : +)~_));
ID_572 = 7.3f, ID_571;
ID_573 = (ID_572 : -);
ID_574 = 0, ID_573;
ID_575 = (ID_574 : -);
ID_576 = ID_575, 2;
ID_577 = (ID_576 : pow);
ID_578 = (ID_6 : \(x859).(\(x860).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x859 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x860 : *) : +)~_));
ID_579 = -6.7f, ID_578;
ID_580 = (ID_579 : -);
ID_581 = 0, ID_580;
ID_582 = (ID_581 : -);
ID_583 = ID_582, 2;
ID_584 = (ID_583 : pow);
ID_585 = ID_577, ID_584;
ID_586 = (ID_585 :> sqrt);
ID_587 = ID_586, 0;
ID_588 = (ID_587 : <);
ID_589 = ID_586, 0.0001f;
ID_590 = (ID_589 : max);
ID_591 = ID_590, ID_586;
ID_592 = ID_588, ID_591;
ID_593 = (ID_592 : select2);
ID_594 = ID_570, ID_593;
ID_595 = (ID_594 : /);
ID_596 = ID_595, 0;
ID_597 = ID_565, ID_596;
ID_598 = (ID_597 : select2);
ID_599 = ID_598, 2;
ID_600 = (ID_599 : pow);
ID_601 = (ID_0 : \(x861).(\(x862).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x861 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x862 : *) : +)~_));
ID_602 = 7.3f, ID_601;
ID_603 = (ID_602 : -);
ID_604 = 0, ID_603;
ID_605 = (ID_604 : -);
ID_606 = ID_605, 2;
ID_607 = (ID_606 : pow);
ID_608 = (ID_6 : \(x863).(\(x864).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x863 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x864 : *) : +)~_));
ID_609 = -6.7f, ID_608;
ID_610 = (ID_609 : -);
ID_611 = 0, ID_610;
ID_612 = (ID_611 : -);
ID_613 = ID_612, 2;
ID_614 = (ID_613 : pow);
ID_615 = ID_607, ID_614;
ID_616 = (ID_615 :> sqrt);
ID_617 = ID_616, 0;
ID_618 = (ID_617 : ==);
ID_619 = ID_618, ID_69;
ID_620 = (ID_619 : select2);
ID_621 = (ID_6 : \(x865).(\(x866).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x865 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x866 : *) : +)~_));
ID_622 = -6.7f, ID_621;
ID_623 = (ID_622 : -);
ID_624 = 0, ID_623;
ID_625 = (ID_624 : -);
ID_626 = (ID_0 : \(x867).(\(x868).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x867 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x868 : *) : +)~_));
ID_627 = 7.3f, ID_626;
ID_628 = (ID_627 : -);
ID_629 = 0, ID_628;
ID_630 = (ID_629 : -);
ID_631 = ID_630, 2;
ID_632 = (ID_631 : pow);
ID_633 = (ID_6 : \(x869).(\(x870).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x869 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x870 : *) : +)~_));
ID_634 = -6.7f, ID_633;
ID_635 = (ID_634 : -);
ID_636 = 0, ID_635;
ID_637 = (ID_636 : -);
ID_638 = ID_637, 2;
ID_639 = (ID_638 : pow);
ID_640 = ID_632, ID_639;
ID_641 = (ID_640 :> sqrt);
ID_642 = ID_641, 0;
ID_643 = (ID_642 : <);
ID_644 = ID_641, 0.0001f;
ID_645 = (ID_644 : max);
ID_646 = ID_645, ID_641;
ID_647 = ID_643, ID_646;
ID_648 = (ID_647 : select2);
ID_649 = ID_625, ID_648;
ID_650 = (ID_649 : /);
ID_651 = ID_650, 0;
ID_652 = ID_620, ID_651;
ID_653 = (ID_652 : select2);
ID_654 = ID_653, 2;
ID_655 = (ID_654 : pow);
ID_656 = ID_600, ID_655;
ID_657 = (ID_656 :> sqrt);
ID_658 = ID_657, ID_188;
ID_659 = (ID_658 : *);
ID_660 = ID_659, 0;
ID_661 = (ID_660 : <);
ID_662 = ID_659, 0.0001f;
ID_663 = (ID_662 : max);
ID_664 = ID_663, ID_659;
ID_665 = ID_661, ID_664;
ID_666 = (ID_665 : select2);
ID_667 = ID_545, ID_666;
ID_668 = (ID_667 : /);
ID_669 = ID_668, 0;
ID_670 = ID_433, ID_669;
ID_671 = (ID_670 : select2);
ID_672 = ID_671, 0;
ID_673 = (ID_672 : <);
ID_674 = ID_671, 0.0001f;
ID_675 = (ID_674 : max);
ID_676 = ID_675, ID_671;
ID_677 = ID_673, ID_676;
ID_678 = ID_677 : select2;
ID_679 = (ID_678 : acos);
ID_680 = ID_679, 0;
ID_681 = ID_432, ID_680;
ID_682 = (ID_681 : select2);
ID_683 = ID_50, ID_682;
ID_684 = (ID_683 : *);
ID_685 = ID_684, 0;
ID_686 = ID_685 : +;
ID_687 = (ID_686 : sin);
ID_688 = ID_38, 0;
ID_689 = (ID_688 : *);
ID_690 = (ID_14 : \(x769).(\(x770).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x769 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x770 : *) : +)~_));
ID_691 = ID_690, 7.3f;
ID_692 = (ID_691 : *);
ID_693 = ID_689, ID_692;
ID_694 = (ID_693 : -);
ID_695 = ID_694, 0;
ID_696 = (ID_695 : <);
ID_697 = -1, 1;
ID_698 = ID_696, ID_697;
ID_699 = (ID_698 : select2);
ID_700 = (ID_14 : \(x871).(\(x872).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x871 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x872 : *) : +)~_));
ID_701 = 0, ID_700;
ID_702 = (ID_701 : -);
ID_703 = 0, ID_702;
ID_704 = (ID_703 : -);
ID_705 = ID_704, 2;
ID_706 = (ID_705 : pow);
ID_707 = ID_57, ID_706;
ID_708 = (ID_707 :> sqrt);
ID_709 = ID_708, 0;
ID_710 = (ID_709 : ==);
ID_711 = ID_710, ID_69;
ID_712 = (ID_711 : select2);
ID_713 = (ID_0 : \(x873).(\(x874).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x873 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x874 : *) : +)~_));
ID_714 = 7.3f, ID_713;
ID_715 = (ID_714 : -);
ID_716 = 0, ID_715;
ID_717 = (ID_716 : -);
ID_718 = ID_717, 2;
ID_719 = (ID_718 : pow);
ID_720 = (ID_14 : \(x875).(\(x876).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x875 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x876 : *) : +)~_));
ID_721 = 0, ID_720;
ID_722 = (ID_721 : -);
ID_723 = 0, ID_722;
ID_724 = (ID_723 : -);
ID_725 = ID_724, 2;
ID_726 = (ID_725 : pow);
ID_727 = ID_719, ID_726;
ID_728 = (ID_727 :> sqrt);
ID_729 = ID_728, 0;
ID_730 = (ID_729 : <);
ID_731 = ID_728, 0.0001f;
ID_732 = (ID_731 : max);
ID_733 = ID_732, ID_728;
ID_734 = ID_730, ID_733;
ID_735 = (ID_734 : select2);
ID_736 = ID_76, ID_735;
ID_737 = (ID_736 : /);
ID_738 = ID_737, 0;
ID_739 = ID_712, ID_738;
ID_740 = (ID_739 : select2);
ID_741 = ID_740, 2;
ID_742 = (ID_741 : pow);
ID_743 = (ID_14 : \(x877).(\(x878).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x877 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x878 : *) : +)~_));
ID_744 = 0, ID_743;
ID_745 = (ID_744 : -);
ID_746 = 0, ID_745;
ID_747 = (ID_746 : -);
ID_748 = ID_747, 2;
ID_749 = (ID_748 : pow);
ID_750 = ID_113, ID_749;
ID_751 = (ID_750 :> sqrt);
ID_752 = ID_751, 0;
ID_753 = (ID_752 : ==);
ID_754 = ID_753, ID_69;
ID_755 = (ID_754 : select2);
ID_756 = (ID_14 : \(x879).(\(x880).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x879 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x880 : *) : +)~_));
ID_757 = 0, ID_756;
ID_758 = (ID_757 : -);
ID_759 = 0, ID_758;
ID_760 = (ID_759 : -);
ID_761 = (ID_0 : \(x881).(\(x882).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x881 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x882 : *) : +)~_));
ID_762 = 7.3f, ID_761;
ID_763 = (ID_762 : -);
ID_764 = 0, ID_763;
ID_765 = (ID_764 : -);
ID_766 = ID_765, 2;
ID_767 = (ID_766 : pow);
ID_768 = (ID_14 : \(x883).(\(x884).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x883 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x884 : *) : +)~_));
ID_769 = 0, ID_768;
ID_770 = (ID_769 : -);
ID_771 = 0, ID_770;
ID_772 = (ID_771 : -);
ID_773 = ID_772, 2;
ID_774 = (ID_773 : pow);
ID_775 = ID_767, ID_774;
ID_776 = (ID_775 :> sqrt);
ID_777 = ID_776, 0;
ID_778 = (ID_777 : <);
ID_779 = ID_776, 0.0001f;
ID_780 = (ID_779 : max);
ID_781 = ID_780, ID_776;
ID_782 = ID_778, ID_781;
ID_783 = (ID_782 : select2);
ID_784 = ID_760, ID_783;
ID_785 = (ID_784 : /);
ID_786 = ID_785, 0;
ID_787 = ID_755, ID_786;
ID_788 = (ID_787 : select2);
ID_789 = ID_788, 2;
ID_790 = (ID_789 : pow);
ID_791 = ID_742, ID_790;
ID_792 = (ID_791 :> sqrt);
ID_793 = 53.29f, 0;
ID_794 = (ID_793 :> sqrt);
ID_795 = ID_794, 0;
ID_796 = (ID_795 : ==);
ID_797 = ID_796, ID_69;
ID_798 = (ID_797 : select2);
ID_799 = 7.3f, 7.3f;
ID_800 = 0, ID_799;
ID_801 = (ID_800 : select2);
ID_802 = 7.3f, ID_801;
ID_803 = (ID_802 : /);
ID_804 = ID_803, 0;
ID_805 = ID_798, ID_804;
ID_806 = (ID_805 : select2);
ID_807 = ID_806, 2;
ID_808 = (ID_807 : pow);
ID_809 = 0, ID_801;
ID_810 = (ID_809 : /);
ID_811 = ID_810, 0;
ID_812 = ID_798, ID_811;
ID_813 = (ID_812 : select2);
ID_814 = ID_813, 2;
ID_815 = (ID_814 : pow);
ID_816 = ID_808, ID_815;
ID_817 = (ID_816 :> sqrt);
ID_818 = ID_792, ID_817;
ID_819 = (ID_818 : *);
ID_820 = ID_819, 0;
ID_821 = (ID_820 : ==);
ID_822 = (ID_14 : \(x885).(\(x886).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x885 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x886 : *) : +)~_));
ID_823 = 0, ID_822;
ID_824 = (ID_823 : -);
ID_825 = 0, ID_824;
ID_826 = (ID_825 : -);
ID_827 = ID_826, 2;
ID_828 = (ID_827 : pow);
ID_829 = ID_199, ID_828;
ID_830 = (ID_829 :> sqrt);
ID_831 = ID_830, 0;
ID_832 = (ID_831 : ==);
ID_833 = ID_832, ID_69;
ID_834 = (ID_833 : select2);
ID_835 = (ID_0 : \(x887).(\(x888).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x887 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x888 : *) : +)~_));
ID_836 = 7.3f, ID_835;
ID_837 = (ID_836 : -);
ID_838 = 0, ID_837;
ID_839 = (ID_838 : -);
ID_840 = ID_839, 2;
ID_841 = (ID_840 : pow);
ID_842 = (ID_14 : \(x889).(\(x890).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x889 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x890 : *) : +)~_));
ID_843 = 0, ID_842;
ID_844 = (ID_843 : -);
ID_845 = 0, ID_844;
ID_846 = (ID_845 : -);
ID_847 = ID_846, 2;
ID_848 = (ID_847 : pow);
ID_849 = ID_841, ID_848;
ID_850 = (ID_849 :> sqrt);
ID_851 = ID_850, 0;
ID_852 = (ID_851 : <);
ID_853 = ID_850, 0.0001f;
ID_854 = (ID_853 : max);
ID_855 = ID_854, ID_850;
ID_856 = ID_852, ID_855;
ID_857 = (ID_856 : select2);
ID_858 = ID_217, ID_857;
ID_859 = (ID_858 : /);
ID_860 = ID_859, 0;
ID_861 = ID_834, ID_860;
ID_862 = (ID_861 : select2);
ID_863 = ID_806, ID_862;
ID_864 = (ID_863 : *);
ID_865 = (ID_14 : \(x891).(\(x892).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x891 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x892 : *) : +)~_));
ID_866 = 0, ID_865;
ID_867 = (ID_866 : -);
ID_868 = 0, ID_867;
ID_869 = (ID_868 : -);
ID_870 = ID_869, 2;
ID_871 = (ID_870 : pow);
ID_872 = ID_254, ID_871;
ID_873 = (ID_872 :> sqrt);
ID_874 = ID_873, 0;
ID_875 = (ID_874 : ==);
ID_876 = ID_875, ID_69;
ID_877 = (ID_876 : select2);
ID_878 = (ID_14 : \(x893).(\(x894).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x893 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x894 : *) : +)~_));
ID_879 = 0, ID_878;
ID_880 = (ID_879 : -);
ID_881 = 0, ID_880;
ID_882 = (ID_881 : -);
ID_883 = (ID_0 : \(x895).(\(x896).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x895 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x896 : *) : +)~_));
ID_884 = 7.3f, ID_883;
ID_885 = (ID_884 : -);
ID_886 = 0, ID_885;
ID_887 = (ID_886 : -);
ID_888 = ID_887, 2;
ID_889 = (ID_888 : pow);
ID_890 = (ID_14 : \(x897).(\(x898).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x897 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x898 : *) : +)~_));
ID_891 = 0, ID_890;
ID_892 = (ID_891 : -);
ID_893 = 0, ID_892;
ID_894 = (ID_893 : -);
ID_895 = ID_894, 2;
ID_896 = (ID_895 : pow);
ID_897 = ID_889, ID_896;
ID_898 = (ID_897 :> sqrt);
ID_899 = ID_898, 0;
ID_900 = (ID_899 : <);
ID_901 = ID_898, 0.0001f;
ID_902 = (ID_901 : max);
ID_903 = ID_902, ID_898;
ID_904 = ID_900, ID_903;
ID_905 = (ID_904 : select2);
ID_906 = ID_882, ID_905;
ID_907 = (ID_906 : /);
ID_908 = ID_907, 0;
ID_909 = ID_877, ID_908;
ID_910 = (ID_909 : select2);
ID_911 = ID_813, ID_910;
ID_912 = (ID_911 : *);
ID_913 = ID_864, ID_912;
ID_914 = (ID_913 :> _);
ID_915 = (ID_0 : \(x899).(\(x900).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x899 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x900 : *) : +)~_));
ID_916 = 7.3f, ID_915;
ID_917 = (ID_916 : -);
ID_918 = 0, ID_917;
ID_919 = (ID_918 : -);
ID_920 = ID_919, 2;
ID_921 = (ID_920 : pow);
ID_922 = (ID_14 : \(x901).(\(x902).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x901 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x902 : *) : +)~_));
ID_923 = 0, ID_922;
ID_924 = (ID_923 : -);
ID_925 = 0, ID_924;
ID_926 = (ID_925 : -);
ID_927 = ID_926, 2;
ID_928 = (ID_927 : pow);
ID_929 = ID_921, ID_928;
ID_930 = (ID_929 :> sqrt);
ID_931 = ID_930, 0;
ID_932 = (ID_931 : ==);
ID_933 = ID_932, ID_69;
ID_934 = (ID_933 : select2);
ID_935 = (ID_0 : \(x903).(\(x904).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x903 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x904 : *) : +)~_));
ID_936 = 7.3f, ID_935;
ID_937 = (ID_936 : -);
ID_938 = 0, ID_937;
ID_939 = (ID_938 : -);
ID_940 = (ID_0 : \(x905).(\(x906).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x905 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x906 : *) : +)~_));
ID_941 = 7.3f, ID_940;
ID_942 = (ID_941 : -);
ID_943 = 0, ID_942;
ID_944 = (ID_943 : -);
ID_945 = ID_944, 2;
ID_946 = (ID_945 : pow);
ID_947 = (ID_14 : \(x907).(\(x908).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x907 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x908 : *) : +)~_));
ID_948 = 0, ID_947;
ID_949 = (ID_948 : -);
ID_950 = 0, ID_949;
ID_951 = (ID_950 : -);
ID_952 = ID_951, 2;
ID_953 = (ID_952 : pow);
ID_954 = ID_946, ID_953;
ID_955 = (ID_954 :> sqrt);
ID_956 = ID_955, 0;
ID_957 = (ID_956 : <);
ID_958 = ID_955, 0.0001f;
ID_959 = (ID_958 : max);
ID_960 = ID_959, ID_955;
ID_961 = ID_957, ID_960;
ID_962 = (ID_961 : select2);
ID_963 = ID_939, ID_962;
ID_964 = (ID_963 : /);
ID_965 = ID_964, 0;
ID_966 = ID_934, ID_965;
ID_967 = (ID_966 : select2);
ID_968 = ID_967, 2;
ID_969 = (ID_968 : pow);
ID_970 = (ID_0 : \(x909).(\(x910).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x909 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x910 : *) : +)~_));
ID_971 = 7.3f, ID_970;
ID_972 = (ID_971 : -);
ID_973 = 0, ID_972;
ID_974 = (ID_973 : -);
ID_975 = ID_974, 2;
ID_976 = (ID_975 : pow);
ID_977 = (ID_14 : \(x911).(\(x912).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x911 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x912 : *) : +)~_));
ID_978 = 0, ID_977;
ID_979 = (ID_978 : -);
ID_980 = 0, ID_979;
ID_981 = (ID_980 : -);
ID_982 = ID_981, 2;
ID_983 = (ID_982 : pow);
ID_984 = ID_976, ID_983;
ID_985 = (ID_984 :> sqrt);
ID_986 = ID_985, 0;
ID_987 = (ID_986 : ==);
ID_988 = ID_987, ID_69;
ID_989 = (ID_988 : select2);
ID_990 = (ID_14 : \(x913).(\(x914).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x913 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x914 : *) : +)~_));
ID_991 = 0, ID_990;
ID_992 = (ID_991 : -);
ID_993 = 0, ID_992;
ID_994 = (ID_993 : -);
ID_995 = (ID_0 : \(x915).(\(x916).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x915 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x916 : *) : +)~_));
ID_996 = 7.3f, ID_995;
ID_997 = (ID_996 : -);
ID_998 = 0, ID_997;
ID_999 = (ID_998 : -);
ID_1000 = ID_999, 2;
ID_1001 = (ID_1000 : pow);
ID_1002 = (ID_14 : \(x917).(\(x918).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x917 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x918 : *) : +)~_));
ID_1003 = 0, ID_1002;
ID_1004 = (ID_1003 : -);
ID_1005 = 0, ID_1004;
ID_1006 = (ID_1005 : -);
ID_1007 = ID_1006, 2;
ID_1008 = (ID_1007 : pow);
ID_1009 = ID_1001, ID_1008;
ID_1010 = (ID_1009 :> sqrt);
ID_1011 = ID_1010, 0;
ID_1012 = (ID_1011 : <);
ID_1013 = ID_1010, 0.0001f;
ID_1014 = (ID_1013 : max);
ID_1015 = ID_1014, ID_1010;
ID_1016 = ID_1012, ID_1015;
ID_1017 = (ID_1016 : select2);
ID_1018 = ID_994, ID_1017;
ID_1019 = (ID_1018 : /);
ID_1020 = ID_1019, 0;
ID_1021 = ID_989, ID_1020;
ID_1022 = (ID_1021 : select2);
ID_1023 = ID_1022, 2;
ID_1024 = (ID_1023 : pow);
ID_1025 = ID_969, ID_1024;
ID_1026 = (ID_1025 :> sqrt);
ID_1027 = ID_1026, ID_817;
ID_1028 = (ID_1027 : *);
ID_1029 = ID_1028, 0;
ID_1030 = (ID_1029 : <);
ID_1031 = ID_1028, 0.0001f;
ID_1032 = (ID_1031 : max);
ID_1033 = ID_1032, ID_1028;
ID_1034 = ID_1030, ID_1033;
ID_1035 = (ID_1034 : select2);
ID_1036 = ID_914, ID_1035;
ID_1037 = (ID_1036 : /);
ID_1038 = ID_1037, 0;
ID_1039 = ID_821, ID_1038;
ID_1040 = (ID_1039 : select2);
ID_1041 = ID_1040, 0;
ID_1042 = (ID_1041 : ==);
ID_1043 = (ID_1029 : ==);
ID_1044 = (ID_0 : \(x919).(\(x920).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x919 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x920 : *) : +)~_));
ID_1045 = 7.3f, ID_1044;
ID_1046 = (ID_1045 : -);
ID_1047 = 0, ID_1046;
ID_1048 = (ID_1047 : -);
ID_1049 = ID_1048, 2;
ID_1050 = (ID_1049 : pow);
ID_1051 = (ID_14 : \(x921).(\(x922).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x921 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x922 : *) : +)~_));
ID_1052 = 0, ID_1051;
ID_1053 = (ID_1052 : -);
ID_1054 = 0, ID_1053;
ID_1055 = (ID_1054 : -);
ID_1056 = ID_1055, 2;
ID_1057 = (ID_1056 : pow);
ID_1058 = ID_1050, ID_1057;
ID_1059 = (ID_1058 :> sqrt);
ID_1060 = ID_1059, 0;
ID_1061 = (ID_1060 : ==);
ID_1062 = ID_1061, ID_69;
ID_1063 = (ID_1062 : select2);
ID_1064 = (ID_0 : \(x923).(\(x924).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x923 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x924 : *) : +)~_));
ID_1065 = 7.3f, ID_1064;
ID_1066 = (ID_1065 : -);
ID_1067 = 0, ID_1066;
ID_1068 = (ID_1067 : -);
ID_1069 = (ID_0 : \(x925).(\(x926).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x925 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x926 : *) : +)~_));
ID_1070 = 7.3f, ID_1069;
ID_1071 = (ID_1070 : -);
ID_1072 = 0, ID_1071;
ID_1073 = (ID_1072 : -);
ID_1074 = ID_1073, 2;
ID_1075 = (ID_1074 : pow);
ID_1076 = (ID_14 : \(x927).(\(x928).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x927 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x928 : *) : +)~_));
ID_1077 = 0, ID_1076;
ID_1078 = (ID_1077 : -);
ID_1079 = 0, ID_1078;
ID_1080 = (ID_1079 : -);
ID_1081 = ID_1080, 2;
ID_1082 = (ID_1081 : pow);
ID_1083 = ID_1075, ID_1082;
ID_1084 = (ID_1083 :> sqrt);
ID_1085 = ID_1084, 0;
ID_1086 = (ID_1085 : <);
ID_1087 = ID_1084, 0.0001f;
ID_1088 = (ID_1087 : max);
ID_1089 = ID_1088, ID_1084;
ID_1090 = ID_1086, ID_1089;
ID_1091 = (ID_1090 : select2);
ID_1092 = ID_1068, ID_1091;
ID_1093 = (ID_1092 : /);
ID_1094 = ID_1093, 0;
ID_1095 = ID_1063, ID_1094;
ID_1096 = (ID_1095 : select2);
ID_1097 = ID_806, ID_1096;
ID_1098 = (ID_1097 : *);
ID_1099 = (ID_0 : \(x929).(\(x930).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x929 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x930 : *) : +)~_));
ID_1100 = 7.3f, ID_1099;
ID_1101 = (ID_1100 : -);
ID_1102 = 0, ID_1101;
ID_1103 = (ID_1102 : -);
ID_1104 = ID_1103, 2;
ID_1105 = (ID_1104 : pow);
ID_1106 = (ID_14 : \(x931).(\(x932).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x931 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x932 : *) : +)~_));
ID_1107 = 0, ID_1106;
ID_1108 = (ID_1107 : -);
ID_1109 = 0, ID_1108;
ID_1110 = (ID_1109 : -);
ID_1111 = ID_1110, 2;
ID_1112 = (ID_1111 : pow);
ID_1113 = ID_1105, ID_1112;
ID_1114 = (ID_1113 :> sqrt);
ID_1115 = ID_1114, 0;
ID_1116 = (ID_1115 : ==);
ID_1117 = ID_1116, ID_69;
ID_1118 = (ID_1117 : select2);
ID_1119 = (ID_14 : \(x933).(\(x934).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x933 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x934 : *) : +)~_));
ID_1120 = 0, ID_1119;
ID_1121 = (ID_1120 : -);
ID_1122 = 0, ID_1121;
ID_1123 = (ID_1122 : -);
ID_1124 = (ID_0 : \(x935).(\(x936).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x935 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x936 : *) : +)~_));
ID_1125 = 7.3f, ID_1124;
ID_1126 = (ID_1125 : -);
ID_1127 = 0, ID_1126;
ID_1128 = (ID_1127 : -);
ID_1129 = ID_1128, 2;
ID_1130 = (ID_1129 : pow);
ID_1131 = (ID_14 : \(x937).(\(x938).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x937 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x938 : *) : +)~_));
ID_1132 = 0, ID_1131;
ID_1133 = (ID_1132 : -);
ID_1134 = 0, ID_1133;
ID_1135 = (ID_1134 : -);
ID_1136 = ID_1135, 2;
ID_1137 = (ID_1136 : pow);
ID_1138 = ID_1130, ID_1137;
ID_1139 = (ID_1138 :> sqrt);
ID_1140 = ID_1139, 0;
ID_1141 = (ID_1140 : <);
ID_1142 = ID_1139, 0.0001f;
ID_1143 = (ID_1142 : max);
ID_1144 = ID_1143, ID_1139;
ID_1145 = ID_1141, ID_1144;
ID_1146 = (ID_1145 : select2);
ID_1147 = ID_1123, ID_1146;
ID_1148 = (ID_1147 : /);
ID_1149 = ID_1148, 0;
ID_1150 = ID_1118, ID_1149;
ID_1151 = (ID_1150 : select2);
ID_1152 = ID_813, ID_1151;
ID_1153 = (ID_1152 : *);
ID_1154 = ID_1098, ID_1153;
ID_1155 = (ID_1154 :> _);
ID_1156 = (ID_0 : \(x939).(\(x940).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x939 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x940 : *) : +)~_));
ID_1157 = 7.3f, ID_1156;
ID_1158 = (ID_1157 : -);
ID_1159 = 0, ID_1158;
ID_1160 = (ID_1159 : -);
ID_1161 = ID_1160, 2;
ID_1162 = (ID_1161 : pow);
ID_1163 = (ID_14 : \(x941).(\(x942).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x941 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x942 : *) : +)~_));
ID_1164 = 0, ID_1163;
ID_1165 = (ID_1164 : -);
ID_1166 = 0, ID_1165;
ID_1167 = (ID_1166 : -);
ID_1168 = ID_1167, 2;
ID_1169 = (ID_1168 : pow);
ID_1170 = ID_1162, ID_1169;
ID_1171 = (ID_1170 :> sqrt);
ID_1172 = ID_1171, 0;
ID_1173 = (ID_1172 : ==);
ID_1174 = ID_1173, ID_69;
ID_1175 = (ID_1174 : select2);
ID_1176 = (ID_0 : \(x943).(\(x944).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x943 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x944 : *) : +)~_));
ID_1177 = 7.3f, ID_1176;
ID_1178 = (ID_1177 : -);
ID_1179 = 0, ID_1178;
ID_1180 = (ID_1179 : -);
ID_1181 = (ID_0 : \(x945).(\(x946).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x945 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x946 : *) : +)~_));
ID_1182 = 7.3f, ID_1181;
ID_1183 = (ID_1182 : -);
ID_1184 = 0, ID_1183;
ID_1185 = (ID_1184 : -);
ID_1186 = ID_1185, 2;
ID_1187 = (ID_1186 : pow);
ID_1188 = (ID_14 : \(x947).(\(x948).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x947 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x948 : *) : +)~_));
ID_1189 = 0, ID_1188;
ID_1190 = (ID_1189 : -);
ID_1191 = 0, ID_1190;
ID_1192 = (ID_1191 : -);
ID_1193 = ID_1192, 2;
ID_1194 = (ID_1193 : pow);
ID_1195 = ID_1187, ID_1194;
ID_1196 = (ID_1195 :> sqrt);
ID_1197 = ID_1196, 0;
ID_1198 = (ID_1197 : <);
ID_1199 = ID_1196, 0.0001f;
ID_1200 = (ID_1199 : max);
ID_1201 = ID_1200, ID_1196;
ID_1202 = ID_1198, ID_1201;
ID_1203 = (ID_1202 : select2);
ID_1204 = ID_1180, ID_1203;
ID_1205 = (ID_1204 : /);
ID_1206 = ID_1205, 0;
ID_1207 = ID_1175, ID_1206;
ID_1208 = (ID_1207 : select2);
ID_1209 = ID_1208, 2;
ID_1210 = (ID_1209 : pow);
ID_1211 = (ID_0 : \(x949).(\(x950).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x949 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x950 : *) : +)~_));
ID_1212 = 7.3f, ID_1211;
ID_1213 = (ID_1212 : -);
ID_1214 = 0, ID_1213;
ID_1215 = (ID_1214 : -);
ID_1216 = ID_1215, 2;
ID_1217 = (ID_1216 : pow);
ID_1218 = (ID_14 : \(x951).(\(x952).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x951 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x952 : *) : +)~_));
ID_1219 = 0, ID_1218;
ID_1220 = (ID_1219 : -);
ID_1221 = 0, ID_1220;
ID_1222 = (ID_1221 : -);
ID_1223 = ID_1222, 2;
ID_1224 = (ID_1223 : pow);
ID_1225 = ID_1217, ID_1224;
ID_1226 = (ID_1225 :> sqrt);
ID_1227 = ID_1226, 0;
ID_1228 = (ID_1227 : ==);
ID_1229 = ID_1228, ID_69;
ID_1230 = (ID_1229 : select2);
ID_1231 = (ID_14 : \(x953).(\(x954).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x953 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x954 : *) : +)~_));
ID_1232 = 0, ID_1231;
ID_1233 = (ID_1232 : -);
ID_1234 = 0, ID_1233;
ID_1235 = (ID_1234 : -);
ID_1236 = (ID_0 : \(x955).(\(x956).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x955 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x956 : *) : +)~_));
ID_1237 = 7.3f, ID_1236;
ID_1238 = (ID_1237 : -);
ID_1239 = 0, ID_1238;
ID_1240 = (ID_1239 : -);
ID_1241 = ID_1240, 2;
ID_1242 = (ID_1241 : pow);
ID_1243 = (ID_14 : \(x957).(\(x958).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x957 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x958 : *) : +)~_));
ID_1244 = 0, ID_1243;
ID_1245 = (ID_1244 : -);
ID_1246 = 0, ID_1245;
ID_1247 = (ID_1246 : -);
ID_1248 = ID_1247, 2;
ID_1249 = (ID_1248 : pow);
ID_1250 = ID_1242, ID_1249;
ID_1251 = (ID_1250 :> sqrt);
ID_1252 = ID_1251, 0;
ID_1253 = (ID_1252 : <);
ID_1254 = ID_1251, 0.0001f;
ID_1255 = (ID_1254 : max);
ID_1256 = ID_1255, ID_1251;
ID_1257 = ID_1253, ID_1256;
ID_1258 = (ID_1257 : select2);
ID_1259 = ID_1235, ID_1258;
ID_1260 = (ID_1259 : /);
ID_1261 = ID_1260, 0;
ID_1262 = ID_1230, ID_1261;
ID_1263 = (ID_1262 : select2);
ID_1264 = ID_1263, 2;
ID_1265 = (ID_1264 : pow);
ID_1266 = ID_1210, ID_1265;
ID_1267 = (ID_1266 :> sqrt);
ID_1268 = ID_1267, ID_817;
ID_1269 = (ID_1268 : *);
ID_1270 = ID_1269, 0;
ID_1271 = (ID_1270 : <);
ID_1272 = ID_1269, 0.0001f;
ID_1273 = (ID_1272 : max);
ID_1274 = ID_1273, ID_1269;
ID_1275 = ID_1271, ID_1274;
ID_1276 = (ID_1275 : select2);
ID_1277 = ID_1155, ID_1276;
ID_1278 = (ID_1277 : /);
ID_1279 = ID_1278, 0;
ID_1280 = ID_1043, ID_1279;
ID_1281 = (ID_1280 : select2);
ID_1282 = ID_1281, 0;
ID_1283 = (ID_1282 : <);
ID_1284 = ID_1281, 0.0001f;
ID_1285 = (ID_1284 : max);
ID_1286 = ID_1285, ID_1281;
ID_1287 = ID_1283, ID_1286;
ID_1288 = ID_1287 : select2;
ID_1289 = (ID_1288 : acos);
ID_1290 = ID_1289, 0;
ID_1291 = ID_1042, ID_1290;
ID_1292 = (ID_1291 : select2);
ID_1293 = ID_699, ID_1292;
ID_1294 = ID_1293 : *;
ID_1295 = (ID_1294 : cos);
ID_1296 = ID_687, ID_1295;
ID_1297 = (ID_1296 : *);
ID_1298 = _, ID_1297;
ID_1299 = (ID_1298 : *);
ID_1300 = (ID_14 : \(x1047).(\(x1048).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1047 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1048 : *) : +)~_));
ID_1301 = 0, ID_1300;
ID_1302 = (ID_1301 : -);
ID_1303 = 0, ID_1302;
ID_1304 = (ID_1303 : -);
ID_1305 = ID_1304, 2;
ID_1306 = (ID_1305 : pow);
ID_1307 = ID_57, ID_1306;
ID_1308 = (ID_1307 :> sqrt);
ID_1309 = ID_1308, 0;
ID_1310 = (ID_1309 : ==);
ID_1311 = ID_1310, ID_69;
ID_1312 = (ID_1311 : select2);
ID_1313 = (ID_0 : \(x1049).(\(x1050).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1049 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1050 : *) : +)~_));
ID_1314 = 7.3f, ID_1313;
ID_1315 = (ID_1314 : -);
ID_1316 = 0, ID_1315;
ID_1317 = (ID_1316 : -);
ID_1318 = ID_1317, 2;
ID_1319 = (ID_1318 : pow);
ID_1320 = (ID_14 : \(x1051).(\(x1052).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1051 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1052 : *) : +)~_));
ID_1321 = 0, ID_1320;
ID_1322 = (ID_1321 : -);
ID_1323 = 0, ID_1322;
ID_1324 = (ID_1323 : -);
ID_1325 = ID_1324, 2;
ID_1326 = (ID_1325 : pow);
ID_1327 = ID_1319, ID_1326;
ID_1328 = (ID_1327 :> sqrt);
ID_1329 = ID_1328, 0;
ID_1330 = (ID_1329 : <);
ID_1331 = ID_1328, 0.0001f;
ID_1332 = (ID_1331 : max);
ID_1333 = ID_1332, ID_1328;
ID_1334 = ID_1330, ID_1333;
ID_1335 = (ID_1334 : select2);
ID_1336 = ID_76, ID_1335;
ID_1337 = (ID_1336 : /);
ID_1338 = ID_1337, 0;
ID_1339 = ID_1312, ID_1338;
ID_1340 = (ID_1339 : select2);
ID_1341 = ID_1340, 2;
ID_1342 = (ID_1341 : pow);
ID_1343 = (ID_14 : \(x1053).(\(x1054).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1053 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1054 : *) : +)~_));
ID_1344 = 0, ID_1343;
ID_1345 = (ID_1344 : -);
ID_1346 = 0, ID_1345;
ID_1347 = (ID_1346 : -);
ID_1348 = ID_1347, 2;
ID_1349 = (ID_1348 : pow);
ID_1350 = ID_113, ID_1349;
ID_1351 = (ID_1350 :> sqrt);
ID_1352 = ID_1351, 0;
ID_1353 = (ID_1352 : ==);
ID_1354 = ID_1353, ID_69;
ID_1355 = (ID_1354 : select2);
ID_1356 = (ID_14 : \(x1055).(\(x1056).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1055 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1056 : *) : +)~_));
ID_1357 = 0, ID_1356;
ID_1358 = (ID_1357 : -);
ID_1359 = 0, ID_1358;
ID_1360 = (ID_1359 : -);
ID_1361 = (ID_0 : \(x1057).(\(x1058).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1057 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1058 : *) : +)~_));
ID_1362 = 7.3f, ID_1361;
ID_1363 = (ID_1362 : -);
ID_1364 = 0, ID_1363;
ID_1365 = (ID_1364 : -);
ID_1366 = ID_1365, 2;
ID_1367 = (ID_1366 : pow);
ID_1368 = (ID_14 : \(x1059).(\(x1060).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1059 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1060 : *) : +)~_));
ID_1369 = 0, ID_1368;
ID_1370 = (ID_1369 : -);
ID_1371 = 0, ID_1370;
ID_1372 = (ID_1371 : -);
ID_1373 = ID_1372, 2;
ID_1374 = (ID_1373 : pow);
ID_1375 = ID_1367, ID_1374;
ID_1376 = (ID_1375 :> sqrt);
ID_1377 = ID_1376, 0;
ID_1378 = (ID_1377 : <);
ID_1379 = ID_1376, 0.0001f;
ID_1380 = (ID_1379 : max);
ID_1381 = ID_1380, ID_1376;
ID_1382 = ID_1378, ID_1381;
ID_1383 = (ID_1382 : select2);
ID_1384 = ID_1360, ID_1383;
ID_1385 = (ID_1384 : /);
ID_1386 = ID_1385, 0;
ID_1387 = ID_1355, ID_1386;
ID_1388 = (ID_1387 : select2);
ID_1389 = ID_1388, 2;
ID_1390 = (ID_1389 : pow);
ID_1391 = ID_1342, ID_1390;
ID_1392 = (ID_1391 :> sqrt);
ID_1393 = ID_1392, ID_817;
ID_1394 = (ID_1393 : *);
ID_1395 = ID_1394, 0;
ID_1396 = (ID_1395 : ==);
ID_1397 = (ID_14 : \(x1061).(\(x1062).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1061 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1062 : *) : +)~_));
ID_1398 = 0, ID_1397;
ID_1399 = (ID_1398 : -);
ID_1400 = 0, ID_1399;
ID_1401 = (ID_1400 : -);
ID_1402 = ID_1401, 2;
ID_1403 = (ID_1402 : pow);
ID_1404 = ID_199, ID_1403;
ID_1405 = (ID_1404 :> sqrt);
ID_1406 = ID_1405, 0;
ID_1407 = (ID_1406 : ==);
ID_1408 = ID_1407, ID_69;
ID_1409 = (ID_1408 : select2);
ID_1410 = (ID_0 : \(x1063).(\(x1064).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1063 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1064 : *) : +)~_));
ID_1411 = 7.3f, ID_1410;
ID_1412 = (ID_1411 : -);
ID_1413 = 0, ID_1412;
ID_1414 = (ID_1413 : -);
ID_1415 = ID_1414, 2;
ID_1416 = (ID_1415 : pow);
ID_1417 = (ID_14 : \(x1065).(\(x1066).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1065 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1066 : *) : +)~_));
ID_1418 = 0, ID_1417;
ID_1419 = (ID_1418 : -);
ID_1420 = 0, ID_1419;
ID_1421 = (ID_1420 : -);
ID_1422 = ID_1421, 2;
ID_1423 = (ID_1422 : pow);
ID_1424 = ID_1416, ID_1423;
ID_1425 = (ID_1424 :> sqrt);
ID_1426 = ID_1425, 0;
ID_1427 = (ID_1426 : <);
ID_1428 = ID_1425, 0.0001f;
ID_1429 = (ID_1428 : max);
ID_1430 = ID_1429, ID_1425;
ID_1431 = ID_1427, ID_1430;
ID_1432 = (ID_1431 : select2);
ID_1433 = ID_217, ID_1432;
ID_1434 = (ID_1433 : /);
ID_1435 = ID_1434, 0;
ID_1436 = ID_1409, ID_1435;
ID_1437 = (ID_1436 : select2);
ID_1438 = ID_806, ID_1437;
ID_1439 = (ID_1438 : *);
ID_1440 = (ID_14 : \(x1067).(\(x1068).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1067 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1068 : *) : +)~_));
ID_1441 = 0, ID_1440;
ID_1442 = (ID_1441 : -);
ID_1443 = 0, ID_1442;
ID_1444 = (ID_1443 : -);
ID_1445 = ID_1444, 2;
ID_1446 = (ID_1445 : pow);
ID_1447 = ID_254, ID_1446;
ID_1448 = (ID_1447 :> sqrt);
ID_1449 = ID_1448, 0;
ID_1450 = (ID_1449 : ==);
ID_1451 = ID_1450, ID_69;
ID_1452 = (ID_1451 : select2);
ID_1453 = (ID_14 : \(x1069).(\(x1070).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1069 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1070 : *) : +)~_));
ID_1454 = 0, ID_1453;
ID_1455 = (ID_1454 : -);
ID_1456 = 0, ID_1455;
ID_1457 = (ID_1456 : -);
ID_1458 = (ID_0 : \(x1071).(\(x1072).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1071 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1072 : *) : +)~_));
ID_1459 = 7.3f, ID_1458;
ID_1460 = (ID_1459 : -);
ID_1461 = 0, ID_1460;
ID_1462 = (ID_1461 : -);
ID_1463 = ID_1462, 2;
ID_1464 = (ID_1463 : pow);
ID_1465 = (ID_14 : \(x1073).(\(x1074).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1073 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1074 : *) : +)~_));
ID_1466 = 0, ID_1465;
ID_1467 = (ID_1466 : -);
ID_1468 = 0, ID_1467;
ID_1469 = (ID_1468 : -);
ID_1470 = ID_1469, 2;
ID_1471 = (ID_1470 : pow);
ID_1472 = ID_1464, ID_1471;
ID_1473 = (ID_1472 :> sqrt);
ID_1474 = ID_1473, 0;
ID_1475 = (ID_1474 : <);
ID_1476 = ID_1473, 0.0001f;
ID_1477 = (ID_1476 : max);
ID_1478 = ID_1477, ID_1473;
ID_1479 = ID_1475, ID_1478;
ID_1480 = (ID_1479 : select2);
ID_1481 = ID_1457, ID_1480;
ID_1482 = (ID_1481 : /);
ID_1483 = ID_1482, 0;
ID_1484 = ID_1452, ID_1483;
ID_1485 = (ID_1484 : select2);
ID_1486 = ID_813, ID_1485;
ID_1487 = (ID_1486 : *);
ID_1488 = ID_1439, ID_1487;
ID_1489 = (ID_1488 :> _);
ID_1490 = (ID_0 : \(x1075).(\(x1076).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1075 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1076 : *) : +)~_));
ID_1491 = 7.3f, ID_1490;
ID_1492 = (ID_1491 : -);
ID_1493 = 0, ID_1492;
ID_1494 = (ID_1493 : -);
ID_1495 = ID_1494, 2;
ID_1496 = (ID_1495 : pow);
ID_1497 = (ID_14 : \(x1077).(\(x1078).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1077 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1078 : *) : +)~_));
ID_1498 = 0, ID_1497;
ID_1499 = (ID_1498 : -);
ID_1500 = 0, ID_1499;
ID_1501 = (ID_1500 : -);
ID_1502 = ID_1501, 2;
ID_1503 = (ID_1502 : pow);
ID_1504 = ID_1496, ID_1503;
ID_1505 = (ID_1504 :> sqrt);
ID_1506 = ID_1505, 0;
ID_1507 = (ID_1506 : ==);
ID_1508 = ID_1507, ID_69;
ID_1509 = (ID_1508 : select2);
ID_1510 = (ID_0 : \(x1079).(\(x1080).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1079 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1080 : *) : +)~_));
ID_1511 = 7.3f, ID_1510;
ID_1512 = (ID_1511 : -);
ID_1513 = 0, ID_1512;
ID_1514 = (ID_1513 : -);
ID_1515 = (ID_0 : \(x1081).(\(x1082).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1081 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1082 : *) : +)~_));
ID_1516 = 7.3f, ID_1515;
ID_1517 = (ID_1516 : -);
ID_1518 = 0, ID_1517;
ID_1519 = (ID_1518 : -);
ID_1520 = ID_1519, 2;
ID_1521 = (ID_1520 : pow);
ID_1522 = (ID_14 : \(x1083).(\(x1084).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1083 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1084 : *) : +)~_));
ID_1523 = 0, ID_1522;
ID_1524 = (ID_1523 : -);
ID_1525 = 0, ID_1524;
ID_1526 = (ID_1525 : -);
ID_1527 = ID_1526, 2;
ID_1528 = (ID_1527 : pow);
ID_1529 = ID_1521, ID_1528;
ID_1530 = (ID_1529 :> sqrt);
ID_1531 = ID_1530, 0;
ID_1532 = (ID_1531 : <);
ID_1533 = ID_1530, 0.0001f;
ID_1534 = (ID_1533 : max);
ID_1535 = ID_1534, ID_1530;
ID_1536 = ID_1532, ID_1535;
ID_1537 = (ID_1536 : select2);
ID_1538 = ID_1514, ID_1537;
ID_1539 = (ID_1538 : /);
ID_1540 = ID_1539, 0;
ID_1541 = ID_1509, ID_1540;
ID_1542 = (ID_1541 : select2);
ID_1543 = ID_1542, 2;
ID_1544 = (ID_1543 : pow);
ID_1545 = (ID_0 : \(x1085).(\(x1086).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1085 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1086 : *) : +)~_));
ID_1546 = 7.3f, ID_1545;
ID_1547 = (ID_1546 : -);
ID_1548 = 0, ID_1547;
ID_1549 = (ID_1548 : -);
ID_1550 = ID_1549, 2;
ID_1551 = (ID_1550 : pow);
ID_1552 = (ID_14 : \(x1087).(\(x1088).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1087 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1088 : *) : +)~_));
ID_1553 = 0, ID_1552;
ID_1554 = (ID_1553 : -);
ID_1555 = 0, ID_1554;
ID_1556 = (ID_1555 : -);
ID_1557 = ID_1556, 2;
ID_1558 = (ID_1557 : pow);
ID_1559 = ID_1551, ID_1558;
ID_1560 = (ID_1559 :> sqrt);
ID_1561 = ID_1560, 0;
ID_1562 = (ID_1561 : ==);
ID_1563 = ID_1562, ID_69;
ID_1564 = (ID_1563 : select2);
ID_1565 = (ID_14 : \(x1089).(\(x1090).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1089 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1090 : *) : +)~_));
ID_1566 = 0, ID_1565;
ID_1567 = (ID_1566 : -);
ID_1568 = 0, ID_1567;
ID_1569 = (ID_1568 : -);
ID_1570 = (ID_0 : \(x1091).(\(x1092).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1091 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1092 : *) : +)~_));
ID_1571 = 7.3f, ID_1570;
ID_1572 = (ID_1571 : -);
ID_1573 = 0, ID_1572;
ID_1574 = (ID_1573 : -);
ID_1575 = ID_1574, 2;
ID_1576 = (ID_1575 : pow);
ID_1577 = (ID_14 : \(x1093).(\(x1094).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1093 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1094 : *) : +)~_));
ID_1578 = 0, ID_1577;
ID_1579 = (ID_1578 : -);
ID_1580 = 0, ID_1579;
ID_1581 = (ID_1580 : -);
ID_1582 = ID_1581, 2;
ID_1583 = (ID_1582 : pow);
ID_1584 = ID_1576, ID_1583;
ID_1585 = (ID_1584 :> sqrt);
ID_1586 = ID_1585, 0;
ID_1587 = (ID_1586 : <);
ID_1588 = ID_1585, 0.0001f;
ID_1589 = (ID_1588 : max);
ID_1590 = ID_1589, ID_1585;
ID_1591 = ID_1587, ID_1590;
ID_1592 = (ID_1591 : select2);
ID_1593 = ID_1569, ID_1592;
ID_1594 = (ID_1593 : /);
ID_1595 = ID_1594, 0;
ID_1596 = ID_1564, ID_1595;
ID_1597 = (ID_1596 : select2);
ID_1598 = ID_1597, 2;
ID_1599 = (ID_1598 : pow);
ID_1600 = ID_1544, ID_1599;
ID_1601 = (ID_1600 :> sqrt);
ID_1602 = ID_1601, ID_817;
ID_1603 = (ID_1602 : *);
ID_1604 = ID_1603, 0;
ID_1605 = (ID_1604 : <);
ID_1606 = ID_1603, 0.0001f;
ID_1607 = (ID_1606 : max);
ID_1608 = ID_1607, ID_1603;
ID_1609 = ID_1605, ID_1608;
ID_1610 = (ID_1609 : select2);
ID_1611 = ID_1489, ID_1610;
ID_1612 = (ID_1611 : /);
ID_1613 = ID_1612, 0;
ID_1614 = ID_1396, ID_1613;
ID_1615 = (ID_1614 : select2);
ID_1616 = ID_1615, 0;
ID_1617 = (ID_1616 : ==);
ID_1618 = (ID_1604 : ==);
ID_1619 = (ID_0 : \(x1095).(\(x1096).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1095 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1096 : *) : +)~_));
ID_1620 = 7.3f, ID_1619;
ID_1621 = (ID_1620 : -);
ID_1622 = 0, ID_1621;
ID_1623 = (ID_1622 : -);
ID_1624 = ID_1623, 2;
ID_1625 = (ID_1624 : pow);
ID_1626 = (ID_14 : \(x1097).(\(x1098).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1097 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1098 : *) : +)~_));
ID_1627 = 0, ID_1626;
ID_1628 = (ID_1627 : -);
ID_1629 = 0, ID_1628;
ID_1630 = (ID_1629 : -);
ID_1631 = ID_1630, 2;
ID_1632 = (ID_1631 : pow);
ID_1633 = ID_1625, ID_1632;
ID_1634 = (ID_1633 :> sqrt);
ID_1635 = ID_1634, 0;
ID_1636 = (ID_1635 : ==);
ID_1637 = ID_1636, ID_69;
ID_1638 = (ID_1637 : select2);
ID_1639 = (ID_0 : \(x1099).(\(x1100).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1099 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1100 : *) : +)~_));
ID_1640 = 7.3f, ID_1639;
ID_1641 = (ID_1640 : -);
ID_1642 = 0, ID_1641;
ID_1643 = (ID_1642 : -);
ID_1644 = (ID_0 : \(x1101).(\(x1102).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1101 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1102 : *) : +)~_));
ID_1645 = 7.3f, ID_1644;
ID_1646 = (ID_1645 : -);
ID_1647 = 0, ID_1646;
ID_1648 = (ID_1647 : -);
ID_1649 = ID_1648, 2;
ID_1650 = (ID_1649 : pow);
ID_1651 = (ID_14 : \(x1103).(\(x1104).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1103 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1104 : *) : +)~_));
ID_1652 = 0, ID_1651;
ID_1653 = (ID_1652 : -);
ID_1654 = 0, ID_1653;
ID_1655 = (ID_1654 : -);
ID_1656 = ID_1655, 2;
ID_1657 = (ID_1656 : pow);
ID_1658 = ID_1650, ID_1657;
ID_1659 = (ID_1658 :> sqrt);
ID_1660 = ID_1659, 0;
ID_1661 = (ID_1660 : <);
ID_1662 = ID_1659, 0.0001f;
ID_1663 = (ID_1662 : max);
ID_1664 = ID_1663, ID_1659;
ID_1665 = ID_1661, ID_1664;
ID_1666 = (ID_1665 : select2);
ID_1667 = ID_1643, ID_1666;
ID_1668 = (ID_1667 : /);
ID_1669 = ID_1668, 0;
ID_1670 = ID_1638, ID_1669;
ID_1671 = (ID_1670 : select2);
ID_1672 = ID_806, ID_1671;
ID_1673 = (ID_1672 : *);
ID_1674 = (ID_0 : \(x1105).(\(x1106).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1105 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1106 : *) : +)~_));
ID_1675 = 7.3f, ID_1674;
ID_1676 = (ID_1675 : -);
ID_1677 = 0, ID_1676;
ID_1678 = (ID_1677 : -);
ID_1679 = ID_1678, 2;
ID_1680 = (ID_1679 : pow);
ID_1681 = (ID_14 : \(x1107).(\(x1108).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1107 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1108 : *) : +)~_));
ID_1682 = 0, ID_1681;
ID_1683 = (ID_1682 : -);
ID_1684 = 0, ID_1683;
ID_1685 = (ID_1684 : -);
ID_1686 = ID_1685, 2;
ID_1687 = (ID_1686 : pow);
ID_1688 = ID_1680, ID_1687;
ID_1689 = (ID_1688 :> sqrt);
ID_1690 = ID_1689, 0;
ID_1691 = (ID_1690 : ==);
ID_1692 = ID_1691, ID_69;
ID_1693 = (ID_1692 : select2);
ID_1694 = (ID_14 : \(x1109).(\(x1110).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1109 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1110 : *) : +)~_));
ID_1695 = 0, ID_1694;
ID_1696 = (ID_1695 : -);
ID_1697 = 0, ID_1696;
ID_1698 = (ID_1697 : -);
ID_1699 = (ID_0 : \(x1111).(\(x1112).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1111 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1112 : *) : +)~_));
ID_1700 = 7.3f, ID_1699;
ID_1701 = (ID_1700 : -);
ID_1702 = 0, ID_1701;
ID_1703 = (ID_1702 : -);
ID_1704 = ID_1703, 2;
ID_1705 = (ID_1704 : pow);
ID_1706 = (ID_14 : \(x1113).(\(x1114).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1113 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1114 : *) : +)~_));
ID_1707 = 0, ID_1706;
ID_1708 = (ID_1707 : -);
ID_1709 = 0, ID_1708;
ID_1710 = (ID_1709 : -);
ID_1711 = ID_1710, 2;
ID_1712 = (ID_1711 : pow);
ID_1713 = ID_1705, ID_1712;
ID_1714 = (ID_1713 :> sqrt);
ID_1715 = ID_1714, 0;
ID_1716 = (ID_1715 : <);
ID_1717 = ID_1714, 0.0001f;
ID_1718 = (ID_1717 : max);
ID_1719 = ID_1718, ID_1714;
ID_1720 = ID_1716, ID_1719;
ID_1721 = (ID_1720 : select2);
ID_1722 = ID_1698, ID_1721;
ID_1723 = (ID_1722 : /);
ID_1724 = ID_1723, 0;
ID_1725 = ID_1693, ID_1724;
ID_1726 = (ID_1725 : select2);
ID_1727 = ID_813, ID_1726;
ID_1728 = (ID_1727 : *);
ID_1729 = ID_1673, ID_1728;
ID_1730 = (ID_1729 :> _);
ID_1731 = (ID_0 : \(x1115).(\(x1116).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1115 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1116 : *) : +)~_));
ID_1732 = 7.3f, ID_1731;
ID_1733 = (ID_1732 : -);
ID_1734 = 0, ID_1733;
ID_1735 = (ID_1734 : -);
ID_1736 = ID_1735, 2;
ID_1737 = (ID_1736 : pow);
ID_1738 = (ID_14 : \(x1117).(\(x1118).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1117 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1118 : *) : +)~_));
ID_1739 = 0, ID_1738;
ID_1740 = (ID_1739 : -);
ID_1741 = 0, ID_1740;
ID_1742 = (ID_1741 : -);
ID_1743 = ID_1742, 2;
ID_1744 = (ID_1743 : pow);
ID_1745 = ID_1737, ID_1744;
ID_1746 = (ID_1745 :> sqrt);
ID_1747 = ID_1746, 0;
ID_1748 = (ID_1747 : ==);
ID_1749 = ID_1748, ID_69;
ID_1750 = (ID_1749 : select2);
ID_1751 = (ID_0 : \(x1119).(\(x1120).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1119 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1120 : *) : +)~_));
ID_1752 = 7.3f, ID_1751;
ID_1753 = (ID_1752 : -);
ID_1754 = 0, ID_1753;
ID_1755 = (ID_1754 : -);
ID_1756 = (ID_0 : \(x1121).(\(x1122).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1121 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1122 : *) : +)~_));
ID_1757 = 7.3f, ID_1756;
ID_1758 = (ID_1757 : -);
ID_1759 = 0, ID_1758;
ID_1760 = (ID_1759 : -);
ID_1761 = ID_1760, 2;
ID_1762 = (ID_1761 : pow);
ID_1763 = (ID_14 : \(x1123).(\(x1124).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1123 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1124 : *) : +)~_));
ID_1764 = 0, ID_1763;
ID_1765 = (ID_1764 : -);
ID_1766 = 0, ID_1765;
ID_1767 = (ID_1766 : -);
ID_1768 = ID_1767, 2;
ID_1769 = (ID_1768 : pow);
ID_1770 = ID_1762, ID_1769;
ID_1771 = (ID_1770 :> sqrt);
ID_1772 = ID_1771, 0;
ID_1773 = (ID_1772 : <);
ID_1774 = ID_1771, 0.0001f;
ID_1775 = (ID_1774 : max);
ID_1776 = ID_1775, ID_1771;
ID_1777 = ID_1773, ID_1776;
ID_1778 = (ID_1777 : select2);
ID_1779 = ID_1755, ID_1778;
ID_1780 = (ID_1779 : /);
ID_1781 = ID_1780, 0;
ID_1782 = ID_1750, ID_1781;
ID_1783 = (ID_1782 : select2);
ID_1784 = ID_1783, 2;
ID_1785 = (ID_1784 : pow);
ID_1786 = (ID_0 : \(x1125).(\(x1126).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1125 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1126 : *) : +)~_));
ID_1787 = 7.3f, ID_1786;
ID_1788 = (ID_1787 : -);
ID_1789 = 0, ID_1788;
ID_1790 = (ID_1789 : -);
ID_1791 = ID_1790, 2;
ID_1792 = (ID_1791 : pow);
ID_1793 = (ID_14 : \(x1127).(\(x1128).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1127 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1128 : *) : +)~_));
ID_1794 = 0, ID_1793;
ID_1795 = (ID_1794 : -);
ID_1796 = 0, ID_1795;
ID_1797 = (ID_1796 : -);
ID_1798 = ID_1797, 2;
ID_1799 = (ID_1798 : pow);
ID_1800 = ID_1792, ID_1799;
ID_1801 = (ID_1800 :> sqrt);
ID_1802 = ID_1801, 0;
ID_1803 = (ID_1802 : ==);
ID_1804 = ID_1803, ID_69;
ID_1805 = (ID_1804 : select2);
ID_1806 = (ID_14 : \(x1129).(\(x1130).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1129 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1130 : *) : +)~_));
ID_1807 = 0, ID_1806;
ID_1808 = (ID_1807 : -);
ID_1809 = 0, ID_1808;
ID_1810 = (ID_1809 : -);
ID_1811 = (ID_0 : \(x1131).(\(x1132).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1131 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1132 : *) : +)~_));
ID_1812 = 7.3f, ID_1811;
ID_1813 = (ID_1812 : -);
ID_1814 = 0, ID_1813;
ID_1815 = (ID_1814 : -);
ID_1816 = ID_1815, 2;
ID_1817 = (ID_1816 : pow);
ID_1818 = (ID_14 : \(x1133).(\(x1134).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1133 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1134 : *) : +)~_));
ID_1819 = 0, ID_1818;
ID_1820 = (ID_1819 : -);
ID_1821 = 0, ID_1820;
ID_1822 = (ID_1821 : -);
ID_1823 = ID_1822, 2;
ID_1824 = (ID_1823 : pow);
ID_1825 = ID_1817, ID_1824;
ID_1826 = (ID_1825 :> sqrt);
ID_1827 = ID_1826, 0;
ID_1828 = (ID_1827 : <);
ID_1829 = ID_1826, 0.0001f;
ID_1830 = (ID_1829 : max);
ID_1831 = ID_1830, ID_1826;
ID_1832 = ID_1828, ID_1831;
ID_1833 = (ID_1832 : select2);
ID_1834 = ID_1810, ID_1833;
ID_1835 = (ID_1834 : /);
ID_1836 = ID_1835, 0;
ID_1837 = ID_1805, ID_1836;
ID_1838 = (ID_1837 : select2);
ID_1839 = ID_1838, 2;
ID_1840 = (ID_1839 : pow);
ID_1841 = ID_1785, ID_1840;
ID_1842 = (ID_1841 :> sqrt);
ID_1843 = ID_1842, ID_817;
ID_1844 = (ID_1843 : *);
ID_1845 = ID_1844, 0;
ID_1846 = (ID_1845 : <);
ID_1847 = ID_1844, 0.0001f;
ID_1848 = (ID_1847 : max);
ID_1849 = ID_1848, ID_1844;
ID_1850 = ID_1846, ID_1849;
ID_1851 = (ID_1850 : select2);
ID_1852 = ID_1730, ID_1851;
ID_1853 = (ID_1852 : /);
ID_1854 = ID_1853, 0;
ID_1855 = ID_1618, ID_1854;
ID_1856 = (ID_1855 : select2);
ID_1857 = ID_1856, 0;
ID_1858 = (ID_1857 : <);
ID_1859 = ID_1856, 0.0001f;
ID_1860 = (ID_1859 : max);
ID_1861 = ID_1860, ID_1856;
ID_1862 = ID_1858, ID_1861;
ID_1863 = ID_1862 : select2;
ID_1864 = (ID_1863 : acos);
ID_1865 = ID_1864, 0;
ID_1866 = ID_1617, ID_1865;
ID_1867 = (ID_1866 : select2);
ID_1868 = ID_699, ID_1867;
ID_1869 = ID_1868 : *;
ID_1870 = (ID_1869 : sin);
ID_1871 = _, ID_1870;
ID_1872 = (ID_1871 : *);
ID_1873 = (ID_686 : cos);
ID_1874 = (ID_0 : \(x1237).(\(x1238).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1237 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1238 : *) : +)~_));
ID_1875 = ID_1874, 0;
ID_1876 = (ID_1875 : *);
ID_1877 = (ID_14 : \(x1237).(\(x1238).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1237 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1238 : *) : +)~_));
ID_1878 = ID_1877, 7.3f;
ID_1879 = (ID_1878 : *);
ID_1880 = ID_1876, ID_1879;
ID_1881 = (ID_1880 : -);
ID_1882 = ID_1881, 0;
ID_1883 = (ID_1882 : <);
ID_1884 = ID_1883, ID_697;
ID_1885 = (ID_1884 : select2);
ID_1886 = (ID_0 : \(x1239).(\(x1240).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1239 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1240 : *) : +)~_));
ID_1887 = 7.3f, ID_1886;
ID_1888 = (ID_1887 : -);
ID_1889 = 0, ID_1888;
ID_1890 = (ID_1889 : -);
ID_1891 = ID_1890, 2;
ID_1892 = (ID_1891 : pow);
ID_1893 = (ID_14 : \(x1241).(\(x1242).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1241 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1242 : *) : +)~_));
ID_1894 = 0, ID_1893;
ID_1895 = (ID_1894 : -);
ID_1896 = 0, ID_1895;
ID_1897 = (ID_1896 : -);
ID_1898 = ID_1897, 2;
ID_1899 = (ID_1898 : pow);
ID_1900 = ID_1892, ID_1899;
ID_1901 = (ID_1900 :> sqrt);
ID_1902 = ID_1901, 0;
ID_1903 = (ID_1902 : ==);
ID_1904 = ID_1903, ID_69;
ID_1905 = (ID_1904 : select2);
ID_1906 = (ID_0 : \(x1243).(\(x1244).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1243 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1244 : *) : +)~_));
ID_1907 = 7.3f, ID_1906;
ID_1908 = (ID_1907 : -);
ID_1909 = 0, ID_1908;
ID_1910 = (ID_1909 : -);
ID_1911 = (ID_0 : \(x1245).(\(x1246).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1245 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1246 : *) : +)~_));
ID_1912 = 7.3f, ID_1911;
ID_1913 = (ID_1912 : -);
ID_1914 = 0, ID_1913;
ID_1915 = (ID_1914 : -);
ID_1916 = ID_1915, 2;
ID_1917 = (ID_1916 : pow);
ID_1918 = (ID_14 : \(x1247).(\(x1248).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1247 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1248 : *) : +)~_));
ID_1919 = 0, ID_1918;
ID_1920 = (ID_1919 : -);
ID_1921 = 0, ID_1920;
ID_1922 = (ID_1921 : -);
ID_1923 = ID_1922, 2;
ID_1924 = (ID_1923 : pow);
ID_1925 = ID_1917, ID_1924;
ID_1926 = (ID_1925 :> sqrt);
ID_1927 = ID_1926, 0;
ID_1928 = (ID_1927 : <);
ID_1929 = ID_1926, 0.0001f;
ID_1930 = (ID_1929 : max);
ID_1931 = ID_1930, ID_1926;
ID_1932 = ID_1928, ID_1931;
ID_1933 = (ID_1932 : select2);
ID_1934 = ID_1910, ID_1933;
ID_1935 = (ID_1934 : /);
ID_1936 = ID_1935, 0;
ID_1937 = ID_1905, ID_1936;
ID_1938 = (ID_1937 : select2);
ID_1939 = ID_1938, 2;
ID_1940 = (ID_1939 : pow);
ID_1941 = (ID_0 : \(x1249).(\(x1250).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1249 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1250 : *) : +)~_));
ID_1942 = 7.3f, ID_1941;
ID_1943 = (ID_1942 : -);
ID_1944 = 0, ID_1943;
ID_1945 = (ID_1944 : -);
ID_1946 = ID_1945, 2;
ID_1947 = (ID_1946 : pow);
ID_1948 = (ID_14 : \(x1251).(\(x1252).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1251 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1252 : *) : +)~_));
ID_1949 = 0, ID_1948;
ID_1950 = (ID_1949 : -);
ID_1951 = 0, ID_1950;
ID_1952 = (ID_1951 : -);
ID_1953 = ID_1952, 2;
ID_1954 = (ID_1953 : pow);
ID_1955 = ID_1947, ID_1954;
ID_1956 = (ID_1955 :> sqrt);
ID_1957 = ID_1956, 0;
ID_1958 = (ID_1957 : ==);
ID_1959 = ID_1958, ID_69;
ID_1960 = (ID_1959 : select2);
ID_1961 = (ID_14 : \(x1253).(\(x1254).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1253 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1254 : *) : +)~_));
ID_1962 = 0, ID_1961;
ID_1963 = (ID_1962 : -);
ID_1964 = 0, ID_1963;
ID_1965 = (ID_1964 : -);
ID_1966 = (ID_0 : \(x1255).(\(x1256).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1255 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1256 : *) : +)~_));
ID_1967 = 7.3f, ID_1966;
ID_1968 = (ID_1967 : -);
ID_1969 = 0, ID_1968;
ID_1970 = (ID_1969 : -);
ID_1971 = ID_1970, 2;
ID_1972 = (ID_1971 : pow);
ID_1973 = (ID_14 : \(x1257).(\(x1258).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1257 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1258 : *) : +)~_));
ID_1974 = 0, ID_1973;
ID_1975 = (ID_1974 : -);
ID_1976 = 0, ID_1975;
ID_1977 = (ID_1976 : -);
ID_1978 = ID_1977, 2;
ID_1979 = (ID_1978 : pow);
ID_1980 = ID_1972, ID_1979;
ID_1981 = (ID_1980 :> sqrt);
ID_1982 = ID_1981, 0;
ID_1983 = (ID_1982 : <);
ID_1984 = ID_1981, 0.0001f;
ID_1985 = (ID_1984 : max);
ID_1986 = ID_1985, ID_1981;
ID_1987 = ID_1983, ID_1986;
ID_1988 = (ID_1987 : select2);
ID_1989 = ID_1965, ID_1988;
ID_1990 = (ID_1989 : /);
ID_1991 = ID_1990, 0;
ID_1992 = ID_1960, ID_1991;
ID_1993 = (ID_1992 : select2);
ID_1994 = ID_1993, 2;
ID_1995 = (ID_1994 : pow);
ID_1996 = ID_1940, ID_1995;
ID_1997 = (ID_1996 :> sqrt);
ID_1998 = ID_1997, ID_817;
ID_1999 = (ID_1998 : *);
ID_2000 = ID_1999, 0;
ID_2001 = (ID_2000 : ==);
ID_2002 = (ID_0 : \(x1259).(\(x1260).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1259 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1260 : *) : +)~_));
ID_2003 = 7.3f, ID_2002;
ID_2004 = (ID_2003 : -);
ID_2005 = 0, ID_2004;
ID_2006 = (ID_2005 : -);
ID_2007 = ID_2006, 2;
ID_2008 = (ID_2007 : pow);
ID_2009 = (ID_14 : \(x1261).(\(x1262).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1261 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1262 : *) : +)~_));
ID_2010 = 0, ID_2009;
ID_2011 = (ID_2010 : -);
ID_2012 = 0, ID_2011;
ID_2013 = (ID_2012 : -);
ID_2014 = ID_2013, 2;
ID_2015 = (ID_2014 : pow);
ID_2016 = ID_2008, ID_2015;
ID_2017 = (ID_2016 :> sqrt);
ID_2018 = ID_2017, 0;
ID_2019 = (ID_2018 : ==);
ID_2020 = ID_2019, ID_69;
ID_2021 = (ID_2020 : select2);
ID_2022 = (ID_0 : \(x1263).(\(x1264).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1263 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1264 : *) : +)~_));
ID_2023 = 7.3f, ID_2022;
ID_2024 = (ID_2023 : -);
ID_2025 = 0, ID_2024;
ID_2026 = (ID_2025 : -);
ID_2027 = (ID_0 : \(x1265).(\(x1266).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1265 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1266 : *) : +)~_));
ID_2028 = 7.3f, ID_2027;
ID_2029 = (ID_2028 : -);
ID_2030 = 0, ID_2029;
ID_2031 = (ID_2030 : -);
ID_2032 = ID_2031, 2;
ID_2033 = (ID_2032 : pow);
ID_2034 = (ID_14 : \(x1267).(\(x1268).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1267 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1268 : *) : +)~_));
ID_2035 = 0, ID_2034;
ID_2036 = (ID_2035 : -);
ID_2037 = 0, ID_2036;
ID_2038 = (ID_2037 : -);
ID_2039 = ID_2038, 2;
ID_2040 = (ID_2039 : pow);
ID_2041 = ID_2033, ID_2040;
ID_2042 = (ID_2041 :> sqrt);
ID_2043 = ID_2042, 0;
ID_2044 = (ID_2043 : <);
ID_2045 = ID_2042, 0.0001f;
ID_2046 = (ID_2045 : max);
ID_2047 = ID_2046, ID_2042;
ID_2048 = ID_2044, ID_2047;
ID_2049 = (ID_2048 : select2);
ID_2050 = ID_2026, ID_2049;
ID_2051 = (ID_2050 : /);
ID_2052 = ID_2051, 0;
ID_2053 = ID_2021, ID_2052;
ID_2054 = (ID_2053 : select2);
ID_2055 = ID_806, ID_2054;
ID_2056 = (ID_2055 : *);
ID_2057 = (ID_0 : \(x1269).(\(x1270).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1269 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1270 : *) : +)~_));
ID_2058 = 7.3f, ID_2057;
ID_2059 = (ID_2058 : -);
ID_2060 = 0, ID_2059;
ID_2061 = (ID_2060 : -);
ID_2062 = ID_2061, 2;
ID_2063 = (ID_2062 : pow);
ID_2064 = (ID_14 : \(x1271).(\(x1272).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1271 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1272 : *) : +)~_));
ID_2065 = 0, ID_2064;
ID_2066 = (ID_2065 : -);
ID_2067 = 0, ID_2066;
ID_2068 = (ID_2067 : -);
ID_2069 = ID_2068, 2;
ID_2070 = (ID_2069 : pow);
ID_2071 = ID_2063, ID_2070;
ID_2072 = (ID_2071 :> sqrt);
ID_2073 = ID_2072, 0;
ID_2074 = (ID_2073 : ==);
ID_2075 = ID_2074, ID_69;
ID_2076 = (ID_2075 : select2);
ID_2077 = (ID_14 : \(x1273).(\(x1274).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1273 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1274 : *) : +)~_));
ID_2078 = 0, ID_2077;
ID_2079 = (ID_2078 : -);
ID_2080 = 0, ID_2079;
ID_2081 = (ID_2080 : -);
ID_2082 = (ID_0 : \(x1275).(\(x1276).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1275 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1276 : *) : +)~_));
ID_2083 = 7.3f, ID_2082;
ID_2084 = (ID_2083 : -);
ID_2085 = 0, ID_2084;
ID_2086 = (ID_2085 : -);
ID_2087 = ID_2086, 2;
ID_2088 = (ID_2087 : pow);
ID_2089 = (ID_14 : \(x1277).(\(x1278).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1277 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1278 : *) : +)~_));
ID_2090 = 0, ID_2089;
ID_2091 = (ID_2090 : -);
ID_2092 = 0, ID_2091;
ID_2093 = (ID_2092 : -);
ID_2094 = ID_2093, 2;
ID_2095 = (ID_2094 : pow);
ID_2096 = ID_2088, ID_2095;
ID_2097 = (ID_2096 :> sqrt);
ID_2098 = ID_2097, 0;
ID_2099 = (ID_2098 : <);
ID_2100 = ID_2097, 0.0001f;
ID_2101 = (ID_2100 : max);
ID_2102 = ID_2101, ID_2097;
ID_2103 = ID_2099, ID_2102;
ID_2104 = (ID_2103 : select2);
ID_2105 = ID_2081, ID_2104;
ID_2106 = (ID_2105 : /);
ID_2107 = ID_2106, 0;
ID_2108 = ID_2076, ID_2107;
ID_2109 = (ID_2108 : select2);
ID_2110 = ID_813, ID_2109;
ID_2111 = (ID_2110 : *);
ID_2112 = ID_2056, ID_2111;
ID_2113 = (ID_2112 :> _);
ID_2114 = (ID_0 : \(x1279).(\(x1280).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1279 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1280 : *) : +)~_));
ID_2115 = 7.3f, ID_2114;
ID_2116 = (ID_2115 : -);
ID_2117 = 0, ID_2116;
ID_2118 = (ID_2117 : -);
ID_2119 = ID_2118, 2;
ID_2120 = (ID_2119 : pow);
ID_2121 = (ID_14 : \(x1281).(\(x1282).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1281 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1282 : *) : +)~_));
ID_2122 = 0, ID_2121;
ID_2123 = (ID_2122 : -);
ID_2124 = 0, ID_2123;
ID_2125 = (ID_2124 : -);
ID_2126 = ID_2125, 2;
ID_2127 = (ID_2126 : pow);
ID_2128 = ID_2120, ID_2127;
ID_2129 = (ID_2128 :> sqrt);
ID_2130 = ID_2129, 0;
ID_2131 = (ID_2130 : ==);
ID_2132 = ID_2131, ID_69;
ID_2133 = (ID_2132 : select2);
ID_2134 = (ID_0 : \(x1283).(\(x1284).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1283 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1284 : *) : +)~_));
ID_2135 = 7.3f, ID_2134;
ID_2136 = (ID_2135 : -);
ID_2137 = 0, ID_2136;
ID_2138 = (ID_2137 : -);
ID_2139 = (ID_0 : \(x1285).(\(x1286).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1285 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1286 : *) : +)~_));
ID_2140 = 7.3f, ID_2139;
ID_2141 = (ID_2140 : -);
ID_2142 = 0, ID_2141;
ID_2143 = (ID_2142 : -);
ID_2144 = ID_2143, 2;
ID_2145 = (ID_2144 : pow);
ID_2146 = (ID_14 : \(x1287).(\(x1288).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1287 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1288 : *) : +)~_));
ID_2147 = 0, ID_2146;
ID_2148 = (ID_2147 : -);
ID_2149 = 0, ID_2148;
ID_2150 = (ID_2149 : -);
ID_2151 = ID_2150, 2;
ID_2152 = (ID_2151 : pow);
ID_2153 = ID_2145, ID_2152;
ID_2154 = (ID_2153 :> sqrt);
ID_2155 = ID_2154, 0;
ID_2156 = (ID_2155 : <);
ID_2157 = ID_2154, 0.0001f;
ID_2158 = (ID_2157 : max);
ID_2159 = ID_2158, ID_2154;
ID_2160 = ID_2156, ID_2159;
ID_2161 = (ID_2160 : select2);
ID_2162 = ID_2138, ID_2161;
ID_2163 = (ID_2162 : /);
ID_2164 = ID_2163, 0;
ID_2165 = ID_2133, ID_2164;
ID_2166 = (ID_2165 : select2);
ID_2167 = ID_2166, 2;
ID_2168 = (ID_2167 : pow);
ID_2169 = (ID_0 : \(x1289).(\(x1290).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1289 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1290 : *) : +)~_));
ID_2170 = 7.3f, ID_2169;
ID_2171 = (ID_2170 : -);
ID_2172 = 0, ID_2171;
ID_2173 = (ID_2172 : -);
ID_2174 = ID_2173, 2;
ID_2175 = (ID_2174 : pow);
ID_2176 = (ID_14 : \(x1291).(\(x1292).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1291 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1292 : *) : +)~_));
ID_2177 = 0, ID_2176;
ID_2178 = (ID_2177 : -);
ID_2179 = 0, ID_2178;
ID_2180 = (ID_2179 : -);
ID_2181 = ID_2180, 2;
ID_2182 = (ID_2181 : pow);
ID_2183 = ID_2175, ID_2182;
ID_2184 = (ID_2183 :> sqrt);
ID_2185 = ID_2184, 0;
ID_2186 = (ID_2185 : ==);
ID_2187 = ID_2186, ID_69;
ID_2188 = (ID_2187 : select2);
ID_2189 = (ID_14 : \(x1293).(\(x1294).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1293 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1294 : *) : +)~_));
ID_2190 = 0, ID_2189;
ID_2191 = (ID_2190 : -);
ID_2192 = 0, ID_2191;
ID_2193 = (ID_2192 : -);
ID_2194 = (ID_0 : \(x1295).(\(x1296).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1295 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1296 : *) : +)~_));
ID_2195 = 7.3f, ID_2194;
ID_2196 = (ID_2195 : -);
ID_2197 = 0, ID_2196;
ID_2198 = (ID_2197 : -);
ID_2199 = ID_2198, 2;
ID_2200 = (ID_2199 : pow);
ID_2201 = (ID_14 : \(x1297).(\(x1298).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1297 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1298 : *) : +)~_));
ID_2202 = 0, ID_2201;
ID_2203 = (ID_2202 : -);
ID_2204 = 0, ID_2203;
ID_2205 = (ID_2204 : -);
ID_2206 = ID_2205, 2;
ID_2207 = (ID_2206 : pow);
ID_2208 = ID_2200, ID_2207;
ID_2209 = (ID_2208 :> sqrt);
ID_2210 = ID_2209, 0;
ID_2211 = (ID_2210 : <);
ID_2212 = ID_2209, 0.0001f;
ID_2213 = (ID_2212 : max);
ID_2214 = ID_2213, ID_2209;
ID_2215 = ID_2211, ID_2214;
ID_2216 = (ID_2215 : select2);
ID_2217 = ID_2193, ID_2216;
ID_2218 = (ID_2217 : /);
ID_2219 = ID_2218, 0;
ID_2220 = ID_2188, ID_2219;
ID_2221 = (ID_2220 : select2);
ID_2222 = ID_2221, 2;
ID_2223 = (ID_2222 : pow);
ID_2224 = ID_2168, ID_2223;
ID_2225 = (ID_2224 :> sqrt);
ID_2226 = ID_2225, ID_817;
ID_2227 = (ID_2226 : *);
ID_2228 = ID_2227, 0;
ID_2229 = (ID_2228 : <);
ID_2230 = ID_2227, 0.0001f;
ID_2231 = (ID_2230 : max);
ID_2232 = ID_2231, ID_2227;
ID_2233 = ID_2229, ID_2232;
ID_2234 = (ID_2233 : select2);
ID_2235 = ID_2113, ID_2234;
ID_2236 = (ID_2235 : /);
ID_2237 = ID_2236, 0;
ID_2238 = ID_2001, ID_2237;
ID_2239 = (ID_2238 : select2);
ID_2240 = ID_2239, 0;
ID_2241 = (ID_2240 : ==);
ID_2242 = (ID_2228 : ==);
ID_2243 = (ID_0 : \(x1299).(\(x1300).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1299 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1300 : *) : +)~_));
ID_2244 = 7.3f, ID_2243;
ID_2245 = (ID_2244 : -);
ID_2246 = 0, ID_2245;
ID_2247 = (ID_2246 : -);
ID_2248 = ID_2247, 2;
ID_2249 = (ID_2248 : pow);
ID_2250 = (ID_14 : \(x1301).(\(x1302).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1301 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1302 : *) : +)~_));
ID_2251 = 0, ID_2250;
ID_2252 = (ID_2251 : -);
ID_2253 = 0, ID_2252;
ID_2254 = (ID_2253 : -);
ID_2255 = ID_2254, 2;
ID_2256 = (ID_2255 : pow);
ID_2257 = ID_2249, ID_2256;
ID_2258 = (ID_2257 :> sqrt);
ID_2259 = ID_2258, 0;
ID_2260 = (ID_2259 : ==);
ID_2261 = ID_2260, ID_69;
ID_2262 = (ID_2261 : select2);
ID_2263 = (ID_0 : \(x1303).(\(x1304).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1303 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1304 : *) : +)~_));
ID_2264 = 7.3f, ID_2263;
ID_2265 = (ID_2264 : -);
ID_2266 = 0, ID_2265;
ID_2267 = (ID_2266 : -);
ID_2268 = (ID_0 : \(x1305).(\(x1306).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1305 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1306 : *) : +)~_));
ID_2269 = 7.3f, ID_2268;
ID_2270 = (ID_2269 : -);
ID_2271 = 0, ID_2270;
ID_2272 = (ID_2271 : -);
ID_2273 = ID_2272, 2;
ID_2274 = (ID_2273 : pow);
ID_2275 = (ID_14 : \(x1307).(\(x1308).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1307 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1308 : *) : +)~_));
ID_2276 = 0, ID_2275;
ID_2277 = (ID_2276 : -);
ID_2278 = 0, ID_2277;
ID_2279 = (ID_2278 : -);
ID_2280 = ID_2279, 2;
ID_2281 = (ID_2280 : pow);
ID_2282 = ID_2274, ID_2281;
ID_2283 = (ID_2282 :> sqrt);
ID_2284 = ID_2283, 0;
ID_2285 = (ID_2284 : <);
ID_2286 = ID_2283, 0.0001f;
ID_2287 = (ID_2286 : max);
ID_2288 = ID_2287, ID_2283;
ID_2289 = ID_2285, ID_2288;
ID_2290 = (ID_2289 : select2);
ID_2291 = ID_2267, ID_2290;
ID_2292 = (ID_2291 : /);
ID_2293 = ID_2292, 0;
ID_2294 = ID_2262, ID_2293;
ID_2295 = (ID_2294 : select2);
ID_2296 = ID_806, ID_2295;
ID_2297 = (ID_2296 : *);
ID_2298 = (ID_0 : \(x1309).(\(x1310).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1309 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1310 : *) : +)~_));
ID_2299 = 7.3f, ID_2298;
ID_2300 = (ID_2299 : -);
ID_2301 = 0, ID_2300;
ID_2302 = (ID_2301 : -);
ID_2303 = ID_2302, 2;
ID_2304 = (ID_2303 : pow);
ID_2305 = (ID_14 : \(x1311).(\(x1312).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1311 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1312 : *) : +)~_));
ID_2306 = 0, ID_2305;
ID_2307 = (ID_2306 : -);
ID_2308 = 0, ID_2307;
ID_2309 = (ID_2308 : -);
ID_2310 = ID_2309, 2;
ID_2311 = (ID_2310 : pow);
ID_2312 = ID_2304, ID_2311;
ID_2313 = (ID_2312 :> sqrt);
ID_2314 = ID_2313, 0;
ID_2315 = (ID_2314 : ==);
ID_2316 = ID_2315, ID_69;
ID_2317 = (ID_2316 : select2);
ID_2318 = (ID_14 : \(x1313).(\(x1314).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1313 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1314 : *) : +)~_));
ID_2319 = 0, ID_2318;
ID_2320 = (ID_2319 : -);
ID_2321 = 0, ID_2320;
ID_2322 = (ID_2321 : -);
ID_2323 = (ID_0 : \(x1315).(\(x1316).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1315 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1316 : *) : +)~_));
ID_2324 = 7.3f, ID_2323;
ID_2325 = (ID_2324 : -);
ID_2326 = 0, ID_2325;
ID_2327 = (ID_2326 : -);
ID_2328 = ID_2327, 2;
ID_2329 = (ID_2328 : pow);
ID_2330 = (ID_14 : \(x1317).(\(x1318).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1317 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1318 : *) : +)~_));
ID_2331 = 0, ID_2330;
ID_2332 = (ID_2331 : -);
ID_2333 = 0, ID_2332;
ID_2334 = (ID_2333 : -);
ID_2335 = ID_2334, 2;
ID_2336 = (ID_2335 : pow);
ID_2337 = ID_2329, ID_2336;
ID_2338 = (ID_2337 :> sqrt);
ID_2339 = ID_2338, 0;
ID_2340 = (ID_2339 : <);
ID_2341 = ID_2338, 0.0001f;
ID_2342 = (ID_2341 : max);
ID_2343 = ID_2342, ID_2338;
ID_2344 = ID_2340, ID_2343;
ID_2345 = (ID_2344 : select2);
ID_2346 = ID_2322, ID_2345;
ID_2347 = (ID_2346 : /);
ID_2348 = ID_2347, 0;
ID_2349 = ID_2317, ID_2348;
ID_2350 = (ID_2349 : select2);
ID_2351 = ID_813, ID_2350;
ID_2352 = (ID_2351 : *);
ID_2353 = ID_2297, ID_2352;
ID_2354 = (ID_2353 :> _);
ID_2355 = (ID_0 : \(x1319).(\(x1320).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1319 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1320 : *) : +)~_));
ID_2356 = 7.3f, ID_2355;
ID_2357 = (ID_2356 : -);
ID_2358 = 0, ID_2357;
ID_2359 = (ID_2358 : -);
ID_2360 = ID_2359, 2;
ID_2361 = (ID_2360 : pow);
ID_2362 = (ID_14 : \(x1321).(\(x1322).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1321 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1322 : *) : +)~_));
ID_2363 = 0, ID_2362;
ID_2364 = (ID_2363 : -);
ID_2365 = 0, ID_2364;
ID_2366 = (ID_2365 : -);
ID_2367 = ID_2366, 2;
ID_2368 = (ID_2367 : pow);
ID_2369 = ID_2361, ID_2368;
ID_2370 = (ID_2369 :> sqrt);
ID_2371 = ID_2370, 0;
ID_2372 = (ID_2371 : ==);
ID_2373 = ID_2372, ID_69;
ID_2374 = (ID_2373 : select2);
ID_2375 = (ID_0 : \(x1323).(\(x1324).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1323 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1324 : *) : +)~_));
ID_2376 = 7.3f, ID_2375;
ID_2377 = (ID_2376 : -);
ID_2378 = 0, ID_2377;
ID_2379 = (ID_2378 : -);
ID_2380 = (ID_0 : \(x1325).(\(x1326).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1325 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1326 : *) : +)~_));
ID_2381 = 7.3f, ID_2380;
ID_2382 = (ID_2381 : -);
ID_2383 = 0, ID_2382;
ID_2384 = (ID_2383 : -);
ID_2385 = ID_2384, 2;
ID_2386 = (ID_2385 : pow);
ID_2387 = (ID_14 : \(x1327).(\(x1328).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1327 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1328 : *) : +)~_));
ID_2388 = 0, ID_2387;
ID_2389 = (ID_2388 : -);
ID_2390 = 0, ID_2389;
ID_2391 = (ID_2390 : -);
ID_2392 = ID_2391, 2;
ID_2393 = (ID_2392 : pow);
ID_2394 = ID_2386, ID_2393;
ID_2395 = (ID_2394 :> sqrt);
ID_2396 = ID_2395, 0;
ID_2397 = (ID_2396 : <);
ID_2398 = ID_2395, 0.0001f;
ID_2399 = (ID_2398 : max);
ID_2400 = ID_2399, ID_2395;
ID_2401 = ID_2397, ID_2400;
ID_2402 = (ID_2401 : select2);
ID_2403 = ID_2379, ID_2402;
ID_2404 = (ID_2403 : /);
ID_2405 = ID_2404, 0;
ID_2406 = ID_2374, ID_2405;
ID_2407 = (ID_2406 : select2);
ID_2408 = ID_2407, 2;
ID_2409 = (ID_2408 : pow);
ID_2410 = (ID_0 : \(x1329).(\(x1330).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1329 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1330 : *) : +)~_));
ID_2411 = 7.3f, ID_2410;
ID_2412 = (ID_2411 : -);
ID_2413 = 0, ID_2412;
ID_2414 = (ID_2413 : -);
ID_2415 = ID_2414, 2;
ID_2416 = (ID_2415 : pow);
ID_2417 = (ID_14 : \(x1331).(\(x1332).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1331 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1332 : *) : +)~_));
ID_2418 = 0, ID_2417;
ID_2419 = (ID_2418 : -);
ID_2420 = 0, ID_2419;
ID_2421 = (ID_2420 : -);
ID_2422 = ID_2421, 2;
ID_2423 = (ID_2422 : pow);
ID_2424 = ID_2416, ID_2423;
ID_2425 = (ID_2424 :> sqrt);
ID_2426 = ID_2425, 0;
ID_2427 = (ID_2426 : ==);
ID_2428 = ID_2427, ID_69;
ID_2429 = (ID_2428 : select2);
ID_2430 = (ID_14 : \(x1333).(\(x1334).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1333 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1334 : *) : +)~_));
ID_2431 = 0, ID_2430;
ID_2432 = (ID_2431 : -);
ID_2433 = 0, ID_2432;
ID_2434 = (ID_2433 : -);
ID_2435 = (ID_0 : \(x1335).(\(x1336).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1335 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1336 : *) : +)~_));
ID_2436 = 7.3f, ID_2435;
ID_2437 = (ID_2436 : -);
ID_2438 = 0, ID_2437;
ID_2439 = (ID_2438 : -);
ID_2440 = ID_2439, 2;
ID_2441 = (ID_2440 : pow);
ID_2442 = (ID_14 : \(x1337).(\(x1338).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1337 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1338 : *) : +)~_));
ID_2443 = 0, ID_2442;
ID_2444 = (ID_2443 : -);
ID_2445 = 0, ID_2444;
ID_2446 = (ID_2445 : -);
ID_2447 = ID_2446, 2;
ID_2448 = (ID_2447 : pow);
ID_2449 = ID_2441, ID_2448;
ID_2450 = (ID_2449 :> sqrt);
ID_2451 = ID_2450, 0;
ID_2452 = (ID_2451 : <);
ID_2453 = ID_2450, 0.0001f;
ID_2454 = (ID_2453 : max);
ID_2455 = ID_2454, ID_2450;
ID_2456 = ID_2452, ID_2455;
ID_2457 = (ID_2456 : select2);
ID_2458 = ID_2434, ID_2457;
ID_2459 = (ID_2458 : /);
ID_2460 = ID_2459, 0;
ID_2461 = ID_2429, ID_2460;
ID_2462 = (ID_2461 : select2);
ID_2463 = ID_2462, 2;
ID_2464 = (ID_2463 : pow);
ID_2465 = ID_2409, ID_2464;
ID_2466 = (ID_2465 :> sqrt);
ID_2467 = ID_2466, ID_817;
ID_2468 = (ID_2467 : *);
ID_2469 = ID_2468, 0;
ID_2470 = (ID_2469 : <);
ID_2471 = ID_2468, 0.0001f;
ID_2472 = (ID_2471 : max);
ID_2473 = ID_2472, ID_2468;
ID_2474 = ID_2470, ID_2473;
ID_2475 = (ID_2474 : select2);
ID_2476 = ID_2354, ID_2475;
ID_2477 = (ID_2476 : /);
ID_2478 = ID_2477, 0;
ID_2479 = ID_2242, ID_2478;
ID_2480 = (ID_2479 : select2);
ID_2481 = ID_2480, 0;
ID_2482 = (ID_2481 : <);
ID_2483 = ID_2480, 0.0001f;
ID_2484 = (ID_2483 : max);
ID_2485 = ID_2484, ID_2480;
ID_2486 = ID_2482, ID_2485;
ID_2487 = ID_2486 : select2;
ID_2488 = (ID_2487 : acos);
ID_2489 = ID_2488, 0;
ID_2490 = ID_2241, ID_2489;
ID_2491 = (ID_2490 : select2);
ID_2492 = ID_1885, ID_2491;
ID_2493 = ID_2492 : *;
ID_2494 = (ID_2493 : cos);
ID_2495 = ID_1873, ID_2494;
ID_2496 = (ID_2495 : *);
ID_2497 = _, ID_2496;
ID_2498 = (ID_2497 : *);
ID_2499 = ID_1872, ID_2498;
ID_2500 = ID_1299, ID_2499;
ID_2501 = ID_37, ID_2500;
ID_2502 = _ <: ID_2501;
ID_2503 = ID_2502 : \(x5470).(\(x5471).(\(x5472).(\(x5473).(((((x5470,x5471 : +),x5472 : +),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : -),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : +),x5473 : -),2 : /),((((x5470,x5471 : +),x5472 : -),x5473 : -),2 : /)))));
ID_2504 = \(x5467).(x5467,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),(0,(((((((hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),7.3f : -),2 : pow),(((hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),-6.7f : -),2 : pow) : +),(((hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : + : sqrt),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),340 : /) : max) : min) : @) : ID_2503;
ID_2505 = (ID_35 : ID_2504);
ID_2506 = ID_1, 9.3f;
ID_2507 = (ID_2506 : -);
ID_2508 = ID_2507, 2;
ID_2509 = (ID_2508 : pow);
ID_2510 = ID_7, -3.6f;
ID_2511 = (ID_2510 : -);
ID_2512 = ID_2511, 2;
ID_2513 = (ID_2512 : pow);
ID_2514 = ID_2509, ID_2513;
ID_2515 = (ID_2514 : +);
ID_2516 = ID_2515, ID_19;
ID_2517 = ID_2516 : +;
ID_2518 = (ID_2517 : sqrt);
ID_2519 = ID_2518, 1;
ID_2520 = ID_2519 : max;
ID_2521 = (ID_2520 : log10);
ID_2522 = 11, ID_2521;
ID_2523 = (ID_2522 : *);
ID_2524 = 0, ID_2523;
ID_2525 = (ID_2524 : -);
ID_2526 = ID_2525, 2e+01f;
ID_2527 = (ID_2526 : /);
ID_2528 = 1e+01f, ID_2527;
ID_2529 = (ID_2528 : pow);
ID_2530 = _, ID_2529;
ID_2531 = ID_2530 : *;
ID_2532 = ID_38, -3.6f;
ID_2533 = (ID_2532 : *);
ID_2534 = ID_41, 9.3f;
ID_2535 = (ID_2534 : *);
ID_2536 = ID_2533, ID_2535;
ID_2537 = (ID_2536 : -);
ID_2538 = ID_2537, 0;
ID_2539 = (ID_2538 : <);
ID_2540 = ID_2539, ID_48;
ID_2541 = (ID_2540 : select2);
ID_2542 = 9.3f, ID_51;
ID_2543 = (ID_2542 : -);
ID_2544 = 0, ID_2543;
ID_2545 = (ID_2544 : -);
ID_2546 = ID_2545, 2;
ID_2547 = (ID_2546 : pow);
ID_2548 = -3.6f, ID_58;
ID_2549 = (ID_2548 : -);
ID_2550 = 0, ID_2549;
ID_2551 = (ID_2550 : -);
ID_2552 = ID_2551, 2;
ID_2553 = (ID_2552 : pow);
ID_2554 = ID_2547, ID_2553;
ID_2555 = (ID_2554 :> sqrt);
ID_2556 = ID_2555, 0;
ID_2557 = (ID_2556 : ==);
ID_2558 = ID_2557, ID_69;
ID_2559 = (ID_2558 : select2);
ID_2560 = 9.3f, ID_72;
ID_2561 = (ID_2560 : -);
ID_2562 = 0, ID_2561;
ID_2563 = (ID_2562 : -);
ID_2564 = (ID_0 : \(x1915).(\(x1916).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1915 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1916 : *) : +)~_));
ID_2565 = 9.3f, ID_2564;
ID_2566 = (ID_2565 : -);
ID_2567 = 0, ID_2566;
ID_2568 = (ID_2567 : -);
ID_2569 = ID_2568, 2;
ID_2570 = (ID_2569 : pow);
ID_2571 = (ID_6 : \(x1917).(\(x1918).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1917 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1918 : *) : +)~_));
ID_2572 = -3.6f, ID_2571;
ID_2573 = (ID_2572 : -);
ID_2574 = 0, ID_2573;
ID_2575 = (ID_2574 : -);
ID_2576 = ID_2575, 2;
ID_2577 = (ID_2576 : pow);
ID_2578 = ID_2570, ID_2577;
ID_2579 = (ID_2578 :> sqrt);
ID_2580 = ID_2579, 0;
ID_2581 = (ID_2580 : <);
ID_2582 = ID_2579, 0.0001f;
ID_2583 = (ID_2582 : max);
ID_2584 = ID_2583, ID_2579;
ID_2585 = ID_2581, ID_2584;
ID_2586 = (ID_2585 : select2);
ID_2587 = ID_2563, ID_2586;
ID_2588 = (ID_2587 : /);
ID_2589 = ID_2588, 0;
ID_2590 = ID_2559, ID_2589;
ID_2591 = (ID_2590 : select2);
ID_2592 = ID_2591, 2;
ID_2593 = (ID_2592 : pow);
ID_2594 = 9.3f, ID_107;
ID_2595 = (ID_2594 : -);
ID_2596 = 0, ID_2595;
ID_2597 = (ID_2596 : -);
ID_2598 = ID_2597, 2;
ID_2599 = (ID_2598 : pow);
ID_2600 = -3.6f, ID_114;
ID_2601 = (ID_2600 : -);
ID_2602 = 0, ID_2601;
ID_2603 = (ID_2602 : -);
ID_2604 = ID_2603, 2;
ID_2605 = (ID_2604 : pow);
ID_2606 = ID_2599, ID_2605;
ID_2607 = (ID_2606 :> sqrt);
ID_2608 = ID_2607, 0;
ID_2609 = (ID_2608 : ==);
ID_2610 = ID_2609, ID_69;
ID_2611 = (ID_2610 : select2);
ID_2612 = -3.6f, ID_127;
ID_2613 = (ID_2612 : -);
ID_2614 = 0, ID_2613;
ID_2615 = (ID_2614 : -);
ID_2616 = (ID_0 : \(x1919).(\(x1920).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1919 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1920 : *) : +)~_));
ID_2617 = 9.3f, ID_2616;
ID_2618 = (ID_2617 : -);
ID_2619 = 0, ID_2618;
ID_2620 = (ID_2619 : -);
ID_2621 = ID_2620, 2;
ID_2622 = (ID_2621 : pow);
ID_2623 = (ID_6 : \(x1921).(\(x1922).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1921 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1922 : *) : +)~_));
ID_2624 = -3.6f, ID_2623;
ID_2625 = (ID_2624 : -);
ID_2626 = 0, ID_2625;
ID_2627 = (ID_2626 : -);
ID_2628 = ID_2627, 2;
ID_2629 = (ID_2628 : pow);
ID_2630 = ID_2622, ID_2629;
ID_2631 = (ID_2630 :> sqrt);
ID_2632 = ID_2631, 0;
ID_2633 = (ID_2632 : <);
ID_2634 = ID_2631, 0.0001f;
ID_2635 = (ID_2634 : max);
ID_2636 = ID_2635, ID_2631;
ID_2637 = ID_2633, ID_2636;
ID_2638 = (ID_2637 : select2);
ID_2639 = ID_2615, ID_2638;
ID_2640 = (ID_2639 : /);
ID_2641 = ID_2640, 0;
ID_2642 = ID_2611, ID_2641;
ID_2643 = (ID_2642 : select2);
ID_2644 = ID_2643, 2;
ID_2645 = (ID_2644 : pow);
ID_2646 = ID_2593, ID_2645;
ID_2647 = (ID_2646 :> sqrt);
ID_2648 = 86.49f, 12.96f;
ID_2649 = (ID_2648 :> sqrt);
ID_2650 = ID_2649, 0;
ID_2651 = (ID_2650 : ==);
ID_2652 = ID_2651, ID_69;
ID_2653 = (ID_2652 : select2);
ID_2654 = 9.972462f, 9.972462f;
ID_2655 = 0, ID_2654;
ID_2656 = (ID_2655 : select2);
ID_2657 = 9.3f, ID_2656;
ID_2658 = (ID_2657 : /);
ID_2659 = ID_2658, 0;
ID_2660 = ID_2653, ID_2659;
ID_2661 = (ID_2660 : select2);
ID_2662 = ID_2661, 2;
ID_2663 = (ID_2662 : pow);
ID_2664 = -3.6f, ID_2656;
ID_2665 = (ID_2664 : /);
ID_2666 = ID_2665, 0;
ID_2667 = ID_2653, ID_2666;
ID_2668 = (ID_2667 : select2);
ID_2669 = ID_2668, 2;
ID_2670 = (ID_2669 : pow);
ID_2671 = ID_2663, ID_2670;
ID_2672 = (ID_2671 :> sqrt);
ID_2673 = ID_2647, ID_2672;
ID_2674 = (ID_2673 : *);
ID_2675 = ID_2674, 0;
ID_2676 = (ID_2675 : ==);
ID_2677 = 9.3f, ID_193;
ID_2678 = (ID_2677 : -);
ID_2679 = 0, ID_2678;
ID_2680 = (ID_2679 : -);
ID_2681 = ID_2680, 2;
ID_2682 = (ID_2681 : pow);
ID_2683 = -3.6f, ID_200;
ID_2684 = (ID_2683 : -);
ID_2685 = 0, ID_2684;
ID_2686 = (ID_2685 : -);
ID_2687 = ID_2686, 2;
ID_2688 = (ID_2687 : pow);
ID_2689 = ID_2682, ID_2688;
ID_2690 = (ID_2689 :> sqrt);
ID_2691 = ID_2690, 0;
ID_2692 = (ID_2691 : ==);
ID_2693 = ID_2692, ID_69;
ID_2694 = (ID_2693 : select2);
ID_2695 = 9.3f, ID_213;
ID_2696 = (ID_2695 : -);
ID_2697 = 0, ID_2696;
ID_2698 = (ID_2697 : -);
ID_2699 = (ID_0 : \(x1923).(\(x1924).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1923 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1924 : *) : +)~_));
ID_2700 = 9.3f, ID_2699;
ID_2701 = (ID_2700 : -);
ID_2702 = 0, ID_2701;
ID_2703 = (ID_2702 : -);
ID_2704 = ID_2703, 2;
ID_2705 = (ID_2704 : pow);
ID_2706 = (ID_6 : \(x1925).(\(x1926).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1925 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1926 : *) : +)~_));
ID_2707 = -3.6f, ID_2706;
ID_2708 = (ID_2707 : -);
ID_2709 = 0, ID_2708;
ID_2710 = (ID_2709 : -);
ID_2711 = ID_2710, 2;
ID_2712 = (ID_2711 : pow);
ID_2713 = ID_2705, ID_2712;
ID_2714 = (ID_2713 :> sqrt);
ID_2715 = ID_2714, 0;
ID_2716 = (ID_2715 : <);
ID_2717 = ID_2714, 0.0001f;
ID_2718 = (ID_2717 : max);
ID_2719 = ID_2718, ID_2714;
ID_2720 = ID_2716, ID_2719;
ID_2721 = (ID_2720 : select2);
ID_2722 = ID_2698, ID_2721;
ID_2723 = (ID_2722 : /);
ID_2724 = ID_2723, 0;
ID_2725 = ID_2694, ID_2724;
ID_2726 = (ID_2725 : select2);
ID_2727 = ID_2661, ID_2726;
ID_2728 = (ID_2727 : *);
ID_2729 = 9.3f, ID_248;
ID_2730 = (ID_2729 : -);
ID_2731 = 0, ID_2730;
ID_2732 = (ID_2731 : -);
ID_2733 = ID_2732, 2;
ID_2734 = (ID_2733 : pow);
ID_2735 = -3.6f, ID_255;
ID_2736 = (ID_2735 : -);
ID_2737 = 0, ID_2736;
ID_2738 = (ID_2737 : -);
ID_2739 = ID_2738, 2;
ID_2740 = (ID_2739 : pow);
ID_2741 = ID_2734, ID_2740;
ID_2742 = (ID_2741 :> sqrt);
ID_2743 = ID_2742, 0;
ID_2744 = (ID_2743 : ==);
ID_2745 = ID_2744, ID_69;
ID_2746 = (ID_2745 : select2);
ID_2747 = -3.6f, ID_268;
ID_2748 = (ID_2747 : -);
ID_2749 = 0, ID_2748;
ID_2750 = (ID_2749 : -);
ID_2751 = (ID_0 : \(x1927).(\(x1928).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1927 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1928 : *) : +)~_));
ID_2752 = 9.3f, ID_2751;
ID_2753 = (ID_2752 : -);
ID_2754 = 0, ID_2753;
ID_2755 = (ID_2754 : -);
ID_2756 = ID_2755, 2;
ID_2757 = (ID_2756 : pow);
ID_2758 = (ID_6 : \(x1929).(\(x1930).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1929 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1930 : *) : +)~_));
ID_2759 = -3.6f, ID_2758;
ID_2760 = (ID_2759 : -);
ID_2761 = 0, ID_2760;
ID_2762 = (ID_2761 : -);
ID_2763 = ID_2762, 2;
ID_2764 = (ID_2763 : pow);
ID_2765 = ID_2757, ID_2764;
ID_2766 = (ID_2765 :> sqrt);
ID_2767 = ID_2766, 0;
ID_2768 = (ID_2767 : <);
ID_2769 = ID_2766, 0.0001f;
ID_2770 = (ID_2769 : max);
ID_2771 = ID_2770, ID_2766;
ID_2772 = ID_2768, ID_2771;
ID_2773 = (ID_2772 : select2);
ID_2774 = ID_2750, ID_2773;
ID_2775 = (ID_2774 : /);
ID_2776 = ID_2775, 0;
ID_2777 = ID_2746, ID_2776;
ID_2778 = (ID_2777 : select2);
ID_2779 = ID_2668, ID_2778;
ID_2780 = (ID_2779 : *);
ID_2781 = ID_2728, ID_2780;
ID_2782 = (ID_2781 :> _);
ID_2783 = (ID_0 : \(x1931).(\(x1932).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1931 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1932 : *) : +)~_));
ID_2784 = 9.3f, ID_2783;
ID_2785 = (ID_2784 : -);
ID_2786 = 0, ID_2785;
ID_2787 = (ID_2786 : -);
ID_2788 = ID_2787, 2;
ID_2789 = (ID_2788 : pow);
ID_2790 = (ID_6 : \(x1933).(\(x1934).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1933 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1934 : *) : +)~_));
ID_2791 = -3.6f, ID_2790;
ID_2792 = (ID_2791 : -);
ID_2793 = 0, ID_2792;
ID_2794 = (ID_2793 : -);
ID_2795 = ID_2794, 2;
ID_2796 = (ID_2795 : pow);
ID_2797 = ID_2789, ID_2796;
ID_2798 = (ID_2797 :> sqrt);
ID_2799 = ID_2798, 0;
ID_2800 = (ID_2799 : ==);
ID_2801 = ID_2800, ID_69;
ID_2802 = (ID_2801 : select2);
ID_2803 = (ID_0 : \(x1935).(\(x1936).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1935 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1936 : *) : +)~_));
ID_2804 = 9.3f, ID_2803;
ID_2805 = (ID_2804 : -);
ID_2806 = 0, ID_2805;
ID_2807 = (ID_2806 : -);
ID_2808 = (ID_0 : \(x1937).(\(x1938).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1937 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1938 : *) : +)~_));
ID_2809 = 9.3f, ID_2808;
ID_2810 = (ID_2809 : -);
ID_2811 = 0, ID_2810;
ID_2812 = (ID_2811 : -);
ID_2813 = ID_2812, 2;
ID_2814 = (ID_2813 : pow);
ID_2815 = (ID_6 : \(x1939).(\(x1940).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1939 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1940 : *) : +)~_));
ID_2816 = -3.6f, ID_2815;
ID_2817 = (ID_2816 : -);
ID_2818 = 0, ID_2817;
ID_2819 = (ID_2818 : -);
ID_2820 = ID_2819, 2;
ID_2821 = (ID_2820 : pow);
ID_2822 = ID_2814, ID_2821;
ID_2823 = (ID_2822 :> sqrt);
ID_2824 = ID_2823, 0;
ID_2825 = (ID_2824 : <);
ID_2826 = ID_2823, 0.0001f;
ID_2827 = (ID_2826 : max);
ID_2828 = ID_2827, ID_2823;
ID_2829 = ID_2825, ID_2828;
ID_2830 = (ID_2829 : select2);
ID_2831 = ID_2807, ID_2830;
ID_2832 = (ID_2831 : /);
ID_2833 = ID_2832, 0;
ID_2834 = ID_2802, ID_2833;
ID_2835 = (ID_2834 : select2);
ID_2836 = ID_2835, 2;
ID_2837 = (ID_2836 : pow);
ID_2838 = (ID_0 : \(x1941).(\(x1942).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1941 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1942 : *) : +)~_));
ID_2839 = 9.3f, ID_2838;
ID_2840 = (ID_2839 : -);
ID_2841 = 0, ID_2840;
ID_2842 = (ID_2841 : -);
ID_2843 = ID_2842, 2;
ID_2844 = (ID_2843 : pow);
ID_2845 = (ID_6 : \(x1943).(\(x1944).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1943 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1944 : *) : +)~_));
ID_2846 = -3.6f, ID_2845;
ID_2847 = (ID_2846 : -);
ID_2848 = 0, ID_2847;
ID_2849 = (ID_2848 : -);
ID_2850 = ID_2849, 2;
ID_2851 = (ID_2850 : pow);
ID_2852 = ID_2844, ID_2851;
ID_2853 = (ID_2852 :> sqrt);
ID_2854 = ID_2853, 0;
ID_2855 = (ID_2854 : ==);
ID_2856 = ID_2855, ID_69;
ID_2857 = (ID_2856 : select2);
ID_2858 = (ID_6 : \(x1945).(\(x1946).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1945 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1946 : *) : +)~_));
ID_2859 = -3.6f, ID_2858;
ID_2860 = (ID_2859 : -);
ID_2861 = 0, ID_2860;
ID_2862 = (ID_2861 : -);
ID_2863 = (ID_0 : \(x1947).(\(x1948).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1947 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1948 : *) : +)~_));
ID_2864 = 9.3f, ID_2863;
ID_2865 = (ID_2864 : -);
ID_2866 = 0, ID_2865;
ID_2867 = (ID_2866 : -);
ID_2868 = ID_2867, 2;
ID_2869 = (ID_2868 : pow);
ID_2870 = (ID_6 : \(x1949).(\(x1950).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1949 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1950 : *) : +)~_));
ID_2871 = -3.6f, ID_2870;
ID_2872 = (ID_2871 : -);
ID_2873 = 0, ID_2872;
ID_2874 = (ID_2873 : -);
ID_2875 = ID_2874, 2;
ID_2876 = (ID_2875 : pow);
ID_2877 = ID_2869, ID_2876;
ID_2878 = (ID_2877 :> sqrt);
ID_2879 = ID_2878, 0;
ID_2880 = (ID_2879 : <);
ID_2881 = ID_2878, 0.0001f;
ID_2882 = (ID_2881 : max);
ID_2883 = ID_2882, ID_2878;
ID_2884 = ID_2880, ID_2883;
ID_2885 = (ID_2884 : select2);
ID_2886 = ID_2862, ID_2885;
ID_2887 = (ID_2886 : /);
ID_2888 = ID_2887, 0;
ID_2889 = ID_2857, ID_2888;
ID_2890 = (ID_2889 : select2);
ID_2891 = ID_2890, 2;
ID_2892 = (ID_2891 : pow);
ID_2893 = ID_2837, ID_2892;
ID_2894 = (ID_2893 :> sqrt);
ID_2895 = ID_2894, ID_2672;
ID_2896 = (ID_2895 : *);
ID_2897 = ID_2896, 0;
ID_2898 = (ID_2897 : <);
ID_2899 = ID_2896, 0.0001f;
ID_2900 = (ID_2899 : max);
ID_2901 = ID_2900, ID_2896;
ID_2902 = ID_2898, ID_2901;
ID_2903 = (ID_2902 : select2);
ID_2904 = ID_2782, ID_2903;
ID_2905 = (ID_2904 : /);
ID_2906 = ID_2905, 0;
ID_2907 = ID_2676, ID_2906;
ID_2908 = (ID_2907 : select2);
ID_2909 = ID_2908, 0;
ID_2910 = (ID_2909 : ==);
ID_2911 = (ID_2897 : ==);
ID_2912 = (ID_0 : \(x1951).(\(x1952).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1951 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1952 : *) : +)~_));
ID_2913 = 9.3f, ID_2912;
ID_2914 = (ID_2913 : -);
ID_2915 = 0, ID_2914;
ID_2916 = (ID_2915 : -);
ID_2917 = ID_2916, 2;
ID_2918 = (ID_2917 : pow);
ID_2919 = (ID_6 : \(x1953).(\(x1954).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1953 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1954 : *) : +)~_));
ID_2920 = -3.6f, ID_2919;
ID_2921 = (ID_2920 : -);
ID_2922 = 0, ID_2921;
ID_2923 = (ID_2922 : -);
ID_2924 = ID_2923, 2;
ID_2925 = (ID_2924 : pow);
ID_2926 = ID_2918, ID_2925;
ID_2927 = (ID_2926 :> sqrt);
ID_2928 = ID_2927, 0;
ID_2929 = (ID_2928 : ==);
ID_2930 = ID_2929, ID_69;
ID_2931 = (ID_2930 : select2);
ID_2932 = (ID_0 : \(x1955).(\(x1956).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1955 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1956 : *) : +)~_));
ID_2933 = 9.3f, ID_2932;
ID_2934 = (ID_2933 : -);
ID_2935 = 0, ID_2934;
ID_2936 = (ID_2935 : -);
ID_2937 = (ID_0 : \(x1957).(\(x1958).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1957 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1958 : *) : +)~_));
ID_2938 = 9.3f, ID_2937;
ID_2939 = (ID_2938 : -);
ID_2940 = 0, ID_2939;
ID_2941 = (ID_2940 : -);
ID_2942 = ID_2941, 2;
ID_2943 = (ID_2942 : pow);
ID_2944 = (ID_6 : \(x1959).(\(x1960).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1959 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1960 : *) : +)~_));
ID_2945 = -3.6f, ID_2944;
ID_2946 = (ID_2945 : -);
ID_2947 = 0, ID_2946;
ID_2948 = (ID_2947 : -);
ID_2949 = ID_2948, 2;
ID_2950 = (ID_2949 : pow);
ID_2951 = ID_2943, ID_2950;
ID_2952 = (ID_2951 :> sqrt);
ID_2953 = ID_2952, 0;
ID_2954 = (ID_2953 : <);
ID_2955 = ID_2952, 0.0001f;
ID_2956 = (ID_2955 : max);
ID_2957 = ID_2956, ID_2952;
ID_2958 = ID_2954, ID_2957;
ID_2959 = (ID_2958 : select2);
ID_2960 = ID_2936, ID_2959;
ID_2961 = (ID_2960 : /);
ID_2962 = ID_2961, 0;
ID_2963 = ID_2931, ID_2962;
ID_2964 = (ID_2963 : select2);
ID_2965 = ID_2661, ID_2964;
ID_2966 = (ID_2965 : *);
ID_2967 = (ID_0 : \(x1961).(\(x1962).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1961 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1962 : *) : +)~_));
ID_2968 = 9.3f, ID_2967;
ID_2969 = (ID_2968 : -);
ID_2970 = 0, ID_2969;
ID_2971 = (ID_2970 : -);
ID_2972 = ID_2971, 2;
ID_2973 = (ID_2972 : pow);
ID_2974 = (ID_6 : \(x1963).(\(x1964).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1963 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1964 : *) : +)~_));
ID_2975 = -3.6f, ID_2974;
ID_2976 = (ID_2975 : -);
ID_2977 = 0, ID_2976;
ID_2978 = (ID_2977 : -);
ID_2979 = ID_2978, 2;
ID_2980 = (ID_2979 : pow);
ID_2981 = ID_2973, ID_2980;
ID_2982 = (ID_2981 :> sqrt);
ID_2983 = ID_2982, 0;
ID_2984 = (ID_2983 : ==);
ID_2985 = ID_2984, ID_69;
ID_2986 = (ID_2985 : select2);
ID_2987 = (ID_6 : \(x1965).(\(x1966).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1965 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1966 : *) : +)~_));
ID_2988 = -3.6f, ID_2987;
ID_2989 = (ID_2988 : -);
ID_2990 = 0, ID_2989;
ID_2991 = (ID_2990 : -);
ID_2992 = (ID_0 : \(x1967).(\(x1968).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1967 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1968 : *) : +)~_));
ID_2993 = 9.3f, ID_2992;
ID_2994 = (ID_2993 : -);
ID_2995 = 0, ID_2994;
ID_2996 = (ID_2995 : -);
ID_2997 = ID_2996, 2;
ID_2998 = (ID_2997 : pow);
ID_2999 = (ID_6 : \(x1969).(\(x1970).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1969 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1970 : *) : +)~_));
ID_3000 = -3.6f, ID_2999;
ID_3001 = (ID_3000 : -);
ID_3002 = 0, ID_3001;
ID_3003 = (ID_3002 : -);
ID_3004 = ID_3003, 2;
ID_3005 = (ID_3004 : pow);
ID_3006 = ID_2998, ID_3005;
ID_3007 = (ID_3006 :> sqrt);
ID_3008 = ID_3007, 0;
ID_3009 = (ID_3008 : <);
ID_3010 = ID_3007, 0.0001f;
ID_3011 = (ID_3010 : max);
ID_3012 = ID_3011, ID_3007;
ID_3013 = ID_3009, ID_3012;
ID_3014 = (ID_3013 : select2);
ID_3015 = ID_2991, ID_3014;
ID_3016 = (ID_3015 : /);
ID_3017 = ID_3016, 0;
ID_3018 = ID_2986, ID_3017;
ID_3019 = (ID_3018 : select2);
ID_3020 = ID_2668, ID_3019;
ID_3021 = (ID_3020 : *);
ID_3022 = ID_2966, ID_3021;
ID_3023 = (ID_3022 :> _);
ID_3024 = (ID_0 : \(x1971).(\(x1972).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1971 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1972 : *) : +)~_));
ID_3025 = 9.3f, ID_3024;
ID_3026 = (ID_3025 : -);
ID_3027 = 0, ID_3026;
ID_3028 = (ID_3027 : -);
ID_3029 = ID_3028, 2;
ID_3030 = (ID_3029 : pow);
ID_3031 = (ID_6 : \(x1973).(\(x1974).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1973 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1974 : *) : +)~_));
ID_3032 = -3.6f, ID_3031;
ID_3033 = (ID_3032 : -);
ID_3034 = 0, ID_3033;
ID_3035 = (ID_3034 : -);
ID_3036 = ID_3035, 2;
ID_3037 = (ID_3036 : pow);
ID_3038 = ID_3030, ID_3037;
ID_3039 = (ID_3038 :> sqrt);
ID_3040 = ID_3039, 0;
ID_3041 = (ID_3040 : ==);
ID_3042 = ID_3041, ID_69;
ID_3043 = (ID_3042 : select2);
ID_3044 = (ID_0 : \(x1975).(\(x1976).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1975 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1976 : *) : +)~_));
ID_3045 = 9.3f, ID_3044;
ID_3046 = (ID_3045 : -);
ID_3047 = 0, ID_3046;
ID_3048 = (ID_3047 : -);
ID_3049 = (ID_0 : \(x1977).(\(x1978).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1977 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1978 : *) : +)~_));
ID_3050 = 9.3f, ID_3049;
ID_3051 = (ID_3050 : -);
ID_3052 = 0, ID_3051;
ID_3053 = (ID_3052 : -);
ID_3054 = ID_3053, 2;
ID_3055 = (ID_3054 : pow);
ID_3056 = (ID_6 : \(x1979).(\(x1980).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1979 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1980 : *) : +)~_));
ID_3057 = -3.6f, ID_3056;
ID_3058 = (ID_3057 : -);
ID_3059 = 0, ID_3058;
ID_3060 = (ID_3059 : -);
ID_3061 = ID_3060, 2;
ID_3062 = (ID_3061 : pow);
ID_3063 = ID_3055, ID_3062;
ID_3064 = (ID_3063 :> sqrt);
ID_3065 = ID_3064, 0;
ID_3066 = (ID_3065 : <);
ID_3067 = ID_3064, 0.0001f;
ID_3068 = (ID_3067 : max);
ID_3069 = ID_3068, ID_3064;
ID_3070 = ID_3066, ID_3069;
ID_3071 = (ID_3070 : select2);
ID_3072 = ID_3048, ID_3071;
ID_3073 = (ID_3072 : /);
ID_3074 = ID_3073, 0;
ID_3075 = ID_3043, ID_3074;
ID_3076 = (ID_3075 : select2);
ID_3077 = ID_3076, 2;
ID_3078 = (ID_3077 : pow);
ID_3079 = (ID_0 : \(x1981).(\(x1982).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1981 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1982 : *) : +)~_));
ID_3080 = 9.3f, ID_3079;
ID_3081 = (ID_3080 : -);
ID_3082 = 0, ID_3081;
ID_3083 = (ID_3082 : -);
ID_3084 = ID_3083, 2;
ID_3085 = (ID_3084 : pow);
ID_3086 = (ID_6 : \(x1983).(\(x1984).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1983 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1984 : *) : +)~_));
ID_3087 = -3.6f, ID_3086;
ID_3088 = (ID_3087 : -);
ID_3089 = 0, ID_3088;
ID_3090 = (ID_3089 : -);
ID_3091 = ID_3090, 2;
ID_3092 = (ID_3091 : pow);
ID_3093 = ID_3085, ID_3092;
ID_3094 = (ID_3093 :> sqrt);
ID_3095 = ID_3094, 0;
ID_3096 = (ID_3095 : ==);
ID_3097 = ID_3096, ID_69;
ID_3098 = (ID_3097 : select2);
ID_3099 = (ID_6 : \(x1985).(\(x1986).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1985 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1986 : *) : +)~_));
ID_3100 = -3.6f, ID_3099;
ID_3101 = (ID_3100 : -);
ID_3102 = 0, ID_3101;
ID_3103 = (ID_3102 : -);
ID_3104 = (ID_0 : \(x1987).(\(x1988).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1987 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1988 : *) : +)~_));
ID_3105 = 9.3f, ID_3104;
ID_3106 = (ID_3105 : -);
ID_3107 = 0, ID_3106;
ID_3108 = (ID_3107 : -);
ID_3109 = ID_3108, 2;
ID_3110 = (ID_3109 : pow);
ID_3111 = (ID_6 : \(x1989).(\(x1990).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1989 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1990 : *) : +)~_));
ID_3112 = -3.6f, ID_3111;
ID_3113 = (ID_3112 : -);
ID_3114 = 0, ID_3113;
ID_3115 = (ID_3114 : -);
ID_3116 = ID_3115, 2;
ID_3117 = (ID_3116 : pow);
ID_3118 = ID_3110, ID_3117;
ID_3119 = (ID_3118 :> sqrt);
ID_3120 = ID_3119, 0;
ID_3121 = (ID_3120 : <);
ID_3122 = ID_3119, 0.0001f;
ID_3123 = (ID_3122 : max);
ID_3124 = ID_3123, ID_3119;
ID_3125 = ID_3121, ID_3124;
ID_3126 = (ID_3125 : select2);
ID_3127 = ID_3103, ID_3126;
ID_3128 = (ID_3127 : /);
ID_3129 = ID_3128, 0;
ID_3130 = ID_3098, ID_3129;
ID_3131 = (ID_3130 : select2);
ID_3132 = ID_3131, 2;
ID_3133 = (ID_3132 : pow);
ID_3134 = ID_3078, ID_3133;
ID_3135 = (ID_3134 :> sqrt);
ID_3136 = ID_3135, ID_2672;
ID_3137 = (ID_3136 : *);
ID_3138 = ID_3137, 0;
ID_3139 = (ID_3138 : <);
ID_3140 = ID_3137, 0.0001f;
ID_3141 = (ID_3140 : max);
ID_3142 = ID_3141, ID_3137;
ID_3143 = ID_3139, ID_3142;
ID_3144 = (ID_3143 : select2);
ID_3145 = ID_3023, ID_3144;
ID_3146 = (ID_3145 : /);
ID_3147 = ID_3146, 0;
ID_3148 = ID_2911, ID_3147;
ID_3149 = (ID_3148 : select2);
ID_3150 = ID_3149, 0;
ID_3151 = (ID_3150 : <);
ID_3152 = ID_3149, 0.0001f;
ID_3153 = (ID_3152 : max);
ID_3154 = ID_3153, ID_3149;
ID_3155 = ID_3151, ID_3154;
ID_3156 = ID_3155 : select2;
ID_3157 = (ID_3156 : acos);
ID_3158 = ID_3157, 0;
ID_3159 = ID_2910, ID_3158;
ID_3160 = (ID_3159 : select2);
ID_3161 = ID_2541, ID_3160;
ID_3162 = (ID_3161 : *);
ID_3163 = ID_3162, 0;
ID_3164 = ID_3163 : +;
ID_3165 = (ID_3164 : sin);
ID_3166 = ID_690, 9.3f;
ID_3167 = (ID_3166 : *);
ID_3168 = ID_689, ID_3167;
ID_3169 = (ID_3168 : -);
ID_3170 = ID_3169, 0;
ID_3171 = (ID_3170 : <);
ID_3172 = ID_3171, ID_697;
ID_3173 = (ID_3172 : select2);
ID_3174 = ID_2547, ID_706;
ID_3175 = (ID_3174 :> sqrt);
ID_3176 = ID_3175, 0;
ID_3177 = (ID_3176 : ==);
ID_3178 = ID_3177, ID_69;
ID_3179 = (ID_3178 : select2);
ID_3180 = (ID_0 : \(x1991).(\(x1992).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1991 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1992 : *) : +)~_));
ID_3181 = 9.3f, ID_3180;
ID_3182 = (ID_3181 : -);
ID_3183 = 0, ID_3182;
ID_3184 = (ID_3183 : -);
ID_3185 = ID_3184, 2;
ID_3186 = (ID_3185 : pow);
ID_3187 = (ID_14 : \(x1993).(\(x1994).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1993 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1994 : *) : +)~_));
ID_3188 = 0, ID_3187;
ID_3189 = (ID_3188 : -);
ID_3190 = 0, ID_3189;
ID_3191 = (ID_3190 : -);
ID_3192 = ID_3191, 2;
ID_3193 = (ID_3192 : pow);
ID_3194 = ID_3186, ID_3193;
ID_3195 = (ID_3194 :> sqrt);
ID_3196 = ID_3195, 0;
ID_3197 = (ID_3196 : <);
ID_3198 = ID_3195, 0.0001f;
ID_3199 = (ID_3198 : max);
ID_3200 = ID_3199, ID_3195;
ID_3201 = ID_3197, ID_3200;
ID_3202 = (ID_3201 : select2);
ID_3203 = ID_2563, ID_3202;
ID_3204 = (ID_3203 : /);
ID_3205 = ID_3204, 0;
ID_3206 = ID_3179, ID_3205;
ID_3207 = (ID_3206 : select2);
ID_3208 = ID_3207, 2;
ID_3209 = (ID_3208 : pow);
ID_3210 = ID_2599, ID_749;
ID_3211 = (ID_3210 :> sqrt);
ID_3212 = ID_3211, 0;
ID_3213 = (ID_3212 : ==);
ID_3214 = ID_3213, ID_69;
ID_3215 = (ID_3214 : select2);
ID_3216 = (ID_0 : \(x1995).(\(x1996).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1995 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1996 : *) : +)~_));
ID_3217 = 9.3f, ID_3216;
ID_3218 = (ID_3217 : -);
ID_3219 = 0, ID_3218;
ID_3220 = (ID_3219 : -);
ID_3221 = ID_3220, 2;
ID_3222 = (ID_3221 : pow);
ID_3223 = (ID_14 : \(x1997).(\(x1998).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1997 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x1998 : *) : +)~_));
ID_3224 = 0, ID_3223;
ID_3225 = (ID_3224 : -);
ID_3226 = 0, ID_3225;
ID_3227 = (ID_3226 : -);
ID_3228 = ID_3227, 2;
ID_3229 = (ID_3228 : pow);
ID_3230 = ID_3222, ID_3229;
ID_3231 = (ID_3230 :> sqrt);
ID_3232 = ID_3231, 0;
ID_3233 = (ID_3232 : <);
ID_3234 = ID_3231, 0.0001f;
ID_3235 = (ID_3234 : max);
ID_3236 = ID_3235, ID_3231;
ID_3237 = ID_3233, ID_3236;
ID_3238 = (ID_3237 : select2);
ID_3239 = ID_760, ID_3238;
ID_3240 = (ID_3239 : /);
ID_3241 = ID_3240, 0;
ID_3242 = ID_3215, ID_3241;
ID_3243 = (ID_3242 : select2);
ID_3244 = ID_3243, 2;
ID_3245 = (ID_3244 : pow);
ID_3246 = ID_3209, ID_3245;
ID_3247 = (ID_3246 :> sqrt);
ID_3248 = 86.49f, 0;
ID_3249 = (ID_3248 :> sqrt);
ID_3250 = ID_3249, 0;
ID_3251 = (ID_3250 : ==);
ID_3252 = ID_3251, ID_69;
ID_3253 = (ID_3252 : select2);
ID_3254 = 9.3f, 9.3f;
ID_3255 = 0, ID_3254;
ID_3256 = (ID_3255 : select2);
ID_3257 = 9.3f, ID_3256;
ID_3258 = (ID_3257 : /);
ID_3259 = ID_3258, 0;
ID_3260 = ID_3253, ID_3259;
ID_3261 = (ID_3260 : select2);
ID_3262 = ID_3261, 2;
ID_3263 = (ID_3262 : pow);
ID_3264 = 0, ID_3256;
ID_3265 = (ID_3264 : /);
ID_3266 = ID_3265, 0;
ID_3267 = ID_3253, ID_3266;
ID_3268 = (ID_3267 : select2);
ID_3269 = ID_3268, 2;
ID_3270 = (ID_3269 : pow);
ID_3271 = ID_3263, ID_3270;
ID_3272 = (ID_3271 :> sqrt);
ID_3273 = ID_3247, ID_3272;
ID_3274 = (ID_3273 : *);
ID_3275 = ID_3274, 0;
ID_3276 = (ID_3275 : ==);
ID_3277 = ID_2682, ID_828;
ID_3278 = (ID_3277 :> sqrt);
ID_3279 = ID_3278, 0;
ID_3280 = (ID_3279 : ==);
ID_3281 = ID_3280, ID_69;
ID_3282 = (ID_3281 : select2);
ID_3283 = (ID_0 : \(x1999).(\(x2000).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x1999 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2000 : *) : +)~_));
ID_3284 = 9.3f, ID_3283;
ID_3285 = (ID_3284 : -);
ID_3286 = 0, ID_3285;
ID_3287 = (ID_3286 : -);
ID_3288 = ID_3287, 2;
ID_3289 = (ID_3288 : pow);
ID_3290 = (ID_14 : \(x2001).(\(x2002).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2001 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2002 : *) : +)~_));
ID_3291 = 0, ID_3290;
ID_3292 = (ID_3291 : -);
ID_3293 = 0, ID_3292;
ID_3294 = (ID_3293 : -);
ID_3295 = ID_3294, 2;
ID_3296 = (ID_3295 : pow);
ID_3297 = ID_3289, ID_3296;
ID_3298 = (ID_3297 :> sqrt);
ID_3299 = ID_3298, 0;
ID_3300 = (ID_3299 : <);
ID_3301 = ID_3298, 0.0001f;
ID_3302 = (ID_3301 : max);
ID_3303 = ID_3302, ID_3298;
ID_3304 = ID_3300, ID_3303;
ID_3305 = (ID_3304 : select2);
ID_3306 = ID_2698, ID_3305;
ID_3307 = (ID_3306 : /);
ID_3308 = ID_3307, 0;
ID_3309 = ID_3282, ID_3308;
ID_3310 = (ID_3309 : select2);
ID_3311 = ID_3261, ID_3310;
ID_3312 = (ID_3311 : *);
ID_3313 = ID_2734, ID_871;
ID_3314 = (ID_3313 :> sqrt);
ID_3315 = ID_3314, 0;
ID_3316 = (ID_3315 : ==);
ID_3317 = ID_3316, ID_69;
ID_3318 = (ID_3317 : select2);
ID_3319 = (ID_0 : \(x2003).(\(x2004).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2003 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2004 : *) : +)~_));
ID_3320 = 9.3f, ID_3319;
ID_3321 = (ID_3320 : -);
ID_3322 = 0, ID_3321;
ID_3323 = (ID_3322 : -);
ID_3324 = ID_3323, 2;
ID_3325 = (ID_3324 : pow);
ID_3326 = (ID_14 : \(x2005).(\(x2006).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2005 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2006 : *) : +)~_));
ID_3327 = 0, ID_3326;
ID_3328 = (ID_3327 : -);
ID_3329 = 0, ID_3328;
ID_3330 = (ID_3329 : -);
ID_3331 = ID_3330, 2;
ID_3332 = (ID_3331 : pow);
ID_3333 = ID_3325, ID_3332;
ID_3334 = (ID_3333 :> sqrt);
ID_3335 = ID_3334, 0;
ID_3336 = (ID_3335 : <);
ID_3337 = ID_3334, 0.0001f;
ID_3338 = (ID_3337 : max);
ID_3339 = ID_3338, ID_3334;
ID_3340 = ID_3336, ID_3339;
ID_3341 = (ID_3340 : select2);
ID_3342 = ID_882, ID_3341;
ID_3343 = (ID_3342 : /);
ID_3344 = ID_3343, 0;
ID_3345 = ID_3318, ID_3344;
ID_3346 = (ID_3345 : select2);
ID_3347 = ID_3268, ID_3346;
ID_3348 = (ID_3347 : *);
ID_3349 = ID_3312, ID_3348;
ID_3350 = (ID_3349 :> _);
ID_3351 = (ID_0 : \(x2007).(\(x2008).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2007 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2008 : *) : +)~_));
ID_3352 = 9.3f, ID_3351;
ID_3353 = (ID_3352 : -);
ID_3354 = 0, ID_3353;
ID_3355 = (ID_3354 : -);
ID_3356 = ID_3355, 2;
ID_3357 = (ID_3356 : pow);
ID_3358 = (ID_14 : \(x2009).(\(x2010).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2009 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2010 : *) : +)~_));
ID_3359 = 0, ID_3358;
ID_3360 = (ID_3359 : -);
ID_3361 = 0, ID_3360;
ID_3362 = (ID_3361 : -);
ID_3363 = ID_3362, 2;
ID_3364 = (ID_3363 : pow);
ID_3365 = ID_3357, ID_3364;
ID_3366 = (ID_3365 :> sqrt);
ID_3367 = ID_3366, 0;
ID_3368 = (ID_3367 : ==);
ID_3369 = ID_3368, ID_69;
ID_3370 = (ID_3369 : select2);
ID_3371 = (ID_0 : \(x2011).(\(x2012).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2011 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2012 : *) : +)~_));
ID_3372 = 9.3f, ID_3371;
ID_3373 = (ID_3372 : -);
ID_3374 = 0, ID_3373;
ID_3375 = (ID_3374 : -);
ID_3376 = (ID_0 : \(x2013).(\(x2014).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2013 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2014 : *) : +)~_));
ID_3377 = 9.3f, ID_3376;
ID_3378 = (ID_3377 : -);
ID_3379 = 0, ID_3378;
ID_3380 = (ID_3379 : -);
ID_3381 = ID_3380, 2;
ID_3382 = (ID_3381 : pow);
ID_3383 = (ID_14 : \(x2015).(\(x2016).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2015 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2016 : *) : +)~_));
ID_3384 = 0, ID_3383;
ID_3385 = (ID_3384 : -);
ID_3386 = 0, ID_3385;
ID_3387 = (ID_3386 : -);
ID_3388 = ID_3387, 2;
ID_3389 = (ID_3388 : pow);
ID_3390 = ID_3382, ID_3389;
ID_3391 = (ID_3390 :> sqrt);
ID_3392 = ID_3391, 0;
ID_3393 = (ID_3392 : <);
ID_3394 = ID_3391, 0.0001f;
ID_3395 = (ID_3394 : max);
ID_3396 = ID_3395, ID_3391;
ID_3397 = ID_3393, ID_3396;
ID_3398 = (ID_3397 : select2);
ID_3399 = ID_3375, ID_3398;
ID_3400 = (ID_3399 : /);
ID_3401 = ID_3400, 0;
ID_3402 = ID_3370, ID_3401;
ID_3403 = (ID_3402 : select2);
ID_3404 = ID_3403, 2;
ID_3405 = (ID_3404 : pow);
ID_3406 = (ID_0 : \(x2017).(\(x2018).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2017 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2018 : *) : +)~_));
ID_3407 = 9.3f, ID_3406;
ID_3408 = (ID_3407 : -);
ID_3409 = 0, ID_3408;
ID_3410 = (ID_3409 : -);
ID_3411 = ID_3410, 2;
ID_3412 = (ID_3411 : pow);
ID_3413 = (ID_14 : \(x2019).(\(x2020).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2019 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2020 : *) : +)~_));
ID_3414 = 0, ID_3413;
ID_3415 = (ID_3414 : -);
ID_3416 = 0, ID_3415;
ID_3417 = (ID_3416 : -);
ID_3418 = ID_3417, 2;
ID_3419 = (ID_3418 : pow);
ID_3420 = ID_3412, ID_3419;
ID_3421 = (ID_3420 :> sqrt);
ID_3422 = ID_3421, 0;
ID_3423 = (ID_3422 : ==);
ID_3424 = ID_3423, ID_69;
ID_3425 = (ID_3424 : select2);
ID_3426 = (ID_14 : \(x2021).(\(x2022).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2021 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2022 : *) : +)~_));
ID_3427 = 0, ID_3426;
ID_3428 = (ID_3427 : -);
ID_3429 = 0, ID_3428;
ID_3430 = (ID_3429 : -);
ID_3431 = (ID_0 : \(x2023).(\(x2024).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2023 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2024 : *) : +)~_));
ID_3432 = 9.3f, ID_3431;
ID_3433 = (ID_3432 : -);
ID_3434 = 0, ID_3433;
ID_3435 = (ID_3434 : -);
ID_3436 = ID_3435, 2;
ID_3437 = (ID_3436 : pow);
ID_3438 = (ID_14 : \(x2025).(\(x2026).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2025 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2026 : *) : +)~_));
ID_3439 = 0, ID_3438;
ID_3440 = (ID_3439 : -);
ID_3441 = 0, ID_3440;
ID_3442 = (ID_3441 : -);
ID_3443 = ID_3442, 2;
ID_3444 = (ID_3443 : pow);
ID_3445 = ID_3437, ID_3444;
ID_3446 = (ID_3445 :> sqrt);
ID_3447 = ID_3446, 0;
ID_3448 = (ID_3447 : <);
ID_3449 = ID_3446, 0.0001f;
ID_3450 = (ID_3449 : max);
ID_3451 = ID_3450, ID_3446;
ID_3452 = ID_3448, ID_3451;
ID_3453 = (ID_3452 : select2);
ID_3454 = ID_3430, ID_3453;
ID_3455 = (ID_3454 : /);
ID_3456 = ID_3455, 0;
ID_3457 = ID_3425, ID_3456;
ID_3458 = (ID_3457 : select2);
ID_3459 = ID_3458, 2;
ID_3460 = (ID_3459 : pow);
ID_3461 = ID_3405, ID_3460;
ID_3462 = (ID_3461 :> sqrt);
ID_3463 = ID_3462, ID_3272;
ID_3464 = (ID_3463 : *);
ID_3465 = ID_3464, 0;
ID_3466 = (ID_3465 : <);
ID_3467 = ID_3464, 0.0001f;
ID_3468 = (ID_3467 : max);
ID_3469 = ID_3468, ID_3464;
ID_3470 = ID_3466, ID_3469;
ID_3471 = (ID_3470 : select2);
ID_3472 = ID_3350, ID_3471;
ID_3473 = (ID_3472 : /);
ID_3474 = ID_3473, 0;
ID_3475 = ID_3276, ID_3474;
ID_3476 = (ID_3475 : select2);
ID_3477 = ID_3476, 0;
ID_3478 = (ID_3477 : ==);
ID_3479 = (ID_3465 : ==);
ID_3480 = (ID_0 : \(x2027).(\(x2028).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2027 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2028 : *) : +)~_));
ID_3481 = 9.3f, ID_3480;
ID_3482 = (ID_3481 : -);
ID_3483 = 0, ID_3482;
ID_3484 = (ID_3483 : -);
ID_3485 = ID_3484, 2;
ID_3486 = (ID_3485 : pow);
ID_3487 = (ID_14 : \(x2029).(\(x2030).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2029 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2030 : *) : +)~_));
ID_3488 = 0, ID_3487;
ID_3489 = (ID_3488 : -);
ID_3490 = 0, ID_3489;
ID_3491 = (ID_3490 : -);
ID_3492 = ID_3491, 2;
ID_3493 = (ID_3492 : pow);
ID_3494 = ID_3486, ID_3493;
ID_3495 = (ID_3494 :> sqrt);
ID_3496 = ID_3495, 0;
ID_3497 = (ID_3496 : ==);
ID_3498 = ID_3497, ID_69;
ID_3499 = (ID_3498 : select2);
ID_3500 = (ID_0 : \(x2031).(\(x2032).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2031 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2032 : *) : +)~_));
ID_3501 = 9.3f, ID_3500;
ID_3502 = (ID_3501 : -);
ID_3503 = 0, ID_3502;
ID_3504 = (ID_3503 : -);
ID_3505 = (ID_0 : \(x2033).(\(x2034).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2033 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2034 : *) : +)~_));
ID_3506 = 9.3f, ID_3505;
ID_3507 = (ID_3506 : -);
ID_3508 = 0, ID_3507;
ID_3509 = (ID_3508 : -);
ID_3510 = ID_3509, 2;
ID_3511 = (ID_3510 : pow);
ID_3512 = (ID_14 : \(x2035).(\(x2036).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2035 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2036 : *) : +)~_));
ID_3513 = 0, ID_3512;
ID_3514 = (ID_3513 : -);
ID_3515 = 0, ID_3514;
ID_3516 = (ID_3515 : -);
ID_3517 = ID_3516, 2;
ID_3518 = (ID_3517 : pow);
ID_3519 = ID_3511, ID_3518;
ID_3520 = (ID_3519 :> sqrt);
ID_3521 = ID_3520, 0;
ID_3522 = (ID_3521 : <);
ID_3523 = ID_3520, 0.0001f;
ID_3524 = (ID_3523 : max);
ID_3525 = ID_3524, ID_3520;
ID_3526 = ID_3522, ID_3525;
ID_3527 = (ID_3526 : select2);
ID_3528 = ID_3504, ID_3527;
ID_3529 = (ID_3528 : /);
ID_3530 = ID_3529, 0;
ID_3531 = ID_3499, ID_3530;
ID_3532 = (ID_3531 : select2);
ID_3533 = ID_3261, ID_3532;
ID_3534 = (ID_3533 : *);
ID_3535 = (ID_0 : \(x2037).(\(x2038).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2037 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2038 : *) : +)~_));
ID_3536 = 9.3f, ID_3535;
ID_3537 = (ID_3536 : -);
ID_3538 = 0, ID_3537;
ID_3539 = (ID_3538 : -);
ID_3540 = ID_3539, 2;
ID_3541 = (ID_3540 : pow);
ID_3542 = (ID_14 : \(x2039).(\(x2040).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2039 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2040 : *) : +)~_));
ID_3543 = 0, ID_3542;
ID_3544 = (ID_3543 : -);
ID_3545 = 0, ID_3544;
ID_3546 = (ID_3545 : -);
ID_3547 = ID_3546, 2;
ID_3548 = (ID_3547 : pow);
ID_3549 = ID_3541, ID_3548;
ID_3550 = (ID_3549 :> sqrt);
ID_3551 = ID_3550, 0;
ID_3552 = (ID_3551 : ==);
ID_3553 = ID_3552, ID_69;
ID_3554 = (ID_3553 : select2);
ID_3555 = (ID_14 : \(x2041).(\(x2042).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2041 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2042 : *) : +)~_));
ID_3556 = 0, ID_3555;
ID_3557 = (ID_3556 : -);
ID_3558 = 0, ID_3557;
ID_3559 = (ID_3558 : -);
ID_3560 = (ID_0 : \(x2043).(\(x2044).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2043 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2044 : *) : +)~_));
ID_3561 = 9.3f, ID_3560;
ID_3562 = (ID_3561 : -);
ID_3563 = 0, ID_3562;
ID_3564 = (ID_3563 : -);
ID_3565 = ID_3564, 2;
ID_3566 = (ID_3565 : pow);
ID_3567 = (ID_14 : \(x2045).(\(x2046).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2045 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2046 : *) : +)~_));
ID_3568 = 0, ID_3567;
ID_3569 = (ID_3568 : -);
ID_3570 = 0, ID_3569;
ID_3571 = (ID_3570 : -);
ID_3572 = ID_3571, 2;
ID_3573 = (ID_3572 : pow);
ID_3574 = ID_3566, ID_3573;
ID_3575 = (ID_3574 :> sqrt);
ID_3576 = ID_3575, 0;
ID_3577 = (ID_3576 : <);
ID_3578 = ID_3575, 0.0001f;
ID_3579 = (ID_3578 : max);
ID_3580 = ID_3579, ID_3575;
ID_3581 = ID_3577, ID_3580;
ID_3582 = (ID_3581 : select2);
ID_3583 = ID_3559, ID_3582;
ID_3584 = (ID_3583 : /);
ID_3585 = ID_3584, 0;
ID_3586 = ID_3554, ID_3585;
ID_3587 = (ID_3586 : select2);
ID_3588 = ID_3268, ID_3587;
ID_3589 = (ID_3588 : *);
ID_3590 = ID_3534, ID_3589;
ID_3591 = (ID_3590 :> _);
ID_3592 = (ID_0 : \(x2047).(\(x2048).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2047 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2048 : *) : +)~_));
ID_3593 = 9.3f, ID_3592;
ID_3594 = (ID_3593 : -);
ID_3595 = 0, ID_3594;
ID_3596 = (ID_3595 : -);
ID_3597 = ID_3596, 2;
ID_3598 = (ID_3597 : pow);
ID_3599 = (ID_14 : \(x2049).(\(x2050).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2049 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2050 : *) : +)~_));
ID_3600 = 0, ID_3599;
ID_3601 = (ID_3600 : -);
ID_3602 = 0, ID_3601;
ID_3603 = (ID_3602 : -);
ID_3604 = ID_3603, 2;
ID_3605 = (ID_3604 : pow);
ID_3606 = ID_3598, ID_3605;
ID_3607 = (ID_3606 :> sqrt);
ID_3608 = ID_3607, 0;
ID_3609 = (ID_3608 : ==);
ID_3610 = ID_3609, ID_69;
ID_3611 = (ID_3610 : select2);
ID_3612 = (ID_0 : \(x2051).(\(x2052).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2051 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2052 : *) : +)~_));
ID_3613 = 9.3f, ID_3612;
ID_3614 = (ID_3613 : -);
ID_3615 = 0, ID_3614;
ID_3616 = (ID_3615 : -);
ID_3617 = (ID_0 : \(x2053).(\(x2054).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2053 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2054 : *) : +)~_));
ID_3618 = 9.3f, ID_3617;
ID_3619 = (ID_3618 : -);
ID_3620 = 0, ID_3619;
ID_3621 = (ID_3620 : -);
ID_3622 = ID_3621, 2;
ID_3623 = (ID_3622 : pow);
ID_3624 = (ID_14 : \(x2055).(\(x2056).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2055 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2056 : *) : +)~_));
ID_3625 = 0, ID_3624;
ID_3626 = (ID_3625 : -);
ID_3627 = 0, ID_3626;
ID_3628 = (ID_3627 : -);
ID_3629 = ID_3628, 2;
ID_3630 = (ID_3629 : pow);
ID_3631 = ID_3623, ID_3630;
ID_3632 = (ID_3631 :> sqrt);
ID_3633 = ID_3632, 0;
ID_3634 = (ID_3633 : <);
ID_3635 = ID_3632, 0.0001f;
ID_3636 = (ID_3635 : max);
ID_3637 = ID_3636, ID_3632;
ID_3638 = ID_3634, ID_3637;
ID_3639 = (ID_3638 : select2);
ID_3640 = ID_3616, ID_3639;
ID_3641 = (ID_3640 : /);
ID_3642 = ID_3641, 0;
ID_3643 = ID_3611, ID_3642;
ID_3644 = (ID_3643 : select2);
ID_3645 = ID_3644, 2;
ID_3646 = (ID_3645 : pow);
ID_3647 = (ID_0 : \(x2057).(\(x2058).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2057 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2058 : *) : +)~_));
ID_3648 = 9.3f, ID_3647;
ID_3649 = (ID_3648 : -);
ID_3650 = 0, ID_3649;
ID_3651 = (ID_3650 : -);
ID_3652 = ID_3651, 2;
ID_3653 = (ID_3652 : pow);
ID_3654 = (ID_14 : \(x2059).(\(x2060).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2059 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2060 : *) : +)~_));
ID_3655 = 0, ID_3654;
ID_3656 = (ID_3655 : -);
ID_3657 = 0, ID_3656;
ID_3658 = (ID_3657 : -);
ID_3659 = ID_3658, 2;
ID_3660 = (ID_3659 : pow);
ID_3661 = ID_3653, ID_3660;
ID_3662 = (ID_3661 :> sqrt);
ID_3663 = ID_3662, 0;
ID_3664 = (ID_3663 : ==);
ID_3665 = ID_3664, ID_69;
ID_3666 = (ID_3665 : select2);
ID_3667 = (ID_14 : \(x2061).(\(x2062).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2061 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2062 : *) : +)~_));
ID_3668 = 0, ID_3667;
ID_3669 = (ID_3668 : -);
ID_3670 = 0, ID_3669;
ID_3671 = (ID_3670 : -);
ID_3672 = (ID_0 : \(x2063).(\(x2064).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2063 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2064 : *) : +)~_));
ID_3673 = 9.3f, ID_3672;
ID_3674 = (ID_3673 : -);
ID_3675 = 0, ID_3674;
ID_3676 = (ID_3675 : -);
ID_3677 = ID_3676, 2;
ID_3678 = (ID_3677 : pow);
ID_3679 = (ID_14 : \(x2065).(\(x2066).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2065 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2066 : *) : +)~_));
ID_3680 = 0, ID_3679;
ID_3681 = (ID_3680 : -);
ID_3682 = 0, ID_3681;
ID_3683 = (ID_3682 : -);
ID_3684 = ID_3683, 2;
ID_3685 = (ID_3684 : pow);
ID_3686 = ID_3678, ID_3685;
ID_3687 = (ID_3686 :> sqrt);
ID_3688 = ID_3687, 0;
ID_3689 = (ID_3688 : <);
ID_3690 = ID_3687, 0.0001f;
ID_3691 = (ID_3690 : max);
ID_3692 = ID_3691, ID_3687;
ID_3693 = ID_3689, ID_3692;
ID_3694 = (ID_3693 : select2);
ID_3695 = ID_3671, ID_3694;
ID_3696 = (ID_3695 : /);
ID_3697 = ID_3696, 0;
ID_3698 = ID_3666, ID_3697;
ID_3699 = (ID_3698 : select2);
ID_3700 = ID_3699, 2;
ID_3701 = (ID_3700 : pow);
ID_3702 = ID_3646, ID_3701;
ID_3703 = (ID_3702 :> sqrt);
ID_3704 = ID_3703, ID_3272;
ID_3705 = (ID_3704 : *);
ID_3706 = ID_3705, 0;
ID_3707 = (ID_3706 : <);
ID_3708 = ID_3705, 0.0001f;
ID_3709 = (ID_3708 : max);
ID_3710 = ID_3709, ID_3705;
ID_3711 = ID_3707, ID_3710;
ID_3712 = (ID_3711 : select2);
ID_3713 = ID_3591, ID_3712;
ID_3714 = (ID_3713 : /);
ID_3715 = ID_3714, 0;
ID_3716 = ID_3479, ID_3715;
ID_3717 = (ID_3716 : select2);
ID_3718 = ID_3717, 0;
ID_3719 = (ID_3718 : <);
ID_3720 = ID_3717, 0.0001f;
ID_3721 = (ID_3720 : max);
ID_3722 = ID_3721, ID_3717;
ID_3723 = ID_3719, ID_3722;
ID_3724 = ID_3723 : select2;
ID_3725 = (ID_3724 : acos);
ID_3726 = ID_3725, 0;
ID_3727 = ID_3478, ID_3726;
ID_3728 = (ID_3727 : select2);
ID_3729 = ID_3173, ID_3728;
ID_3730 = ID_3729 : *;
ID_3731 = (ID_3730 : cos);
ID_3732 = ID_3165, ID_3731;
ID_3733 = (ID_3732 : *);
ID_3734 = _, ID_3733;
ID_3735 = (ID_3734 : *);
ID_3736 = ID_2547, ID_1306;
ID_3737 = (ID_3736 :> sqrt);
ID_3738 = ID_3737, 0;
ID_3739 = (ID_3738 : ==);
ID_3740 = ID_3739, ID_69;
ID_3741 = (ID_3740 : select2);
ID_3742 = (ID_0 : \(x2143).(\(x2144).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2143 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2144 : *) : +)~_));
ID_3743 = 9.3f, ID_3742;
ID_3744 = (ID_3743 : -);
ID_3745 = 0, ID_3744;
ID_3746 = (ID_3745 : -);
ID_3747 = ID_3746, 2;
ID_3748 = (ID_3747 : pow);
ID_3749 = (ID_14 : \(x2145).(\(x2146).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2145 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2146 : *) : +)~_));
ID_3750 = 0, ID_3749;
ID_3751 = (ID_3750 : -);
ID_3752 = 0, ID_3751;
ID_3753 = (ID_3752 : -);
ID_3754 = ID_3753, 2;
ID_3755 = (ID_3754 : pow);
ID_3756 = ID_3748, ID_3755;
ID_3757 = (ID_3756 :> sqrt);
ID_3758 = ID_3757, 0;
ID_3759 = (ID_3758 : <);
ID_3760 = ID_3757, 0.0001f;
ID_3761 = (ID_3760 : max);
ID_3762 = ID_3761, ID_3757;
ID_3763 = ID_3759, ID_3762;
ID_3764 = (ID_3763 : select2);
ID_3765 = ID_2563, ID_3764;
ID_3766 = (ID_3765 : /);
ID_3767 = ID_3766, 0;
ID_3768 = ID_3741, ID_3767;
ID_3769 = (ID_3768 : select2);
ID_3770 = ID_3769, 2;
ID_3771 = (ID_3770 : pow);
ID_3772 = ID_2599, ID_1349;
ID_3773 = (ID_3772 :> sqrt);
ID_3774 = ID_3773, 0;
ID_3775 = (ID_3774 : ==);
ID_3776 = ID_3775, ID_69;
ID_3777 = (ID_3776 : select2);
ID_3778 = (ID_0 : \(x2147).(\(x2148).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2147 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2148 : *) : +)~_));
ID_3779 = 9.3f, ID_3778;
ID_3780 = (ID_3779 : -);
ID_3781 = 0, ID_3780;
ID_3782 = (ID_3781 : -);
ID_3783 = ID_3782, 2;
ID_3784 = (ID_3783 : pow);
ID_3785 = (ID_14 : \(x2149).(\(x2150).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2149 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2150 : *) : +)~_));
ID_3786 = 0, ID_3785;
ID_3787 = (ID_3786 : -);
ID_3788 = 0, ID_3787;
ID_3789 = (ID_3788 : -);
ID_3790 = ID_3789, 2;
ID_3791 = (ID_3790 : pow);
ID_3792 = ID_3784, ID_3791;
ID_3793 = (ID_3792 :> sqrt);
ID_3794 = ID_3793, 0;
ID_3795 = (ID_3794 : <);
ID_3796 = ID_3793, 0.0001f;
ID_3797 = (ID_3796 : max);
ID_3798 = ID_3797, ID_3793;
ID_3799 = ID_3795, ID_3798;
ID_3800 = (ID_3799 : select2);
ID_3801 = ID_1360, ID_3800;
ID_3802 = (ID_3801 : /);
ID_3803 = ID_3802, 0;
ID_3804 = ID_3777, ID_3803;
ID_3805 = (ID_3804 : select2);
ID_3806 = ID_3805, 2;
ID_3807 = (ID_3806 : pow);
ID_3808 = ID_3771, ID_3807;
ID_3809 = (ID_3808 :> sqrt);
ID_3810 = ID_3809, ID_3272;
ID_3811 = (ID_3810 : *);
ID_3812 = ID_3811, 0;
ID_3813 = (ID_3812 : ==);
ID_3814 = ID_2682, ID_1403;
ID_3815 = (ID_3814 :> sqrt);
ID_3816 = ID_3815, 0;
ID_3817 = (ID_3816 : ==);
ID_3818 = ID_3817, ID_69;
ID_3819 = (ID_3818 : select2);
ID_3820 = (ID_0 : \(x2151).(\(x2152).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2151 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2152 : *) : +)~_));
ID_3821 = 9.3f, ID_3820;
ID_3822 = (ID_3821 : -);
ID_3823 = 0, ID_3822;
ID_3824 = (ID_3823 : -);
ID_3825 = ID_3824, 2;
ID_3826 = (ID_3825 : pow);
ID_3827 = (ID_14 : \(x2153).(\(x2154).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2153 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2154 : *) : +)~_));
ID_3828 = 0, ID_3827;
ID_3829 = (ID_3828 : -);
ID_3830 = 0, ID_3829;
ID_3831 = (ID_3830 : -);
ID_3832 = ID_3831, 2;
ID_3833 = (ID_3832 : pow);
ID_3834 = ID_3826, ID_3833;
ID_3835 = (ID_3834 :> sqrt);
ID_3836 = ID_3835, 0;
ID_3837 = (ID_3836 : <);
ID_3838 = ID_3835, 0.0001f;
ID_3839 = (ID_3838 : max);
ID_3840 = ID_3839, ID_3835;
ID_3841 = ID_3837, ID_3840;
ID_3842 = (ID_3841 : select2);
ID_3843 = ID_2698, ID_3842;
ID_3844 = (ID_3843 : /);
ID_3845 = ID_3844, 0;
ID_3846 = ID_3819, ID_3845;
ID_3847 = (ID_3846 : select2);
ID_3848 = ID_3261, ID_3847;
ID_3849 = (ID_3848 : *);
ID_3850 = ID_2734, ID_1446;
ID_3851 = (ID_3850 :> sqrt);
ID_3852 = ID_3851, 0;
ID_3853 = (ID_3852 : ==);
ID_3854 = ID_3853, ID_69;
ID_3855 = (ID_3854 : select2);
ID_3856 = (ID_0 : \(x2155).(\(x2156).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2155 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2156 : *) : +)~_));
ID_3857 = 9.3f, ID_3856;
ID_3858 = (ID_3857 : -);
ID_3859 = 0, ID_3858;
ID_3860 = (ID_3859 : -);
ID_3861 = ID_3860, 2;
ID_3862 = (ID_3861 : pow);
ID_3863 = (ID_14 : \(x2157).(\(x2158).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2157 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2158 : *) : +)~_));
ID_3864 = 0, ID_3863;
ID_3865 = (ID_3864 : -);
ID_3866 = 0, ID_3865;
ID_3867 = (ID_3866 : -);
ID_3868 = ID_3867, 2;
ID_3869 = (ID_3868 : pow);
ID_3870 = ID_3862, ID_3869;
ID_3871 = (ID_3870 :> sqrt);
ID_3872 = ID_3871, 0;
ID_3873 = (ID_3872 : <);
ID_3874 = ID_3871, 0.0001f;
ID_3875 = (ID_3874 : max);
ID_3876 = ID_3875, ID_3871;
ID_3877 = ID_3873, ID_3876;
ID_3878 = (ID_3877 : select2);
ID_3879 = ID_1457, ID_3878;
ID_3880 = (ID_3879 : /);
ID_3881 = ID_3880, 0;
ID_3882 = ID_3855, ID_3881;
ID_3883 = (ID_3882 : select2);
ID_3884 = ID_3268, ID_3883;
ID_3885 = (ID_3884 : *);
ID_3886 = ID_3849, ID_3885;
ID_3887 = (ID_3886 :> _);
ID_3888 = (ID_0 : \(x2159).(\(x2160).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2159 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2160 : *) : +)~_));
ID_3889 = 9.3f, ID_3888;
ID_3890 = (ID_3889 : -);
ID_3891 = 0, ID_3890;
ID_3892 = (ID_3891 : -);
ID_3893 = ID_3892, 2;
ID_3894 = (ID_3893 : pow);
ID_3895 = (ID_14 : \(x2161).(\(x2162).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2161 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2162 : *) : +)~_));
ID_3896 = 0, ID_3895;
ID_3897 = (ID_3896 : -);
ID_3898 = 0, ID_3897;
ID_3899 = (ID_3898 : -);
ID_3900 = ID_3899, 2;
ID_3901 = (ID_3900 : pow);
ID_3902 = ID_3894, ID_3901;
ID_3903 = (ID_3902 :> sqrt);
ID_3904 = ID_3903, 0;
ID_3905 = (ID_3904 : ==);
ID_3906 = ID_3905, ID_69;
ID_3907 = (ID_3906 : select2);
ID_3908 = (ID_0 : \(x2163).(\(x2164).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2163 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2164 : *) : +)~_));
ID_3909 = 9.3f, ID_3908;
ID_3910 = (ID_3909 : -);
ID_3911 = 0, ID_3910;
ID_3912 = (ID_3911 : -);
ID_3913 = (ID_0 : \(x2165).(\(x2166).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2165 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2166 : *) : +)~_));
ID_3914 = 9.3f, ID_3913;
ID_3915 = (ID_3914 : -);
ID_3916 = 0, ID_3915;
ID_3917 = (ID_3916 : -);
ID_3918 = ID_3917, 2;
ID_3919 = (ID_3918 : pow);
ID_3920 = (ID_14 : \(x2167).(\(x2168).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2167 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2168 : *) : +)~_));
ID_3921 = 0, ID_3920;
ID_3922 = (ID_3921 : -);
ID_3923 = 0, ID_3922;
ID_3924 = (ID_3923 : -);
ID_3925 = ID_3924, 2;
ID_3926 = (ID_3925 : pow);
ID_3927 = ID_3919, ID_3926;
ID_3928 = (ID_3927 :> sqrt);
ID_3929 = ID_3928, 0;
ID_3930 = (ID_3929 : <);
ID_3931 = ID_3928, 0.0001f;
ID_3932 = (ID_3931 : max);
ID_3933 = ID_3932, ID_3928;
ID_3934 = ID_3930, ID_3933;
ID_3935 = (ID_3934 : select2);
ID_3936 = ID_3912, ID_3935;
ID_3937 = (ID_3936 : /);
ID_3938 = ID_3937, 0;
ID_3939 = ID_3907, ID_3938;
ID_3940 = (ID_3939 : select2);
ID_3941 = ID_3940, 2;
ID_3942 = (ID_3941 : pow);
ID_3943 = (ID_0 : \(x2169).(\(x2170).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2169 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2170 : *) : +)~_));
ID_3944 = 9.3f, ID_3943;
ID_3945 = (ID_3944 : -);
ID_3946 = 0, ID_3945;
ID_3947 = (ID_3946 : -);
ID_3948 = ID_3947, 2;
ID_3949 = (ID_3948 : pow);
ID_3950 = (ID_14 : \(x2171).(\(x2172).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2171 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2172 : *) : +)~_));
ID_3951 = 0, ID_3950;
ID_3952 = (ID_3951 : -);
ID_3953 = 0, ID_3952;
ID_3954 = (ID_3953 : -);
ID_3955 = ID_3954, 2;
ID_3956 = (ID_3955 : pow);
ID_3957 = ID_3949, ID_3956;
ID_3958 = (ID_3957 :> sqrt);
ID_3959 = ID_3958, 0;
ID_3960 = (ID_3959 : ==);
ID_3961 = ID_3960, ID_69;
ID_3962 = (ID_3961 : select2);
ID_3963 = (ID_14 : \(x2173).(\(x2174).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2173 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2174 : *) : +)~_));
ID_3964 = 0, ID_3963;
ID_3965 = (ID_3964 : -);
ID_3966 = 0, ID_3965;
ID_3967 = (ID_3966 : -);
ID_3968 = (ID_0 : \(x2175).(\(x2176).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2175 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2176 : *) : +)~_));
ID_3969 = 9.3f, ID_3968;
ID_3970 = (ID_3969 : -);
ID_3971 = 0, ID_3970;
ID_3972 = (ID_3971 : -);
ID_3973 = ID_3972, 2;
ID_3974 = (ID_3973 : pow);
ID_3975 = (ID_14 : \(x2177).(\(x2178).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2177 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2178 : *) : +)~_));
ID_3976 = 0, ID_3975;
ID_3977 = (ID_3976 : -);
ID_3978 = 0, ID_3977;
ID_3979 = (ID_3978 : -);
ID_3980 = ID_3979, 2;
ID_3981 = (ID_3980 : pow);
ID_3982 = ID_3974, ID_3981;
ID_3983 = (ID_3982 :> sqrt);
ID_3984 = ID_3983, 0;
ID_3985 = (ID_3984 : <);
ID_3986 = ID_3983, 0.0001f;
ID_3987 = (ID_3986 : max);
ID_3988 = ID_3987, ID_3983;
ID_3989 = ID_3985, ID_3988;
ID_3990 = (ID_3989 : select2);
ID_3991 = ID_3967, ID_3990;
ID_3992 = (ID_3991 : /);
ID_3993 = ID_3992, 0;
ID_3994 = ID_3962, ID_3993;
ID_3995 = (ID_3994 : select2);
ID_3996 = ID_3995, 2;
ID_3997 = (ID_3996 : pow);
ID_3998 = ID_3942, ID_3997;
ID_3999 = (ID_3998 :> sqrt);
ID_4000 = ID_3999, ID_3272;
ID_4001 = (ID_4000 : *);
ID_4002 = ID_4001, 0;
ID_4003 = (ID_4002 : <);
ID_4004 = ID_4001, 0.0001f;
ID_4005 = (ID_4004 : max);
ID_4006 = ID_4005, ID_4001;
ID_4007 = ID_4003, ID_4006;
ID_4008 = (ID_4007 : select2);
ID_4009 = ID_3887, ID_4008;
ID_4010 = (ID_4009 : /);
ID_4011 = ID_4010, 0;
ID_4012 = ID_3813, ID_4011;
ID_4013 = (ID_4012 : select2);
ID_4014 = ID_4013, 0;
ID_4015 = (ID_4014 : ==);
ID_4016 = (ID_4002 : ==);
ID_4017 = (ID_0 : \(x2179).(\(x2180).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2179 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2180 : *) : +)~_));
ID_4018 = 9.3f, ID_4017;
ID_4019 = (ID_4018 : -);
ID_4020 = 0, ID_4019;
ID_4021 = (ID_4020 : -);
ID_4022 = ID_4021, 2;
ID_4023 = (ID_4022 : pow);
ID_4024 = (ID_14 : \(x2181).(\(x2182).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2181 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2182 : *) : +)~_));
ID_4025 = 0, ID_4024;
ID_4026 = (ID_4025 : -);
ID_4027 = 0, ID_4026;
ID_4028 = (ID_4027 : -);
ID_4029 = ID_4028, 2;
ID_4030 = (ID_4029 : pow);
ID_4031 = ID_4023, ID_4030;
ID_4032 = (ID_4031 :> sqrt);
ID_4033 = ID_4032, 0;
ID_4034 = (ID_4033 : ==);
ID_4035 = ID_4034, ID_69;
ID_4036 = (ID_4035 : select2);
ID_4037 = (ID_0 : \(x2183).(\(x2184).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2183 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2184 : *) : +)~_));
ID_4038 = 9.3f, ID_4037;
ID_4039 = (ID_4038 : -);
ID_4040 = 0, ID_4039;
ID_4041 = (ID_4040 : -);
ID_4042 = (ID_0 : \(x2185).(\(x2186).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2185 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2186 : *) : +)~_));
ID_4043 = 9.3f, ID_4042;
ID_4044 = (ID_4043 : -);
ID_4045 = 0, ID_4044;
ID_4046 = (ID_4045 : -);
ID_4047 = ID_4046, 2;
ID_4048 = (ID_4047 : pow);
ID_4049 = (ID_14 : \(x2187).(\(x2188).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2187 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2188 : *) : +)~_));
ID_4050 = 0, ID_4049;
ID_4051 = (ID_4050 : -);
ID_4052 = 0, ID_4051;
ID_4053 = (ID_4052 : -);
ID_4054 = ID_4053, 2;
ID_4055 = (ID_4054 : pow);
ID_4056 = ID_4048, ID_4055;
ID_4057 = (ID_4056 :> sqrt);
ID_4058 = ID_4057, 0;
ID_4059 = (ID_4058 : <);
ID_4060 = ID_4057, 0.0001f;
ID_4061 = (ID_4060 : max);
ID_4062 = ID_4061, ID_4057;
ID_4063 = ID_4059, ID_4062;
ID_4064 = (ID_4063 : select2);
ID_4065 = ID_4041, ID_4064;
ID_4066 = (ID_4065 : /);
ID_4067 = ID_4066, 0;
ID_4068 = ID_4036, ID_4067;
ID_4069 = (ID_4068 : select2);
ID_4070 = ID_3261, ID_4069;
ID_4071 = (ID_4070 : *);
ID_4072 = (ID_0 : \(x2189).(\(x2190).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2189 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2190 : *) : +)~_));
ID_4073 = 9.3f, ID_4072;
ID_4074 = (ID_4073 : -);
ID_4075 = 0, ID_4074;
ID_4076 = (ID_4075 : -);
ID_4077 = ID_4076, 2;
ID_4078 = (ID_4077 : pow);
ID_4079 = (ID_14 : \(x2191).(\(x2192).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2191 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2192 : *) : +)~_));
ID_4080 = 0, ID_4079;
ID_4081 = (ID_4080 : -);
ID_4082 = 0, ID_4081;
ID_4083 = (ID_4082 : -);
ID_4084 = ID_4083, 2;
ID_4085 = (ID_4084 : pow);
ID_4086 = ID_4078, ID_4085;
ID_4087 = (ID_4086 :> sqrt);
ID_4088 = ID_4087, 0;
ID_4089 = (ID_4088 : ==);
ID_4090 = ID_4089, ID_69;
ID_4091 = (ID_4090 : select2);
ID_4092 = (ID_14 : \(x2193).(\(x2194).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2193 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2194 : *) : +)~_));
ID_4093 = 0, ID_4092;
ID_4094 = (ID_4093 : -);
ID_4095 = 0, ID_4094;
ID_4096 = (ID_4095 : -);
ID_4097 = (ID_0 : \(x2195).(\(x2196).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2195 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2196 : *) : +)~_));
ID_4098 = 9.3f, ID_4097;
ID_4099 = (ID_4098 : -);
ID_4100 = 0, ID_4099;
ID_4101 = (ID_4100 : -);
ID_4102 = ID_4101, 2;
ID_4103 = (ID_4102 : pow);
ID_4104 = (ID_14 : \(x2197).(\(x2198).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2197 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2198 : *) : +)~_));
ID_4105 = 0, ID_4104;
ID_4106 = (ID_4105 : -);
ID_4107 = 0, ID_4106;
ID_4108 = (ID_4107 : -);
ID_4109 = ID_4108, 2;
ID_4110 = (ID_4109 : pow);
ID_4111 = ID_4103, ID_4110;
ID_4112 = (ID_4111 :> sqrt);
ID_4113 = ID_4112, 0;
ID_4114 = (ID_4113 : <);
ID_4115 = ID_4112, 0.0001f;
ID_4116 = (ID_4115 : max);
ID_4117 = ID_4116, ID_4112;
ID_4118 = ID_4114, ID_4117;
ID_4119 = (ID_4118 : select2);
ID_4120 = ID_4096, ID_4119;
ID_4121 = (ID_4120 : /);
ID_4122 = ID_4121, 0;
ID_4123 = ID_4091, ID_4122;
ID_4124 = (ID_4123 : select2);
ID_4125 = ID_3268, ID_4124;
ID_4126 = (ID_4125 : *);
ID_4127 = ID_4071, ID_4126;
ID_4128 = (ID_4127 :> _);
ID_4129 = (ID_0 : \(x2199).(\(x2200).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2199 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2200 : *) : +)~_));
ID_4130 = 9.3f, ID_4129;
ID_4131 = (ID_4130 : -);
ID_4132 = 0, ID_4131;
ID_4133 = (ID_4132 : -);
ID_4134 = ID_4133, 2;
ID_4135 = (ID_4134 : pow);
ID_4136 = (ID_14 : \(x2201).(\(x2202).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2201 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2202 : *) : +)~_));
ID_4137 = 0, ID_4136;
ID_4138 = (ID_4137 : -);
ID_4139 = 0, ID_4138;
ID_4140 = (ID_4139 : -);
ID_4141 = ID_4140, 2;
ID_4142 = (ID_4141 : pow);
ID_4143 = ID_4135, ID_4142;
ID_4144 = (ID_4143 :> sqrt);
ID_4145 = ID_4144, 0;
ID_4146 = (ID_4145 : ==);
ID_4147 = ID_4146, ID_69;
ID_4148 = (ID_4147 : select2);
ID_4149 = (ID_0 : \(x2203).(\(x2204).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2203 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2204 : *) : +)~_));
ID_4150 = 9.3f, ID_4149;
ID_4151 = (ID_4150 : -);
ID_4152 = 0, ID_4151;
ID_4153 = (ID_4152 : -);
ID_4154 = (ID_0 : \(x2205).(\(x2206).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2205 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2206 : *) : +)~_));
ID_4155 = 9.3f, ID_4154;
ID_4156 = (ID_4155 : -);
ID_4157 = 0, ID_4156;
ID_4158 = (ID_4157 : -);
ID_4159 = ID_4158, 2;
ID_4160 = (ID_4159 : pow);
ID_4161 = (ID_14 : \(x2207).(\(x2208).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2207 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2208 : *) : +)~_));
ID_4162 = 0, ID_4161;
ID_4163 = (ID_4162 : -);
ID_4164 = 0, ID_4163;
ID_4165 = (ID_4164 : -);
ID_4166 = ID_4165, 2;
ID_4167 = (ID_4166 : pow);
ID_4168 = ID_4160, ID_4167;
ID_4169 = (ID_4168 :> sqrt);
ID_4170 = ID_4169, 0;
ID_4171 = (ID_4170 : <);
ID_4172 = ID_4169, 0.0001f;
ID_4173 = (ID_4172 : max);
ID_4174 = ID_4173, ID_4169;
ID_4175 = ID_4171, ID_4174;
ID_4176 = (ID_4175 : select2);
ID_4177 = ID_4153, ID_4176;
ID_4178 = (ID_4177 : /);
ID_4179 = ID_4178, 0;
ID_4180 = ID_4148, ID_4179;
ID_4181 = (ID_4180 : select2);
ID_4182 = ID_4181, 2;
ID_4183 = (ID_4182 : pow);
ID_4184 = (ID_0 : \(x2209).(\(x2210).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2209 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2210 : *) : +)~_));
ID_4185 = 9.3f, ID_4184;
ID_4186 = (ID_4185 : -);
ID_4187 = 0, ID_4186;
ID_4188 = (ID_4187 : -);
ID_4189 = ID_4188, 2;
ID_4190 = (ID_4189 : pow);
ID_4191 = (ID_14 : \(x2211).(\(x2212).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2211 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2212 : *) : +)~_));
ID_4192 = 0, ID_4191;
ID_4193 = (ID_4192 : -);
ID_4194 = 0, ID_4193;
ID_4195 = (ID_4194 : -);
ID_4196 = ID_4195, 2;
ID_4197 = (ID_4196 : pow);
ID_4198 = ID_4190, ID_4197;
ID_4199 = (ID_4198 :> sqrt);
ID_4200 = ID_4199, 0;
ID_4201 = (ID_4200 : ==);
ID_4202 = ID_4201, ID_69;
ID_4203 = (ID_4202 : select2);
ID_4204 = (ID_14 : \(x2213).(\(x2214).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2213 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2214 : *) : +)~_));
ID_4205 = 0, ID_4204;
ID_4206 = (ID_4205 : -);
ID_4207 = 0, ID_4206;
ID_4208 = (ID_4207 : -);
ID_4209 = (ID_0 : \(x2215).(\(x2216).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2215 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2216 : *) : +)~_));
ID_4210 = 9.3f, ID_4209;
ID_4211 = (ID_4210 : -);
ID_4212 = 0, ID_4211;
ID_4213 = (ID_4212 : -);
ID_4214 = ID_4213, 2;
ID_4215 = (ID_4214 : pow);
ID_4216 = (ID_14 : \(x2217).(\(x2218).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2217 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2218 : *) : +)~_));
ID_4217 = 0, ID_4216;
ID_4218 = (ID_4217 : -);
ID_4219 = 0, ID_4218;
ID_4220 = (ID_4219 : -);
ID_4221 = ID_4220, 2;
ID_4222 = (ID_4221 : pow);
ID_4223 = ID_4215, ID_4222;
ID_4224 = (ID_4223 :> sqrt);
ID_4225 = ID_4224, 0;
ID_4226 = (ID_4225 : <);
ID_4227 = ID_4224, 0.0001f;
ID_4228 = (ID_4227 : max);
ID_4229 = ID_4228, ID_4224;
ID_4230 = ID_4226, ID_4229;
ID_4231 = (ID_4230 : select2);
ID_4232 = ID_4208, ID_4231;
ID_4233 = (ID_4232 : /);
ID_4234 = ID_4233, 0;
ID_4235 = ID_4203, ID_4234;
ID_4236 = (ID_4235 : select2);
ID_4237 = ID_4236, 2;
ID_4238 = (ID_4237 : pow);
ID_4239 = ID_4183, ID_4238;
ID_4240 = (ID_4239 :> sqrt);
ID_4241 = ID_4240, ID_3272;
ID_4242 = (ID_4241 : *);
ID_4243 = ID_4242, 0;
ID_4244 = (ID_4243 : <);
ID_4245 = ID_4242, 0.0001f;
ID_4246 = (ID_4245 : max);
ID_4247 = ID_4246, ID_4242;
ID_4248 = ID_4244, ID_4247;
ID_4249 = (ID_4248 : select2);
ID_4250 = ID_4128, ID_4249;
ID_4251 = (ID_4250 : /);
ID_4252 = ID_4251, 0;
ID_4253 = ID_4016, ID_4252;
ID_4254 = (ID_4253 : select2);
ID_4255 = ID_4254, 0;
ID_4256 = (ID_4255 : <);
ID_4257 = ID_4254, 0.0001f;
ID_4258 = (ID_4257 : max);
ID_4259 = ID_4258, ID_4254;
ID_4260 = ID_4256, ID_4259;
ID_4261 = ID_4260 : select2;
ID_4262 = (ID_4261 : acos);
ID_4263 = ID_4262, 0;
ID_4264 = ID_4015, ID_4263;
ID_4265 = (ID_4264 : select2);
ID_4266 = ID_3173, ID_4265;
ID_4267 = ID_4266 : *;
ID_4268 = (ID_4267 : sin);
ID_4269 = _, ID_4268;
ID_4270 = (ID_4269 : *);
ID_4271 = (ID_3164 : cos);
ID_4272 = ID_1877, 9.3f;
ID_4273 = (ID_4272 : *);
ID_4274 = ID_1876, ID_4273;
ID_4275 = (ID_4274 : -);
ID_4276 = ID_4275, 0;
ID_4277 = (ID_4276 : <);
ID_4278 = ID_4277, ID_697;
ID_4279 = (ID_4278 : select2);
ID_4280 = 9.3f, ID_1886;
ID_4281 = (ID_4280 : -);
ID_4282 = 0, ID_4281;
ID_4283 = (ID_4282 : -);
ID_4284 = ID_4283, 2;
ID_4285 = (ID_4284 : pow);
ID_4286 = ID_4285, ID_1899;
ID_4287 = (ID_4286 :> sqrt);
ID_4288 = ID_4287, 0;
ID_4289 = (ID_4288 : ==);
ID_4290 = ID_4289, ID_69;
ID_4291 = (ID_4290 : select2);
ID_4292 = 9.3f, ID_1906;
ID_4293 = (ID_4292 : -);
ID_4294 = 0, ID_4293;
ID_4295 = (ID_4294 : -);
ID_4296 = (ID_0 : \(x2295).(\(x2296).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2295 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2296 : *) : +)~_));
ID_4297 = 9.3f, ID_4296;
ID_4298 = (ID_4297 : -);
ID_4299 = 0, ID_4298;
ID_4300 = (ID_4299 : -);
ID_4301 = ID_4300, 2;
ID_4302 = (ID_4301 : pow);
ID_4303 = (ID_14 : \(x2297).(\(x2298).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2297 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2298 : *) : +)~_));
ID_4304 = 0, ID_4303;
ID_4305 = (ID_4304 : -);
ID_4306 = 0, ID_4305;
ID_4307 = (ID_4306 : -);
ID_4308 = ID_4307, 2;
ID_4309 = (ID_4308 : pow);
ID_4310 = ID_4302, ID_4309;
ID_4311 = (ID_4310 :> sqrt);
ID_4312 = ID_4311, 0;
ID_4313 = (ID_4312 : <);
ID_4314 = ID_4311, 0.0001f;
ID_4315 = (ID_4314 : max);
ID_4316 = ID_4315, ID_4311;
ID_4317 = ID_4313, ID_4316;
ID_4318 = (ID_4317 : select2);
ID_4319 = ID_4295, ID_4318;
ID_4320 = (ID_4319 : /);
ID_4321 = ID_4320, 0;
ID_4322 = ID_4291, ID_4321;
ID_4323 = (ID_4322 : select2);
ID_4324 = ID_4323, 2;
ID_4325 = (ID_4324 : pow);
ID_4326 = 9.3f, ID_1941;
ID_4327 = (ID_4326 : -);
ID_4328 = 0, ID_4327;
ID_4329 = (ID_4328 : -);
ID_4330 = ID_4329, 2;
ID_4331 = (ID_4330 : pow);
ID_4332 = ID_4331, ID_1954;
ID_4333 = (ID_4332 :> sqrt);
ID_4334 = ID_4333, 0;
ID_4335 = (ID_4334 : ==);
ID_4336 = ID_4335, ID_69;
ID_4337 = (ID_4336 : select2);
ID_4338 = (ID_0 : \(x2299).(\(x2300).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2299 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2300 : *) : +)~_));
ID_4339 = 9.3f, ID_4338;
ID_4340 = (ID_4339 : -);
ID_4341 = 0, ID_4340;
ID_4342 = (ID_4341 : -);
ID_4343 = ID_4342, 2;
ID_4344 = (ID_4343 : pow);
ID_4345 = (ID_14 : \(x2301).(\(x2302).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2301 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2302 : *) : +)~_));
ID_4346 = 0, ID_4345;
ID_4347 = (ID_4346 : -);
ID_4348 = 0, ID_4347;
ID_4349 = (ID_4348 : -);
ID_4350 = ID_4349, 2;
ID_4351 = (ID_4350 : pow);
ID_4352 = ID_4344, ID_4351;
ID_4353 = (ID_4352 :> sqrt);
ID_4354 = ID_4353, 0;
ID_4355 = (ID_4354 : <);
ID_4356 = ID_4353, 0.0001f;
ID_4357 = (ID_4356 : max);
ID_4358 = ID_4357, ID_4353;
ID_4359 = ID_4355, ID_4358;
ID_4360 = (ID_4359 : select2);
ID_4361 = ID_1965, ID_4360;
ID_4362 = (ID_4361 : /);
ID_4363 = ID_4362, 0;
ID_4364 = ID_4337, ID_4363;
ID_4365 = (ID_4364 : select2);
ID_4366 = ID_4365, 2;
ID_4367 = (ID_4366 : pow);
ID_4368 = ID_4325, ID_4367;
ID_4369 = (ID_4368 :> sqrt);
ID_4370 = ID_4369, ID_3272;
ID_4371 = (ID_4370 : *);
ID_4372 = ID_4371, 0;
ID_4373 = (ID_4372 : ==);
ID_4374 = 9.3f, ID_2002;
ID_4375 = (ID_4374 : -);
ID_4376 = 0, ID_4375;
ID_4377 = (ID_4376 : -);
ID_4378 = ID_4377, 2;
ID_4379 = (ID_4378 : pow);
ID_4380 = ID_4379, ID_2015;
ID_4381 = (ID_4380 :> sqrt);
ID_4382 = ID_4381, 0;
ID_4383 = (ID_4382 : ==);
ID_4384 = ID_4383, ID_69;
ID_4385 = (ID_4384 : select2);
ID_4386 = 9.3f, ID_2022;
ID_4387 = (ID_4386 : -);
ID_4388 = 0, ID_4387;
ID_4389 = (ID_4388 : -);
ID_4390 = (ID_0 : \(x2303).(\(x2304).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2303 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2304 : *) : +)~_));
ID_4391 = 9.3f, ID_4390;
ID_4392 = (ID_4391 : -);
ID_4393 = 0, ID_4392;
ID_4394 = (ID_4393 : -);
ID_4395 = ID_4394, 2;
ID_4396 = (ID_4395 : pow);
ID_4397 = (ID_14 : \(x2305).(\(x2306).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2305 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2306 : *) : +)~_));
ID_4398 = 0, ID_4397;
ID_4399 = (ID_4398 : -);
ID_4400 = 0, ID_4399;
ID_4401 = (ID_4400 : -);
ID_4402 = ID_4401, 2;
ID_4403 = (ID_4402 : pow);
ID_4404 = ID_4396, ID_4403;
ID_4405 = (ID_4404 :> sqrt);
ID_4406 = ID_4405, 0;
ID_4407 = (ID_4406 : <);
ID_4408 = ID_4405, 0.0001f;
ID_4409 = (ID_4408 : max);
ID_4410 = ID_4409, ID_4405;
ID_4411 = ID_4407, ID_4410;
ID_4412 = (ID_4411 : select2);
ID_4413 = ID_4389, ID_4412;
ID_4414 = (ID_4413 : /);
ID_4415 = ID_4414, 0;
ID_4416 = ID_4385, ID_4415;
ID_4417 = (ID_4416 : select2);
ID_4418 = ID_3261, ID_4417;
ID_4419 = (ID_4418 : *);
ID_4420 = 9.3f, ID_2057;
ID_4421 = (ID_4420 : -);
ID_4422 = 0, ID_4421;
ID_4423 = (ID_4422 : -);
ID_4424 = ID_4423, 2;
ID_4425 = (ID_4424 : pow);
ID_4426 = ID_4425, ID_2070;
ID_4427 = (ID_4426 :> sqrt);
ID_4428 = ID_4427, 0;
ID_4429 = (ID_4428 : ==);
ID_4430 = ID_4429, ID_69;
ID_4431 = (ID_4430 : select2);
ID_4432 = (ID_0 : \(x2307).(\(x2308).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2307 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2308 : *) : +)~_));
ID_4433 = 9.3f, ID_4432;
ID_4434 = (ID_4433 : -);
ID_4435 = 0, ID_4434;
ID_4436 = (ID_4435 : -);
ID_4437 = ID_4436, 2;
ID_4438 = (ID_4437 : pow);
ID_4439 = (ID_14 : \(x2309).(\(x2310).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2309 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2310 : *) : +)~_));
ID_4440 = 0, ID_4439;
ID_4441 = (ID_4440 : -);
ID_4442 = 0, ID_4441;
ID_4443 = (ID_4442 : -);
ID_4444 = ID_4443, 2;
ID_4445 = (ID_4444 : pow);
ID_4446 = ID_4438, ID_4445;
ID_4447 = (ID_4446 :> sqrt);
ID_4448 = ID_4447, 0;
ID_4449 = (ID_4448 : <);
ID_4450 = ID_4447, 0.0001f;
ID_4451 = (ID_4450 : max);
ID_4452 = ID_4451, ID_4447;
ID_4453 = ID_4449, ID_4452;
ID_4454 = (ID_4453 : select2);
ID_4455 = ID_2081, ID_4454;
ID_4456 = (ID_4455 : /);
ID_4457 = ID_4456, 0;
ID_4458 = ID_4431, ID_4457;
ID_4459 = (ID_4458 : select2);
ID_4460 = ID_3268, ID_4459;
ID_4461 = (ID_4460 : *);
ID_4462 = ID_4419, ID_4461;
ID_4463 = (ID_4462 :> _);
ID_4464 = (ID_0 : \(x2311).(\(x2312).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2311 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2312 : *) : +)~_));
ID_4465 = 9.3f, ID_4464;
ID_4466 = (ID_4465 : -);
ID_4467 = 0, ID_4466;
ID_4468 = (ID_4467 : -);
ID_4469 = ID_4468, 2;
ID_4470 = (ID_4469 : pow);
ID_4471 = (ID_14 : \(x2313).(\(x2314).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2313 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2314 : *) : +)~_));
ID_4472 = 0, ID_4471;
ID_4473 = (ID_4472 : -);
ID_4474 = 0, ID_4473;
ID_4475 = (ID_4474 : -);
ID_4476 = ID_4475, 2;
ID_4477 = (ID_4476 : pow);
ID_4478 = ID_4470, ID_4477;
ID_4479 = (ID_4478 :> sqrt);
ID_4480 = ID_4479, 0;
ID_4481 = (ID_4480 : ==);
ID_4482 = ID_4481, ID_69;
ID_4483 = (ID_4482 : select2);
ID_4484 = (ID_0 : \(x2315).(\(x2316).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2315 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2316 : *) : +)~_));
ID_4485 = 9.3f, ID_4484;
ID_4486 = (ID_4485 : -);
ID_4487 = 0, ID_4486;
ID_4488 = (ID_4487 : -);
ID_4489 = (ID_0 : \(x2317).(\(x2318).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2317 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2318 : *) : +)~_));
ID_4490 = 9.3f, ID_4489;
ID_4491 = (ID_4490 : -);
ID_4492 = 0, ID_4491;
ID_4493 = (ID_4492 : -);
ID_4494 = ID_4493, 2;
ID_4495 = (ID_4494 : pow);
ID_4496 = (ID_14 : \(x2319).(\(x2320).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2319 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2320 : *) : +)~_));
ID_4497 = 0, ID_4496;
ID_4498 = (ID_4497 : -);
ID_4499 = 0, ID_4498;
ID_4500 = (ID_4499 : -);
ID_4501 = ID_4500, 2;
ID_4502 = (ID_4501 : pow);
ID_4503 = ID_4495, ID_4502;
ID_4504 = (ID_4503 :> sqrt);
ID_4505 = ID_4504, 0;
ID_4506 = (ID_4505 : <);
ID_4507 = ID_4504, 0.0001f;
ID_4508 = (ID_4507 : max);
ID_4509 = ID_4508, ID_4504;
ID_4510 = ID_4506, ID_4509;
ID_4511 = (ID_4510 : select2);
ID_4512 = ID_4488, ID_4511;
ID_4513 = (ID_4512 : /);
ID_4514 = ID_4513, 0;
ID_4515 = ID_4483, ID_4514;
ID_4516 = (ID_4515 : select2);
ID_4517 = ID_4516, 2;
ID_4518 = (ID_4517 : pow);
ID_4519 = (ID_0 : \(x2321).(\(x2322).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2321 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2322 : *) : +)~_));
ID_4520 = 9.3f, ID_4519;
ID_4521 = (ID_4520 : -);
ID_4522 = 0, ID_4521;
ID_4523 = (ID_4522 : -);
ID_4524 = ID_4523, 2;
ID_4525 = (ID_4524 : pow);
ID_4526 = (ID_14 : \(x2323).(\(x2324).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2323 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2324 : *) : +)~_));
ID_4527 = 0, ID_4526;
ID_4528 = (ID_4527 : -);
ID_4529 = 0, ID_4528;
ID_4530 = (ID_4529 : -);
ID_4531 = ID_4530, 2;
ID_4532 = (ID_4531 : pow);
ID_4533 = ID_4525, ID_4532;
ID_4534 = (ID_4533 :> sqrt);
ID_4535 = ID_4534, 0;
ID_4536 = (ID_4535 : ==);
ID_4537 = ID_4536, ID_69;
ID_4538 = (ID_4537 : select2);
ID_4539 = (ID_14 : \(x2325).(\(x2326).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2325 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2326 : *) : +)~_));
ID_4540 = 0, ID_4539;
ID_4541 = (ID_4540 : -);
ID_4542 = 0, ID_4541;
ID_4543 = (ID_4542 : -);
ID_4544 = (ID_0 : \(x2327).(\(x2328).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2327 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2328 : *) : +)~_));
ID_4545 = 9.3f, ID_4544;
ID_4546 = (ID_4545 : -);
ID_4547 = 0, ID_4546;
ID_4548 = (ID_4547 : -);
ID_4549 = ID_4548, 2;
ID_4550 = (ID_4549 : pow);
ID_4551 = (ID_14 : \(x2329).(\(x2330).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2329 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2330 : *) : +)~_));
ID_4552 = 0, ID_4551;
ID_4553 = (ID_4552 : -);
ID_4554 = 0, ID_4553;
ID_4555 = (ID_4554 : -);
ID_4556 = ID_4555, 2;
ID_4557 = (ID_4556 : pow);
ID_4558 = ID_4550, ID_4557;
ID_4559 = (ID_4558 :> sqrt);
ID_4560 = ID_4559, 0;
ID_4561 = (ID_4560 : <);
ID_4562 = ID_4559, 0.0001f;
ID_4563 = (ID_4562 : max);
ID_4564 = ID_4563, ID_4559;
ID_4565 = ID_4561, ID_4564;
ID_4566 = (ID_4565 : select2);
ID_4567 = ID_4543, ID_4566;
ID_4568 = (ID_4567 : /);
ID_4569 = ID_4568, 0;
ID_4570 = ID_4538, ID_4569;
ID_4571 = (ID_4570 : select2);
ID_4572 = ID_4571, 2;
ID_4573 = (ID_4572 : pow);
ID_4574 = ID_4518, ID_4573;
ID_4575 = (ID_4574 :> sqrt);
ID_4576 = ID_4575, ID_3272;
ID_4577 = (ID_4576 : *);
ID_4578 = ID_4577, 0;
ID_4579 = (ID_4578 : <);
ID_4580 = ID_4577, 0.0001f;
ID_4581 = (ID_4580 : max);
ID_4582 = ID_4581, ID_4577;
ID_4583 = ID_4579, ID_4582;
ID_4584 = (ID_4583 : select2);
ID_4585 = ID_4463, ID_4584;
ID_4586 = (ID_4585 : /);
ID_4587 = ID_4586, 0;
ID_4588 = ID_4373, ID_4587;
ID_4589 = (ID_4588 : select2);
ID_4590 = ID_4589, 0;
ID_4591 = (ID_4590 : ==);
ID_4592 = (ID_4578 : ==);
ID_4593 = (ID_0 : \(x2331).(\(x2332).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2331 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2332 : *) : +)~_));
ID_4594 = 9.3f, ID_4593;
ID_4595 = (ID_4594 : -);
ID_4596 = 0, ID_4595;
ID_4597 = (ID_4596 : -);
ID_4598 = ID_4597, 2;
ID_4599 = (ID_4598 : pow);
ID_4600 = (ID_14 : \(x2333).(\(x2334).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2333 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2334 : *) : +)~_));
ID_4601 = 0, ID_4600;
ID_4602 = (ID_4601 : -);
ID_4603 = 0, ID_4602;
ID_4604 = (ID_4603 : -);
ID_4605 = ID_4604, 2;
ID_4606 = (ID_4605 : pow);
ID_4607 = ID_4599, ID_4606;
ID_4608 = (ID_4607 :> sqrt);
ID_4609 = ID_4608, 0;
ID_4610 = (ID_4609 : ==);
ID_4611 = ID_4610, ID_69;
ID_4612 = (ID_4611 : select2);
ID_4613 = (ID_0 : \(x2335).(\(x2336).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2335 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2336 : *) : +)~_));
ID_4614 = 9.3f, ID_4613;
ID_4615 = (ID_4614 : -);
ID_4616 = 0, ID_4615;
ID_4617 = (ID_4616 : -);
ID_4618 = (ID_0 : \(x2337).(\(x2338).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2337 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2338 : *) : +)~_));
ID_4619 = 9.3f, ID_4618;
ID_4620 = (ID_4619 : -);
ID_4621 = 0, ID_4620;
ID_4622 = (ID_4621 : -);
ID_4623 = ID_4622, 2;
ID_4624 = (ID_4623 : pow);
ID_4625 = (ID_14 : \(x2339).(\(x2340).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2339 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2340 : *) : +)~_));
ID_4626 = 0, ID_4625;
ID_4627 = (ID_4626 : -);
ID_4628 = 0, ID_4627;
ID_4629 = (ID_4628 : -);
ID_4630 = ID_4629, 2;
ID_4631 = (ID_4630 : pow);
ID_4632 = ID_4624, ID_4631;
ID_4633 = (ID_4632 :> sqrt);
ID_4634 = ID_4633, 0;
ID_4635 = (ID_4634 : <);
ID_4636 = ID_4633, 0.0001f;
ID_4637 = (ID_4636 : max);
ID_4638 = ID_4637, ID_4633;
ID_4639 = ID_4635, ID_4638;
ID_4640 = (ID_4639 : select2);
ID_4641 = ID_4617, ID_4640;
ID_4642 = (ID_4641 : /);
ID_4643 = ID_4642, 0;
ID_4644 = ID_4612, ID_4643;
ID_4645 = (ID_4644 : select2);
ID_4646 = ID_3261, ID_4645;
ID_4647 = (ID_4646 : *);
ID_4648 = (ID_0 : \(x2341).(\(x2342).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2341 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2342 : *) : +)~_));
ID_4649 = 9.3f, ID_4648;
ID_4650 = (ID_4649 : -);
ID_4651 = 0, ID_4650;
ID_4652 = (ID_4651 : -);
ID_4653 = ID_4652, 2;
ID_4654 = (ID_4653 : pow);
ID_4655 = (ID_14 : \(x2343).(\(x2344).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2343 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2344 : *) : +)~_));
ID_4656 = 0, ID_4655;
ID_4657 = (ID_4656 : -);
ID_4658 = 0, ID_4657;
ID_4659 = (ID_4658 : -);
ID_4660 = ID_4659, 2;
ID_4661 = (ID_4660 : pow);
ID_4662 = ID_4654, ID_4661;
ID_4663 = (ID_4662 :> sqrt);
ID_4664 = ID_4663, 0;
ID_4665 = (ID_4664 : ==);
ID_4666 = ID_4665, ID_69;
ID_4667 = (ID_4666 : select2);
ID_4668 = (ID_14 : \(x2345).(\(x2346).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2345 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2346 : *) : +)~_));
ID_4669 = 0, ID_4668;
ID_4670 = (ID_4669 : -);
ID_4671 = 0, ID_4670;
ID_4672 = (ID_4671 : -);
ID_4673 = (ID_0 : \(x2347).(\(x2348).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2347 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2348 : *) : +)~_));
ID_4674 = 9.3f, ID_4673;
ID_4675 = (ID_4674 : -);
ID_4676 = 0, ID_4675;
ID_4677 = (ID_4676 : -);
ID_4678 = ID_4677, 2;
ID_4679 = (ID_4678 : pow);
ID_4680 = (ID_14 : \(x2349).(\(x2350).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2349 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2350 : *) : +)~_));
ID_4681 = 0, ID_4680;
ID_4682 = (ID_4681 : -);
ID_4683 = 0, ID_4682;
ID_4684 = (ID_4683 : -);
ID_4685 = ID_4684, 2;
ID_4686 = (ID_4685 : pow);
ID_4687 = ID_4679, ID_4686;
ID_4688 = (ID_4687 :> sqrt);
ID_4689 = ID_4688, 0;
ID_4690 = (ID_4689 : <);
ID_4691 = ID_4688, 0.0001f;
ID_4692 = (ID_4691 : max);
ID_4693 = ID_4692, ID_4688;
ID_4694 = ID_4690, ID_4693;
ID_4695 = (ID_4694 : select2);
ID_4696 = ID_4672, ID_4695;
ID_4697 = (ID_4696 : /);
ID_4698 = ID_4697, 0;
ID_4699 = ID_4667, ID_4698;
ID_4700 = (ID_4699 : select2);
ID_4701 = ID_3268, ID_4700;
ID_4702 = (ID_4701 : *);
ID_4703 = ID_4647, ID_4702;
ID_4704 = (ID_4703 :> _);
ID_4705 = (ID_0 : \(x2351).(\(x2352).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2351 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2352 : *) : +)~_));
ID_4706 = 9.3f, ID_4705;
ID_4707 = (ID_4706 : -);
ID_4708 = 0, ID_4707;
ID_4709 = (ID_4708 : -);
ID_4710 = ID_4709, 2;
ID_4711 = (ID_4710 : pow);
ID_4712 = (ID_14 : \(x2353).(\(x2354).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2353 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2354 : *) : +)~_));
ID_4713 = 0, ID_4712;
ID_4714 = (ID_4713 : -);
ID_4715 = 0, ID_4714;
ID_4716 = (ID_4715 : -);
ID_4717 = ID_4716, 2;
ID_4718 = (ID_4717 : pow);
ID_4719 = ID_4711, ID_4718;
ID_4720 = (ID_4719 :> sqrt);
ID_4721 = ID_4720, 0;
ID_4722 = (ID_4721 : ==);
ID_4723 = ID_4722, ID_69;
ID_4724 = (ID_4723 : select2);
ID_4725 = (ID_0 : \(x2355).(\(x2356).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2355 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2356 : *) : +)~_));
ID_4726 = 9.3f, ID_4725;
ID_4727 = (ID_4726 : -);
ID_4728 = 0, ID_4727;
ID_4729 = (ID_4728 : -);
ID_4730 = (ID_0 : \(x2357).(\(x2358).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2357 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2358 : *) : +)~_));
ID_4731 = 9.3f, ID_4730;
ID_4732 = (ID_4731 : -);
ID_4733 = 0, ID_4732;
ID_4734 = (ID_4733 : -);
ID_4735 = ID_4734, 2;
ID_4736 = (ID_4735 : pow);
ID_4737 = (ID_14 : \(x2359).(\(x2360).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2359 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2360 : *) : +)~_));
ID_4738 = 0, ID_4737;
ID_4739 = (ID_4738 : -);
ID_4740 = 0, ID_4739;
ID_4741 = (ID_4740 : -);
ID_4742 = ID_4741, 2;
ID_4743 = (ID_4742 : pow);
ID_4744 = ID_4736, ID_4743;
ID_4745 = (ID_4744 :> sqrt);
ID_4746 = ID_4745, 0;
ID_4747 = (ID_4746 : <);
ID_4748 = ID_4745, 0.0001f;
ID_4749 = (ID_4748 : max);
ID_4750 = ID_4749, ID_4745;
ID_4751 = ID_4747, ID_4750;
ID_4752 = (ID_4751 : select2);
ID_4753 = ID_4729, ID_4752;
ID_4754 = (ID_4753 : /);
ID_4755 = ID_4754, 0;
ID_4756 = ID_4724, ID_4755;
ID_4757 = (ID_4756 : select2);
ID_4758 = ID_4757, 2;
ID_4759 = (ID_4758 : pow);
ID_4760 = (ID_0 : \(x2361).(\(x2362).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2361 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2362 : *) : +)~_));
ID_4761 = 9.3f, ID_4760;
ID_4762 = (ID_4761 : -);
ID_4763 = 0, ID_4762;
ID_4764 = (ID_4763 : -);
ID_4765 = ID_4764, 2;
ID_4766 = (ID_4765 : pow);
ID_4767 = (ID_14 : \(x2363).(\(x2364).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2363 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2364 : *) : +)~_));
ID_4768 = 0, ID_4767;
ID_4769 = (ID_4768 : -);
ID_4770 = 0, ID_4769;
ID_4771 = (ID_4770 : -);
ID_4772 = ID_4771, 2;
ID_4773 = (ID_4772 : pow);
ID_4774 = ID_4766, ID_4773;
ID_4775 = (ID_4774 :> sqrt);
ID_4776 = ID_4775, 0;
ID_4777 = (ID_4776 : ==);
ID_4778 = ID_4777, ID_69;
ID_4779 = (ID_4778 : select2);
ID_4780 = (ID_14 : \(x2365).(\(x2366).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2365 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2366 : *) : +)~_));
ID_4781 = 0, ID_4780;
ID_4782 = (ID_4781 : -);
ID_4783 = 0, ID_4782;
ID_4784 = (ID_4783 : -);
ID_4785 = (ID_0 : \(x2367).(\(x2368).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2367 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2368 : *) : +)~_));
ID_4786 = 9.3f, ID_4785;
ID_4787 = (ID_4786 : -);
ID_4788 = 0, ID_4787;
ID_4789 = (ID_4788 : -);
ID_4790 = ID_4789, 2;
ID_4791 = (ID_4790 : pow);
ID_4792 = (ID_14 : \(x2369).(\(x2370).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2369 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2370 : *) : +)~_));
ID_4793 = 0, ID_4792;
ID_4794 = (ID_4793 : -);
ID_4795 = 0, ID_4794;
ID_4796 = (ID_4795 : -);
ID_4797 = ID_4796, 2;
ID_4798 = (ID_4797 : pow);
ID_4799 = ID_4791, ID_4798;
ID_4800 = (ID_4799 :> sqrt);
ID_4801 = ID_4800, 0;
ID_4802 = (ID_4801 : <);
ID_4803 = ID_4800, 0.0001f;
ID_4804 = (ID_4803 : max);
ID_4805 = ID_4804, ID_4800;
ID_4806 = ID_4802, ID_4805;
ID_4807 = (ID_4806 : select2);
ID_4808 = ID_4784, ID_4807;
ID_4809 = (ID_4808 : /);
ID_4810 = ID_4809, 0;
ID_4811 = ID_4779, ID_4810;
ID_4812 = (ID_4811 : select2);
ID_4813 = ID_4812, 2;
ID_4814 = (ID_4813 : pow);
ID_4815 = ID_4759, ID_4814;
ID_4816 = (ID_4815 :> sqrt);
ID_4817 = ID_4816, ID_3272;
ID_4818 = (ID_4817 : *);
ID_4819 = ID_4818, 0;
ID_4820 = (ID_4819 : <);
ID_4821 = ID_4818, 0.0001f;
ID_4822 = (ID_4821 : max);
ID_4823 = ID_4822, ID_4818;
ID_4824 = ID_4820, ID_4823;
ID_4825 = (ID_4824 : select2);
ID_4826 = ID_4704, ID_4825;
ID_4827 = (ID_4826 : /);
ID_4828 = ID_4827, 0;
ID_4829 = ID_4592, ID_4828;
ID_4830 = (ID_4829 : select2);
ID_4831 = ID_4830, 0;
ID_4832 = (ID_4831 : <);
ID_4833 = ID_4830, 0.0001f;
ID_4834 = (ID_4833 : max);
ID_4835 = ID_4834, ID_4830;
ID_4836 = ID_4832, ID_4835;
ID_4837 = ID_4836 : select2;
ID_4838 = (ID_4837 : acos);
ID_4839 = ID_4838, 0;
ID_4840 = ID_4591, ID_4839;
ID_4841 = (ID_4840 : select2);
ID_4842 = ID_4279, ID_4841;
ID_4843 = ID_4842 : *;
ID_4844 = (ID_4843 : cos);
ID_4845 = ID_4271, ID_4844;
ID_4846 = (ID_4845 : *);
ID_4847 = _, ID_4846;
ID_4848 = (ID_4847 : *);
ID_4849 = ID_4270, ID_4848;
ID_4850 = ID_3735, ID_4849;
ID_4851 = ID_37, ID_4850;
ID_4852 = _ <: ID_4851;
ID_4853 = ID_4852 : \(x5470).(\(x5471).(\(x5472).(\(x5473).(((((x5470,x5471 : +),x5472 : +),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : -),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : +),x5473 : -),2 : /),((((x5470,x5471 : +),x5472 : -),x5473 : -),2 : /)))));
ID_4854 = \(x5474).(x5474,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),(0,(((((((hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),9.3f : -),2 : pow),(((hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),-3.6f : -),2 : pow) : +),(((hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : + : sqrt),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),340 : /) : max) : min) : @) : ID_4853;
ID_4855 = (ID_2531 : ID_4854);
ID_4856 = ID_1, 10;
ID_4857 = (ID_4856 : -);
ID_4858 = ID_4857, 2;
ID_4859 = (ID_4858 : pow);
ID_4860 = ID_7, 0;
ID_4861 = (ID_4860 : -);
ID_4862 = ID_4861, 2;
ID_4863 = (ID_4862 : pow);
ID_4864 = ID_4859, ID_4863;
ID_4865 = (ID_4864 : +);
ID_4866 = ID_4865, ID_19;
ID_4867 = ID_4866 : +;
ID_4868 = (ID_4867 : sqrt);
ID_4869 = ID_4868, 1;
ID_4870 = ID_4869 : max;
ID_4871 = (ID_4870 : log10);
ID_4872 = 11, ID_4871;
ID_4873 = (ID_4872 : *);
ID_4874 = 0, ID_4873;
ID_4875 = (ID_4874 : -);
ID_4876 = ID_4875, 2e+01f;
ID_4877 = (ID_4876 : /);
ID_4878 = 1e+01f, ID_4877;
ID_4879 = (ID_4878 : pow);
ID_4880 = _, ID_4879;
ID_4881 = ID_4880 : *;
ID_4882 = ID_41, 10;
ID_4883 = (ID_4882 : *);
ID_4884 = ID_689, ID_4883;
ID_4885 = (ID_4884 : -);
ID_4886 = ID_4885, 0;
ID_4887 = (ID_4886 : <);
ID_4888 = ID_4887, ID_48;
ID_4889 = (ID_4888 : select2);
ID_4890 = 10, ID_51;
ID_4891 = (ID_4890 : -);
ID_4892 = 0, ID_4891;
ID_4893 = (ID_4892 : -);
ID_4894 = ID_4893, 2;
ID_4895 = (ID_4894 : pow);
ID_4896 = 0, ID_58;
ID_4897 = (ID_4896 : -);
ID_4898 = 0, ID_4897;
ID_4899 = (ID_4898 : -);
ID_4900 = ID_4899, 2;
ID_4901 = (ID_4900 : pow);
ID_4902 = ID_4895, ID_4901;
ID_4903 = (ID_4902 :> sqrt);
ID_4904 = ID_4903, 0;
ID_4905 = (ID_4904 : ==);
ID_4906 = ID_4905, ID_69;
ID_4907 = (ID_4906 : select2);
ID_4908 = 10, ID_72;
ID_4909 = (ID_4908 : -);
ID_4910 = 0, ID_4909;
ID_4911 = (ID_4910 : -);
ID_4912 = (ID_0 : \(x2947).(\(x2948).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2947 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2948 : *) : +)~_));
ID_4913 = 10, ID_4912;
ID_4914 = (ID_4913 : -);
ID_4915 = 0, ID_4914;
ID_4916 = (ID_4915 : -);
ID_4917 = ID_4916, 2;
ID_4918 = (ID_4917 : pow);
ID_4919 = (ID_6 : \(x2949).(\(x2950).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2949 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2950 : *) : +)~_));
ID_4920 = 0, ID_4919;
ID_4921 = (ID_4920 : -);
ID_4922 = 0, ID_4921;
ID_4923 = (ID_4922 : -);
ID_4924 = ID_4923, 2;
ID_4925 = (ID_4924 : pow);
ID_4926 = ID_4918, ID_4925;
ID_4927 = (ID_4926 :> sqrt);
ID_4928 = ID_4927, 0;
ID_4929 = (ID_4928 : <);
ID_4930 = ID_4927, 0.0001f;
ID_4931 = (ID_4930 : max);
ID_4932 = ID_4931, ID_4927;
ID_4933 = ID_4929, ID_4932;
ID_4934 = (ID_4933 : select2);
ID_4935 = ID_4911, ID_4934;
ID_4936 = (ID_4935 : /);
ID_4937 = ID_4936, 0;
ID_4938 = ID_4907, ID_4937;
ID_4939 = (ID_4938 : select2);
ID_4940 = ID_4939, 2;
ID_4941 = (ID_4940 : pow);
ID_4942 = 10, ID_107;
ID_4943 = (ID_4942 : -);
ID_4944 = 0, ID_4943;
ID_4945 = (ID_4944 : -);
ID_4946 = ID_4945, 2;
ID_4947 = (ID_4946 : pow);
ID_4948 = 0, ID_114;
ID_4949 = (ID_4948 : -);
ID_4950 = 0, ID_4949;
ID_4951 = (ID_4950 : -);
ID_4952 = ID_4951, 2;
ID_4953 = (ID_4952 : pow);
ID_4954 = ID_4947, ID_4953;
ID_4955 = (ID_4954 :> sqrt);
ID_4956 = ID_4955, 0;
ID_4957 = (ID_4956 : ==);
ID_4958 = ID_4957, ID_69;
ID_4959 = (ID_4958 : select2);
ID_4960 = 0, ID_127;
ID_4961 = (ID_4960 : -);
ID_4962 = 0, ID_4961;
ID_4963 = (ID_4962 : -);
ID_4964 = (ID_0 : \(x2951).(\(x2952).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2951 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2952 : *) : +)~_));
ID_4965 = 10, ID_4964;
ID_4966 = (ID_4965 : -);
ID_4967 = 0, ID_4966;
ID_4968 = (ID_4967 : -);
ID_4969 = ID_4968, 2;
ID_4970 = (ID_4969 : pow);
ID_4971 = (ID_6 : \(x2953).(\(x2954).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2953 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2954 : *) : +)~_));
ID_4972 = 0, ID_4971;
ID_4973 = (ID_4972 : -);
ID_4974 = 0, ID_4973;
ID_4975 = (ID_4974 : -);
ID_4976 = ID_4975, 2;
ID_4977 = (ID_4976 : pow);
ID_4978 = ID_4970, ID_4977;
ID_4979 = (ID_4978 :> sqrt);
ID_4980 = ID_4979, 0;
ID_4981 = (ID_4980 : <);
ID_4982 = ID_4979, 0.0001f;
ID_4983 = (ID_4982 : max);
ID_4984 = ID_4983, ID_4979;
ID_4985 = ID_4981, ID_4984;
ID_4986 = (ID_4985 : select2);
ID_4987 = ID_4963, ID_4986;
ID_4988 = (ID_4987 : /);
ID_4989 = ID_4988, 0;
ID_4990 = ID_4959, ID_4989;
ID_4991 = (ID_4990 : select2);
ID_4992 = ID_4991, 2;
ID_4993 = (ID_4992 : pow);
ID_4994 = ID_4941, ID_4993;
ID_4995 = (ID_4994 :> sqrt);
ID_4996 = 100, 0;
ID_4997 = (ID_4996 :> sqrt);
ID_4998 = ID_4997, 0;
ID_4999 = (ID_4998 : ==);
ID_5000 = ID_4999, ID_69;
ID_5001 = (ID_5000 : select2);
ID_5002 = 1e+01f, 1e+01f;
ID_5003 = 0, ID_5002;
ID_5004 = (ID_5003 : select2);
ID_5005 = 10, ID_5004;
ID_5006 = (ID_5005 : /);
ID_5007 = ID_5006, 0;
ID_5008 = ID_5001, ID_5007;
ID_5009 = (ID_5008 : select2);
ID_5010 = ID_5009, 2;
ID_5011 = (ID_5010 : pow);
ID_5012 = 0, ID_5004;
ID_5013 = (ID_5012 : /);
ID_5014 = ID_5013, 0;
ID_5015 = ID_5001, ID_5014;
ID_5016 = (ID_5015 : select2);
ID_5017 = ID_5016, 2;
ID_5018 = (ID_5017 : pow);
ID_5019 = ID_5011, ID_5018;
ID_5020 = (ID_5019 :> sqrt);
ID_5021 = ID_4995, ID_5020;
ID_5022 = (ID_5021 : *);
ID_5023 = ID_5022, 0;
ID_5024 = (ID_5023 : ==);
ID_5025 = 10, ID_193;
ID_5026 = (ID_5025 : -);
ID_5027 = 0, ID_5026;
ID_5028 = (ID_5027 : -);
ID_5029 = ID_5028, 2;
ID_5030 = (ID_5029 : pow);
ID_5031 = 0, ID_200;
ID_5032 = (ID_5031 : -);
ID_5033 = 0, ID_5032;
ID_5034 = (ID_5033 : -);
ID_5035 = ID_5034, 2;
ID_5036 = (ID_5035 : pow);
ID_5037 = ID_5030, ID_5036;
ID_5038 = (ID_5037 :> sqrt);
ID_5039 = ID_5038, 0;
ID_5040 = (ID_5039 : ==);
ID_5041 = ID_5040, ID_69;
ID_5042 = (ID_5041 : select2);
ID_5043 = 10, ID_213;
ID_5044 = (ID_5043 : -);
ID_5045 = 0, ID_5044;
ID_5046 = (ID_5045 : -);
ID_5047 = (ID_0 : \(x2955).(\(x2956).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2955 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2956 : *) : +)~_));
ID_5048 = 10, ID_5047;
ID_5049 = (ID_5048 : -);
ID_5050 = 0, ID_5049;
ID_5051 = (ID_5050 : -);
ID_5052 = ID_5051, 2;
ID_5053 = (ID_5052 : pow);
ID_5054 = (ID_6 : \(x2957).(\(x2958).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2957 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2958 : *) : +)~_));
ID_5055 = 0, ID_5054;
ID_5056 = (ID_5055 : -);
ID_5057 = 0, ID_5056;
ID_5058 = (ID_5057 : -);
ID_5059 = ID_5058, 2;
ID_5060 = (ID_5059 : pow);
ID_5061 = ID_5053, ID_5060;
ID_5062 = (ID_5061 :> sqrt);
ID_5063 = ID_5062, 0;
ID_5064 = (ID_5063 : <);
ID_5065 = ID_5062, 0.0001f;
ID_5066 = (ID_5065 : max);
ID_5067 = ID_5066, ID_5062;
ID_5068 = ID_5064, ID_5067;
ID_5069 = (ID_5068 : select2);
ID_5070 = ID_5046, ID_5069;
ID_5071 = (ID_5070 : /);
ID_5072 = ID_5071, 0;
ID_5073 = ID_5042, ID_5072;
ID_5074 = (ID_5073 : select2);
ID_5075 = ID_5009, ID_5074;
ID_5076 = (ID_5075 : *);
ID_5077 = 10, ID_248;
ID_5078 = (ID_5077 : -);
ID_5079 = 0, ID_5078;
ID_5080 = (ID_5079 : -);
ID_5081 = ID_5080, 2;
ID_5082 = (ID_5081 : pow);
ID_5083 = 0, ID_255;
ID_5084 = (ID_5083 : -);
ID_5085 = 0, ID_5084;
ID_5086 = (ID_5085 : -);
ID_5087 = ID_5086, 2;
ID_5088 = (ID_5087 : pow);
ID_5089 = ID_5082, ID_5088;
ID_5090 = (ID_5089 :> sqrt);
ID_5091 = ID_5090, 0;
ID_5092 = (ID_5091 : ==);
ID_5093 = ID_5092, ID_69;
ID_5094 = (ID_5093 : select2);
ID_5095 = 0, ID_268;
ID_5096 = (ID_5095 : -);
ID_5097 = 0, ID_5096;
ID_5098 = (ID_5097 : -);
ID_5099 = (ID_0 : \(x2959).(\(x2960).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2959 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2960 : *) : +)~_));
ID_5100 = 10, ID_5099;
ID_5101 = (ID_5100 : -);
ID_5102 = 0, ID_5101;
ID_5103 = (ID_5102 : -);
ID_5104 = ID_5103, 2;
ID_5105 = (ID_5104 : pow);
ID_5106 = (ID_6 : \(x2961).(\(x2962).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2961 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2962 : *) : +)~_));
ID_5107 = 0, ID_5106;
ID_5108 = (ID_5107 : -);
ID_5109 = 0, ID_5108;
ID_5110 = (ID_5109 : -);
ID_5111 = ID_5110, 2;
ID_5112 = (ID_5111 : pow);
ID_5113 = ID_5105, ID_5112;
ID_5114 = (ID_5113 :> sqrt);
ID_5115 = ID_5114, 0;
ID_5116 = (ID_5115 : <);
ID_5117 = ID_5114, 0.0001f;
ID_5118 = (ID_5117 : max);
ID_5119 = ID_5118, ID_5114;
ID_5120 = ID_5116, ID_5119;
ID_5121 = (ID_5120 : select2);
ID_5122 = ID_5098, ID_5121;
ID_5123 = (ID_5122 : /);
ID_5124 = ID_5123, 0;
ID_5125 = ID_5094, ID_5124;
ID_5126 = (ID_5125 : select2);
ID_5127 = ID_5016, ID_5126;
ID_5128 = (ID_5127 : *);
ID_5129 = ID_5076, ID_5128;
ID_5130 = (ID_5129 :> _);
ID_5131 = (ID_0 : \(x2963).(\(x2964).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2963 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2964 : *) : +)~_));
ID_5132 = 10, ID_5131;
ID_5133 = (ID_5132 : -);
ID_5134 = 0, ID_5133;
ID_5135 = (ID_5134 : -);
ID_5136 = ID_5135, 2;
ID_5137 = (ID_5136 : pow);
ID_5138 = (ID_6 : \(x2965).(\(x2966).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2965 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2966 : *) : +)~_));
ID_5139 = 0, ID_5138;
ID_5140 = (ID_5139 : -);
ID_5141 = 0, ID_5140;
ID_5142 = (ID_5141 : -);
ID_5143 = ID_5142, 2;
ID_5144 = (ID_5143 : pow);
ID_5145 = ID_5137, ID_5144;
ID_5146 = (ID_5145 :> sqrt);
ID_5147 = ID_5146, 0;
ID_5148 = (ID_5147 : ==);
ID_5149 = ID_5148, ID_69;
ID_5150 = (ID_5149 : select2);
ID_5151 = (ID_0 : \(x2967).(\(x2968).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2967 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2968 : *) : +)~_));
ID_5152 = 10, ID_5151;
ID_5153 = (ID_5152 : -);
ID_5154 = 0, ID_5153;
ID_5155 = (ID_5154 : -);
ID_5156 = (ID_0 : \(x2969).(\(x2970).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2969 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2970 : *) : +)~_));
ID_5157 = 10, ID_5156;
ID_5158 = (ID_5157 : -);
ID_5159 = 0, ID_5158;
ID_5160 = (ID_5159 : -);
ID_5161 = ID_5160, 2;
ID_5162 = (ID_5161 : pow);
ID_5163 = (ID_6 : \(x2971).(\(x2972).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2971 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2972 : *) : +)~_));
ID_5164 = 0, ID_5163;
ID_5165 = (ID_5164 : -);
ID_5166 = 0, ID_5165;
ID_5167 = (ID_5166 : -);
ID_5168 = ID_5167, 2;
ID_5169 = (ID_5168 : pow);
ID_5170 = ID_5162, ID_5169;
ID_5171 = (ID_5170 :> sqrt);
ID_5172 = ID_5171, 0;
ID_5173 = (ID_5172 : <);
ID_5174 = ID_5171, 0.0001f;
ID_5175 = (ID_5174 : max);
ID_5176 = ID_5175, ID_5171;
ID_5177 = ID_5173, ID_5176;
ID_5178 = (ID_5177 : select2);
ID_5179 = ID_5155, ID_5178;
ID_5180 = (ID_5179 : /);
ID_5181 = ID_5180, 0;
ID_5182 = ID_5150, ID_5181;
ID_5183 = (ID_5182 : select2);
ID_5184 = ID_5183, 2;
ID_5185 = (ID_5184 : pow);
ID_5186 = (ID_0 : \(x2973).(\(x2974).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2973 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2974 : *) : +)~_));
ID_5187 = 10, ID_5186;
ID_5188 = (ID_5187 : -);
ID_5189 = 0, ID_5188;
ID_5190 = (ID_5189 : -);
ID_5191 = ID_5190, 2;
ID_5192 = (ID_5191 : pow);
ID_5193 = (ID_6 : \(x2975).(\(x2976).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2975 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2976 : *) : +)~_));
ID_5194 = 0, ID_5193;
ID_5195 = (ID_5194 : -);
ID_5196 = 0, ID_5195;
ID_5197 = (ID_5196 : -);
ID_5198 = ID_5197, 2;
ID_5199 = (ID_5198 : pow);
ID_5200 = ID_5192, ID_5199;
ID_5201 = (ID_5200 :> sqrt);
ID_5202 = ID_5201, 0;
ID_5203 = (ID_5202 : ==);
ID_5204 = ID_5203, ID_69;
ID_5205 = (ID_5204 : select2);
ID_5206 = (ID_6 : \(x2977).(\(x2978).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2977 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2978 : *) : +)~_));
ID_5207 = 0, ID_5206;
ID_5208 = (ID_5207 : -);
ID_5209 = 0, ID_5208;
ID_5210 = (ID_5209 : -);
ID_5211 = (ID_0 : \(x2979).(\(x2980).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2979 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2980 : *) : +)~_));
ID_5212 = 10, ID_5211;
ID_5213 = (ID_5212 : -);
ID_5214 = 0, ID_5213;
ID_5215 = (ID_5214 : -);
ID_5216 = ID_5215, 2;
ID_5217 = (ID_5216 : pow);
ID_5218 = (ID_6 : \(x2981).(\(x2982).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2981 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2982 : *) : +)~_));
ID_5219 = 0, ID_5218;
ID_5220 = (ID_5219 : -);
ID_5221 = 0, ID_5220;
ID_5222 = (ID_5221 : -);
ID_5223 = ID_5222, 2;
ID_5224 = (ID_5223 : pow);
ID_5225 = ID_5217, ID_5224;
ID_5226 = (ID_5225 :> sqrt);
ID_5227 = ID_5226, 0;
ID_5228 = (ID_5227 : <);
ID_5229 = ID_5226, 0.0001f;
ID_5230 = (ID_5229 : max);
ID_5231 = ID_5230, ID_5226;
ID_5232 = ID_5228, ID_5231;
ID_5233 = (ID_5232 : select2);
ID_5234 = ID_5210, ID_5233;
ID_5235 = (ID_5234 : /);
ID_5236 = ID_5235, 0;
ID_5237 = ID_5205, ID_5236;
ID_5238 = (ID_5237 : select2);
ID_5239 = ID_5238, 2;
ID_5240 = (ID_5239 : pow);
ID_5241 = ID_5185, ID_5240;
ID_5242 = (ID_5241 :> sqrt);
ID_5243 = ID_5242, ID_5020;
ID_5244 = (ID_5243 : *);
ID_5245 = ID_5244, 0;
ID_5246 = (ID_5245 : <);
ID_5247 = ID_5244, 0.0001f;
ID_5248 = (ID_5247 : max);
ID_5249 = ID_5248, ID_5244;
ID_5250 = ID_5246, ID_5249;
ID_5251 = (ID_5250 : select2);
ID_5252 = ID_5130, ID_5251;
ID_5253 = (ID_5252 : /);
ID_5254 = ID_5253, 0;
ID_5255 = ID_5024, ID_5254;
ID_5256 = (ID_5255 : select2);
ID_5257 = ID_5256, 0;
ID_5258 = (ID_5257 : ==);
ID_5259 = (ID_5245 : ==);
ID_5260 = (ID_0 : \(x2983).(\(x2984).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2983 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2984 : *) : +)~_));
ID_5261 = 10, ID_5260;
ID_5262 = (ID_5261 : -);
ID_5263 = 0, ID_5262;
ID_5264 = (ID_5263 : -);
ID_5265 = ID_5264, 2;
ID_5266 = (ID_5265 : pow);
ID_5267 = (ID_6 : \(x2985).(\(x2986).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2985 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2986 : *) : +)~_));
ID_5268 = 0, ID_5267;
ID_5269 = (ID_5268 : -);
ID_5270 = 0, ID_5269;
ID_5271 = (ID_5270 : -);
ID_5272 = ID_5271, 2;
ID_5273 = (ID_5272 : pow);
ID_5274 = ID_5266, ID_5273;
ID_5275 = (ID_5274 :> sqrt);
ID_5276 = ID_5275, 0;
ID_5277 = (ID_5276 : ==);
ID_5278 = ID_5277, ID_69;
ID_5279 = (ID_5278 : select2);
ID_5280 = (ID_0 : \(x2987).(\(x2988).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2987 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2988 : *) : +)~_));
ID_5281 = 10, ID_5280;
ID_5282 = (ID_5281 : -);
ID_5283 = 0, ID_5282;
ID_5284 = (ID_5283 : -);
ID_5285 = (ID_0 : \(x2989).(\(x2990).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2989 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2990 : *) : +)~_));
ID_5286 = 10, ID_5285;
ID_5287 = (ID_5286 : -);
ID_5288 = 0, ID_5287;
ID_5289 = (ID_5288 : -);
ID_5290 = ID_5289, 2;
ID_5291 = (ID_5290 : pow);
ID_5292 = (ID_6 : \(x2991).(\(x2992).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2991 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2992 : *) : +)~_));
ID_5293 = 0, ID_5292;
ID_5294 = (ID_5293 : -);
ID_5295 = 0, ID_5294;
ID_5296 = (ID_5295 : -);
ID_5297 = ID_5296, 2;
ID_5298 = (ID_5297 : pow);
ID_5299 = ID_5291, ID_5298;
ID_5300 = (ID_5299 :> sqrt);
ID_5301 = ID_5300, 0;
ID_5302 = (ID_5301 : <);
ID_5303 = ID_5300, 0.0001f;
ID_5304 = (ID_5303 : max);
ID_5305 = ID_5304, ID_5300;
ID_5306 = ID_5302, ID_5305;
ID_5307 = (ID_5306 : select2);
ID_5308 = ID_5284, ID_5307;
ID_5309 = (ID_5308 : /);
ID_5310 = ID_5309, 0;
ID_5311 = ID_5279, ID_5310;
ID_5312 = (ID_5311 : select2);
ID_5313 = ID_5009, ID_5312;
ID_5314 = (ID_5313 : *);
ID_5315 = (ID_0 : \(x2993).(\(x2994).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2993 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2994 : *) : +)~_));
ID_5316 = 10, ID_5315;
ID_5317 = (ID_5316 : -);
ID_5318 = 0, ID_5317;
ID_5319 = (ID_5318 : -);
ID_5320 = ID_5319, 2;
ID_5321 = (ID_5320 : pow);
ID_5322 = (ID_6 : \(x2995).(\(x2996).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2995 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2996 : *) : +)~_));
ID_5323 = 0, ID_5322;
ID_5324 = (ID_5323 : -);
ID_5325 = 0, ID_5324;
ID_5326 = (ID_5325 : -);
ID_5327 = ID_5326, 2;
ID_5328 = (ID_5327 : pow);
ID_5329 = ID_5321, ID_5328;
ID_5330 = (ID_5329 :> sqrt);
ID_5331 = ID_5330, 0;
ID_5332 = (ID_5331 : ==);
ID_5333 = ID_5332, ID_69;
ID_5334 = (ID_5333 : select2);
ID_5335 = (ID_6 : \(x2997).(\(x2998).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2997 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x2998 : *) : +)~_));
ID_5336 = 0, ID_5335;
ID_5337 = (ID_5336 : -);
ID_5338 = 0, ID_5337;
ID_5339 = (ID_5338 : -);
ID_5340 = (ID_0 : \(x2999).(\(x3000).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x2999 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3000 : *) : +)~_));
ID_5341 = 10, ID_5340;
ID_5342 = (ID_5341 : -);
ID_5343 = 0, ID_5342;
ID_5344 = (ID_5343 : -);
ID_5345 = ID_5344, 2;
ID_5346 = (ID_5345 : pow);
ID_5347 = (ID_6 : \(x3001).(\(x3002).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3001 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3002 : *) : +)~_));
ID_5348 = 0, ID_5347;
ID_5349 = (ID_5348 : -);
ID_5350 = 0, ID_5349;
ID_5351 = (ID_5350 : -);
ID_5352 = ID_5351, 2;
ID_5353 = (ID_5352 : pow);
ID_5354 = ID_5346, ID_5353;
ID_5355 = (ID_5354 :> sqrt);
ID_5356 = ID_5355, 0;
ID_5357 = (ID_5356 : <);
ID_5358 = ID_5355, 0.0001f;
ID_5359 = (ID_5358 : max);
ID_5360 = ID_5359, ID_5355;
ID_5361 = ID_5357, ID_5360;
ID_5362 = (ID_5361 : select2);
ID_5363 = ID_5339, ID_5362;
ID_5364 = (ID_5363 : /);
ID_5365 = ID_5364, 0;
ID_5366 = ID_5334, ID_5365;
ID_5367 = (ID_5366 : select2);
ID_5368 = ID_5016, ID_5367;
ID_5369 = (ID_5368 : *);
ID_5370 = ID_5314, ID_5369;
ID_5371 = (ID_5370 :> _);
ID_5372 = (ID_0 : \(x3003).(\(x3004).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3003 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3004 : *) : +)~_));
ID_5373 = 10, ID_5372;
ID_5374 = (ID_5373 : -);
ID_5375 = 0, ID_5374;
ID_5376 = (ID_5375 : -);
ID_5377 = ID_5376, 2;
ID_5378 = (ID_5377 : pow);
ID_5379 = (ID_6 : \(x3005).(\(x3006).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3005 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3006 : *) : +)~_));
ID_5380 = 0, ID_5379;
ID_5381 = (ID_5380 : -);
ID_5382 = 0, ID_5381;
ID_5383 = (ID_5382 : -);
ID_5384 = ID_5383, 2;
ID_5385 = (ID_5384 : pow);
ID_5386 = ID_5378, ID_5385;
ID_5387 = (ID_5386 :> sqrt);
ID_5388 = ID_5387, 0;
ID_5389 = (ID_5388 : ==);
ID_5390 = ID_5389, ID_69;
ID_5391 = (ID_5390 : select2);
ID_5392 = (ID_0 : \(x3007).(\(x3008).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3007 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3008 : *) : +)~_));
ID_5393 = 10, ID_5392;
ID_5394 = (ID_5393 : -);
ID_5395 = 0, ID_5394;
ID_5396 = (ID_5395 : -);
ID_5397 = (ID_0 : \(x3009).(\(x3010).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3009 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3010 : *) : +)~_));
ID_5398 = 10, ID_5397;
ID_5399 = (ID_5398 : -);
ID_5400 = 0, ID_5399;
ID_5401 = (ID_5400 : -);
ID_5402 = ID_5401, 2;
ID_5403 = (ID_5402 : pow);
ID_5404 = (ID_6 : \(x3011).(\(x3012).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3011 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3012 : *) : +)~_));
ID_5405 = 0, ID_5404;
ID_5406 = (ID_5405 : -);
ID_5407 = 0, ID_5406;
ID_5408 = (ID_5407 : -);
ID_5409 = ID_5408, 2;
ID_5410 = (ID_5409 : pow);
ID_5411 = ID_5403, ID_5410;
ID_5412 = (ID_5411 :> sqrt);
ID_5413 = ID_5412, 0;
ID_5414 = (ID_5413 : <);
ID_5415 = ID_5412, 0.0001f;
ID_5416 = (ID_5415 : max);
ID_5417 = ID_5416, ID_5412;
ID_5418 = ID_5414, ID_5417;
ID_5419 = (ID_5418 : select2);
ID_5420 = ID_5396, ID_5419;
ID_5421 = (ID_5420 : /);
ID_5422 = ID_5421, 0;
ID_5423 = ID_5391, ID_5422;
ID_5424 = (ID_5423 : select2);
ID_5425 = ID_5424, 2;
ID_5426 = (ID_5425 : pow);
ID_5427 = (ID_0 : \(x3013).(\(x3014).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3013 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3014 : *) : +)~_));
ID_5428 = 10, ID_5427;
ID_5429 = (ID_5428 : -);
ID_5430 = 0, ID_5429;
ID_5431 = (ID_5430 : -);
ID_5432 = ID_5431, 2;
ID_5433 = (ID_5432 : pow);
ID_5434 = (ID_6 : \(x3015).(\(x3016).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3015 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3016 : *) : +)~_));
ID_5435 = 0, ID_5434;
ID_5436 = (ID_5435 : -);
ID_5437 = 0, ID_5436;
ID_5438 = (ID_5437 : -);
ID_5439 = ID_5438, 2;
ID_5440 = (ID_5439 : pow);
ID_5441 = ID_5433, ID_5440;
ID_5442 = (ID_5441 :> sqrt);
ID_5443 = ID_5442, 0;
ID_5444 = (ID_5443 : ==);
ID_5445 = ID_5444, ID_69;
ID_5446 = (ID_5445 : select2);
ID_5447 = (ID_6 : \(x3017).(\(x3018).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3017 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3018 : *) : +)~_));
ID_5448 = 0, ID_5447;
ID_5449 = (ID_5448 : -);
ID_5450 = 0, ID_5449;
ID_5451 = (ID_5450 : -);
ID_5452 = (ID_0 : \(x3019).(\(x3020).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3019 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3020 : *) : +)~_));
ID_5453 = 10, ID_5452;
ID_5454 = (ID_5453 : -);
ID_5455 = 0, ID_5454;
ID_5456 = (ID_5455 : -);
ID_5457 = ID_5456, 2;
ID_5458 = (ID_5457 : pow);
ID_5459 = (ID_6 : \(x3021).(\(x3022).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3021 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3022 : *) : +)~_));
ID_5460 = 0, ID_5459;
ID_5461 = (ID_5460 : -);
ID_5462 = 0, ID_5461;
ID_5463 = (ID_5462 : -);
ID_5464 = ID_5463, 2;
ID_5465 = (ID_5464 : pow);
ID_5466 = ID_5458, ID_5465;
ID_5467 = (ID_5466 :> sqrt);
ID_5468 = ID_5467, 0;
ID_5469 = (ID_5468 : <);
ID_5470 = ID_5467, 0.0001f;
ID_5471 = (ID_5470 : max);
ID_5472 = ID_5471, ID_5467;
ID_5473 = ID_5469, ID_5472;
ID_5474 = (ID_5473 : select2);
ID_5475 = ID_5451, ID_5474;
ID_5476 = (ID_5475 : /);
ID_5477 = ID_5476, 0;
ID_5478 = ID_5446, ID_5477;
ID_5479 = (ID_5478 : select2);
ID_5480 = ID_5479, 2;
ID_5481 = (ID_5480 : pow);
ID_5482 = ID_5426, ID_5481;
ID_5483 = (ID_5482 :> sqrt);
ID_5484 = ID_5483, ID_5020;
ID_5485 = (ID_5484 : *);
ID_5486 = ID_5485, 0;
ID_5487 = (ID_5486 : <);
ID_5488 = ID_5485, 0.0001f;
ID_5489 = (ID_5488 : max);
ID_5490 = ID_5489, ID_5485;
ID_5491 = ID_5487, ID_5490;
ID_5492 = (ID_5491 : select2);
ID_5493 = ID_5371, ID_5492;
ID_5494 = (ID_5493 : /);
ID_5495 = ID_5494, 0;
ID_5496 = ID_5259, ID_5495;
ID_5497 = (ID_5496 : select2);
ID_5498 = ID_5497, 0;
ID_5499 = (ID_5498 : <);
ID_5500 = ID_5497, 0.0001f;
ID_5501 = (ID_5500 : max);
ID_5502 = ID_5501, ID_5497;
ID_5503 = ID_5499, ID_5502;
ID_5504 = ID_5503 : select2;
ID_5505 = (ID_5504 : acos);
ID_5506 = ID_5505, 0;
ID_5507 = ID_5258, ID_5506;
ID_5508 = (ID_5507 : select2);
ID_5509 = ID_4889, ID_5508;
ID_5510 = (ID_5509 : *);
ID_5511 = ID_5510, 0;
ID_5512 = ID_5511 : +;
ID_5513 = (ID_5512 : sin);
ID_5514 = ID_690, 10;
ID_5515 = (ID_5514 : *);
ID_5516 = ID_689, ID_5515;
ID_5517 = (ID_5516 : -);
ID_5518 = ID_5517, 0;
ID_5519 = (ID_5518 : <);
ID_5520 = ID_5519, ID_697;
ID_5521 = (ID_5520 : select2);
ID_5522 = ID_4895, ID_706;
ID_5523 = (ID_5522 :> sqrt);
ID_5524 = ID_5523, 0;
ID_5525 = (ID_5524 : ==);
ID_5526 = ID_5525, ID_69;
ID_5527 = (ID_5526 : select2);
ID_5528 = (ID_0 : \(x3023).(\(x3024).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3023 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3024 : *) : +)~_));
ID_5529 = 10, ID_5528;
ID_5530 = (ID_5529 : -);
ID_5531 = 0, ID_5530;
ID_5532 = (ID_5531 : -);
ID_5533 = ID_5532, 2;
ID_5534 = (ID_5533 : pow);
ID_5535 = (ID_14 : \(x3025).(\(x3026).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3025 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3026 : *) : +)~_));
ID_5536 = 0, ID_5535;
ID_5537 = (ID_5536 : -);
ID_5538 = 0, ID_5537;
ID_5539 = (ID_5538 : -);
ID_5540 = ID_5539, 2;
ID_5541 = (ID_5540 : pow);
ID_5542 = ID_5534, ID_5541;
ID_5543 = (ID_5542 :> sqrt);
ID_5544 = ID_5543, 0;
ID_5545 = (ID_5544 : <);
ID_5546 = ID_5543, 0.0001f;
ID_5547 = (ID_5546 : max);
ID_5548 = ID_5547, ID_5543;
ID_5549 = ID_5545, ID_5548;
ID_5550 = (ID_5549 : select2);
ID_5551 = ID_4911, ID_5550;
ID_5552 = (ID_5551 : /);
ID_5553 = ID_5552, 0;
ID_5554 = ID_5527, ID_5553;
ID_5555 = (ID_5554 : select2);
ID_5556 = ID_5555, 2;
ID_5557 = (ID_5556 : pow);
ID_5558 = ID_4947, ID_749;
ID_5559 = (ID_5558 :> sqrt);
ID_5560 = ID_5559, 0;
ID_5561 = (ID_5560 : ==);
ID_5562 = ID_5561, ID_69;
ID_5563 = (ID_5562 : select2);
ID_5564 = (ID_0 : \(x3027).(\(x3028).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3027 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3028 : *) : +)~_));
ID_5565 = 10, ID_5564;
ID_5566 = (ID_5565 : -);
ID_5567 = 0, ID_5566;
ID_5568 = (ID_5567 : -);
ID_5569 = ID_5568, 2;
ID_5570 = (ID_5569 : pow);
ID_5571 = (ID_14 : \(x3029).(\(x3030).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3029 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3030 : *) : +)~_));
ID_5572 = 0, ID_5571;
ID_5573 = (ID_5572 : -);
ID_5574 = 0, ID_5573;
ID_5575 = (ID_5574 : -);
ID_5576 = ID_5575, 2;
ID_5577 = (ID_5576 : pow);
ID_5578 = ID_5570, ID_5577;
ID_5579 = (ID_5578 :> sqrt);
ID_5580 = ID_5579, 0;
ID_5581 = (ID_5580 : <);
ID_5582 = ID_5579, 0.0001f;
ID_5583 = (ID_5582 : max);
ID_5584 = ID_5583, ID_5579;
ID_5585 = ID_5581, ID_5584;
ID_5586 = (ID_5585 : select2);
ID_5587 = ID_760, ID_5586;
ID_5588 = (ID_5587 : /);
ID_5589 = ID_5588, 0;
ID_5590 = ID_5563, ID_5589;
ID_5591 = (ID_5590 : select2);
ID_5592 = ID_5591, 2;
ID_5593 = (ID_5592 : pow);
ID_5594 = ID_5557, ID_5593;
ID_5595 = (ID_5594 :> sqrt);
ID_5596 = ID_5595, ID_5020;
ID_5597 = (ID_5596 : *);
ID_5598 = ID_5597, 0;
ID_5599 = (ID_5598 : ==);
ID_5600 = ID_5030, ID_828;
ID_5601 = (ID_5600 :> sqrt);
ID_5602 = ID_5601, 0;
ID_5603 = (ID_5602 : ==);
ID_5604 = ID_5603, ID_69;
ID_5605 = (ID_5604 : select2);
ID_5606 = (ID_0 : \(x3031).(\(x3032).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3031 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3032 : *) : +)~_));
ID_5607 = 10, ID_5606;
ID_5608 = (ID_5607 : -);
ID_5609 = 0, ID_5608;
ID_5610 = (ID_5609 : -);
ID_5611 = ID_5610, 2;
ID_5612 = (ID_5611 : pow);
ID_5613 = (ID_14 : \(x3033).(\(x3034).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3033 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3034 : *) : +)~_));
ID_5614 = 0, ID_5613;
ID_5615 = (ID_5614 : -);
ID_5616 = 0, ID_5615;
ID_5617 = (ID_5616 : -);
ID_5618 = ID_5617, 2;
ID_5619 = (ID_5618 : pow);
ID_5620 = ID_5612, ID_5619;
ID_5621 = (ID_5620 :> sqrt);
ID_5622 = ID_5621, 0;
ID_5623 = (ID_5622 : <);
ID_5624 = ID_5621, 0.0001f;
ID_5625 = (ID_5624 : max);
ID_5626 = ID_5625, ID_5621;
ID_5627 = ID_5623, ID_5626;
ID_5628 = (ID_5627 : select2);
ID_5629 = ID_5046, ID_5628;
ID_5630 = (ID_5629 : /);
ID_5631 = ID_5630, 0;
ID_5632 = ID_5605, ID_5631;
ID_5633 = (ID_5632 : select2);
ID_5634 = ID_5009, ID_5633;
ID_5635 = (ID_5634 : *);
ID_5636 = ID_5082, ID_871;
ID_5637 = (ID_5636 :> sqrt);
ID_5638 = ID_5637, 0;
ID_5639 = (ID_5638 : ==);
ID_5640 = ID_5639, ID_69;
ID_5641 = (ID_5640 : select2);
ID_5642 = (ID_0 : \(x3035).(\(x3036).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3035 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3036 : *) : +)~_));
ID_5643 = 10, ID_5642;
ID_5644 = (ID_5643 : -);
ID_5645 = 0, ID_5644;
ID_5646 = (ID_5645 : -);
ID_5647 = ID_5646, 2;
ID_5648 = (ID_5647 : pow);
ID_5649 = (ID_14 : \(x3037).(\(x3038).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3037 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3038 : *) : +)~_));
ID_5650 = 0, ID_5649;
ID_5651 = (ID_5650 : -);
ID_5652 = 0, ID_5651;
ID_5653 = (ID_5652 : -);
ID_5654 = ID_5653, 2;
ID_5655 = (ID_5654 : pow);
ID_5656 = ID_5648, ID_5655;
ID_5657 = (ID_5656 :> sqrt);
ID_5658 = ID_5657, 0;
ID_5659 = (ID_5658 : <);
ID_5660 = ID_5657, 0.0001f;
ID_5661 = (ID_5660 : max);
ID_5662 = ID_5661, ID_5657;
ID_5663 = ID_5659, ID_5662;
ID_5664 = (ID_5663 : select2);
ID_5665 = ID_882, ID_5664;
ID_5666 = (ID_5665 : /);
ID_5667 = ID_5666, 0;
ID_5668 = ID_5641, ID_5667;
ID_5669 = (ID_5668 : select2);
ID_5670 = ID_5016, ID_5669;
ID_5671 = (ID_5670 : *);
ID_5672 = ID_5635, ID_5671;
ID_5673 = (ID_5672 :> _);
ID_5674 = (ID_0 : \(x3039).(\(x3040).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3039 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3040 : *) : +)~_));
ID_5675 = 10, ID_5674;
ID_5676 = (ID_5675 : -);
ID_5677 = 0, ID_5676;
ID_5678 = (ID_5677 : -);
ID_5679 = ID_5678, 2;
ID_5680 = (ID_5679 : pow);
ID_5681 = (ID_14 : \(x3041).(\(x3042).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3041 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3042 : *) : +)~_));
ID_5682 = 0, ID_5681;
ID_5683 = (ID_5682 : -);
ID_5684 = 0, ID_5683;
ID_5685 = (ID_5684 : -);
ID_5686 = ID_5685, 2;
ID_5687 = (ID_5686 : pow);
ID_5688 = ID_5680, ID_5687;
ID_5689 = (ID_5688 :> sqrt);
ID_5690 = ID_5689, 0;
ID_5691 = (ID_5690 : ==);
ID_5692 = ID_5691, ID_69;
ID_5693 = (ID_5692 : select2);
ID_5694 = (ID_0 : \(x3043).(\(x3044).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3043 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3044 : *) : +)~_));
ID_5695 = 10, ID_5694;
ID_5696 = (ID_5695 : -);
ID_5697 = 0, ID_5696;
ID_5698 = (ID_5697 : -);
ID_5699 = (ID_0 : \(x3045).(\(x3046).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3045 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3046 : *) : +)~_));
ID_5700 = 10, ID_5699;
ID_5701 = (ID_5700 : -);
ID_5702 = 0, ID_5701;
ID_5703 = (ID_5702 : -);
ID_5704 = ID_5703, 2;
ID_5705 = (ID_5704 : pow);
ID_5706 = (ID_14 : \(x3047).(\(x3048).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3047 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3048 : *) : +)~_));
ID_5707 = 0, ID_5706;
ID_5708 = (ID_5707 : -);
ID_5709 = 0, ID_5708;
ID_5710 = (ID_5709 : -);
ID_5711 = ID_5710, 2;
ID_5712 = (ID_5711 : pow);
ID_5713 = ID_5705, ID_5712;
ID_5714 = (ID_5713 :> sqrt);
ID_5715 = ID_5714, 0;
ID_5716 = (ID_5715 : <);
ID_5717 = ID_5714, 0.0001f;
ID_5718 = (ID_5717 : max);
ID_5719 = ID_5718, ID_5714;
ID_5720 = ID_5716, ID_5719;
ID_5721 = (ID_5720 : select2);
ID_5722 = ID_5698, ID_5721;
ID_5723 = (ID_5722 : /);
ID_5724 = ID_5723, 0;
ID_5725 = ID_5693, ID_5724;
ID_5726 = (ID_5725 : select2);
ID_5727 = ID_5726, 2;
ID_5728 = (ID_5727 : pow);
ID_5729 = (ID_0 : \(x3049).(\(x3050).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3049 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3050 : *) : +)~_));
ID_5730 = 10, ID_5729;
ID_5731 = (ID_5730 : -);
ID_5732 = 0, ID_5731;
ID_5733 = (ID_5732 : -);
ID_5734 = ID_5733, 2;
ID_5735 = (ID_5734 : pow);
ID_5736 = (ID_14 : \(x3051).(\(x3052).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3051 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3052 : *) : +)~_));
ID_5737 = 0, ID_5736;
ID_5738 = (ID_5737 : -);
ID_5739 = 0, ID_5738;
ID_5740 = (ID_5739 : -);
ID_5741 = ID_5740, 2;
ID_5742 = (ID_5741 : pow);
ID_5743 = ID_5735, ID_5742;
ID_5744 = (ID_5743 :> sqrt);
ID_5745 = ID_5744, 0;
ID_5746 = (ID_5745 : ==);
ID_5747 = ID_5746, ID_69;
ID_5748 = (ID_5747 : select2);
ID_5749 = (ID_14 : \(x3053).(\(x3054).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3053 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3054 : *) : +)~_));
ID_5750 = 0, ID_5749;
ID_5751 = (ID_5750 : -);
ID_5752 = 0, ID_5751;
ID_5753 = (ID_5752 : -);
ID_5754 = (ID_0 : \(x3055).(\(x3056).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3055 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3056 : *) : +)~_));
ID_5755 = 10, ID_5754;
ID_5756 = (ID_5755 : -);
ID_5757 = 0, ID_5756;
ID_5758 = (ID_5757 : -);
ID_5759 = ID_5758, 2;
ID_5760 = (ID_5759 : pow);
ID_5761 = (ID_14 : \(x3057).(\(x3058).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3057 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3058 : *) : +)~_));
ID_5762 = 0, ID_5761;
ID_5763 = (ID_5762 : -);
ID_5764 = 0, ID_5763;
ID_5765 = (ID_5764 : -);
ID_5766 = ID_5765, 2;
ID_5767 = (ID_5766 : pow);
ID_5768 = ID_5760, ID_5767;
ID_5769 = (ID_5768 :> sqrt);
ID_5770 = ID_5769, 0;
ID_5771 = (ID_5770 : <);
ID_5772 = ID_5769, 0.0001f;
ID_5773 = (ID_5772 : max);
ID_5774 = ID_5773, ID_5769;
ID_5775 = ID_5771, ID_5774;
ID_5776 = (ID_5775 : select2);
ID_5777 = ID_5753, ID_5776;
ID_5778 = (ID_5777 : /);
ID_5779 = ID_5778, 0;
ID_5780 = ID_5748, ID_5779;
ID_5781 = (ID_5780 : select2);
ID_5782 = ID_5781, 2;
ID_5783 = (ID_5782 : pow);
ID_5784 = ID_5728, ID_5783;
ID_5785 = (ID_5784 :> sqrt);
ID_5786 = ID_5785, ID_5020;
ID_5787 = (ID_5786 : *);
ID_5788 = ID_5787, 0;
ID_5789 = (ID_5788 : <);
ID_5790 = ID_5787, 0.0001f;
ID_5791 = (ID_5790 : max);
ID_5792 = ID_5791, ID_5787;
ID_5793 = ID_5789, ID_5792;
ID_5794 = (ID_5793 : select2);
ID_5795 = ID_5673, ID_5794;
ID_5796 = (ID_5795 : /);
ID_5797 = ID_5796, 0;
ID_5798 = ID_5599, ID_5797;
ID_5799 = (ID_5798 : select2);
ID_5800 = ID_5799, 0;
ID_5801 = (ID_5800 : ==);
ID_5802 = (ID_5788 : ==);
ID_5803 = (ID_0 : \(x3059).(\(x3060).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3059 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3060 : *) : +)~_));
ID_5804 = 10, ID_5803;
ID_5805 = (ID_5804 : -);
ID_5806 = 0, ID_5805;
ID_5807 = (ID_5806 : -);
ID_5808 = ID_5807, 2;
ID_5809 = (ID_5808 : pow);
ID_5810 = (ID_14 : \(x3061).(\(x3062).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3061 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3062 : *) : +)~_));
ID_5811 = 0, ID_5810;
ID_5812 = (ID_5811 : -);
ID_5813 = 0, ID_5812;
ID_5814 = (ID_5813 : -);
ID_5815 = ID_5814, 2;
ID_5816 = (ID_5815 : pow);
ID_5817 = ID_5809, ID_5816;
ID_5818 = (ID_5817 :> sqrt);
ID_5819 = ID_5818, 0;
ID_5820 = (ID_5819 : ==);
ID_5821 = ID_5820, ID_69;
ID_5822 = (ID_5821 : select2);
ID_5823 = (ID_0 : \(x3063).(\(x3064).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3063 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3064 : *) : +)~_));
ID_5824 = 10, ID_5823;
ID_5825 = (ID_5824 : -);
ID_5826 = 0, ID_5825;
ID_5827 = (ID_5826 : -);
ID_5828 = (ID_0 : \(x3065).(\(x3066).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3065 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3066 : *) : +)~_));
ID_5829 = 10, ID_5828;
ID_5830 = (ID_5829 : -);
ID_5831 = 0, ID_5830;
ID_5832 = (ID_5831 : -);
ID_5833 = ID_5832, 2;
ID_5834 = (ID_5833 : pow);
ID_5835 = (ID_14 : \(x3067).(\(x3068).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3067 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3068 : *) : +)~_));
ID_5836 = 0, ID_5835;
ID_5837 = (ID_5836 : -);
ID_5838 = 0, ID_5837;
ID_5839 = (ID_5838 : -);
ID_5840 = ID_5839, 2;
ID_5841 = (ID_5840 : pow);
ID_5842 = ID_5834, ID_5841;
ID_5843 = (ID_5842 :> sqrt);
ID_5844 = ID_5843, 0;
ID_5845 = (ID_5844 : <);
ID_5846 = ID_5843, 0.0001f;
ID_5847 = (ID_5846 : max);
ID_5848 = ID_5847, ID_5843;
ID_5849 = ID_5845, ID_5848;
ID_5850 = (ID_5849 : select2);
ID_5851 = ID_5827, ID_5850;
ID_5852 = (ID_5851 : /);
ID_5853 = ID_5852, 0;
ID_5854 = ID_5822, ID_5853;
ID_5855 = (ID_5854 : select2);
ID_5856 = ID_5009, ID_5855;
ID_5857 = (ID_5856 : *);
ID_5858 = (ID_0 : \(x3069).(\(x3070).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3069 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3070 : *) : +)~_));
ID_5859 = 10, ID_5858;
ID_5860 = (ID_5859 : -);
ID_5861 = 0, ID_5860;
ID_5862 = (ID_5861 : -);
ID_5863 = ID_5862, 2;
ID_5864 = (ID_5863 : pow);
ID_5865 = (ID_14 : \(x3071).(\(x3072).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3071 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3072 : *) : +)~_));
ID_5866 = 0, ID_5865;
ID_5867 = (ID_5866 : -);
ID_5868 = 0, ID_5867;
ID_5869 = (ID_5868 : -);
ID_5870 = ID_5869, 2;
ID_5871 = (ID_5870 : pow);
ID_5872 = ID_5864, ID_5871;
ID_5873 = (ID_5872 :> sqrt);
ID_5874 = ID_5873, 0;
ID_5875 = (ID_5874 : ==);
ID_5876 = ID_5875, ID_69;
ID_5877 = (ID_5876 : select2);
ID_5878 = (ID_14 : \(x3073).(\(x3074).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3073 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3074 : *) : +)~_));
ID_5879 = 0, ID_5878;
ID_5880 = (ID_5879 : -);
ID_5881 = 0, ID_5880;
ID_5882 = (ID_5881 : -);
ID_5883 = (ID_0 : \(x3075).(\(x3076).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3075 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3076 : *) : +)~_));
ID_5884 = 10, ID_5883;
ID_5885 = (ID_5884 : -);
ID_5886 = 0, ID_5885;
ID_5887 = (ID_5886 : -);
ID_5888 = ID_5887, 2;
ID_5889 = (ID_5888 : pow);
ID_5890 = (ID_14 : \(x3077).(\(x3078).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3077 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3078 : *) : +)~_));
ID_5891 = 0, ID_5890;
ID_5892 = (ID_5891 : -);
ID_5893 = 0, ID_5892;
ID_5894 = (ID_5893 : -);
ID_5895 = ID_5894, 2;
ID_5896 = (ID_5895 : pow);
ID_5897 = ID_5889, ID_5896;
ID_5898 = (ID_5897 :> sqrt);
ID_5899 = ID_5898, 0;
ID_5900 = (ID_5899 : <);
ID_5901 = ID_5898, 0.0001f;
ID_5902 = (ID_5901 : max);
ID_5903 = ID_5902, ID_5898;
ID_5904 = ID_5900, ID_5903;
ID_5905 = (ID_5904 : select2);
ID_5906 = ID_5882, ID_5905;
ID_5907 = (ID_5906 : /);
ID_5908 = ID_5907, 0;
ID_5909 = ID_5877, ID_5908;
ID_5910 = (ID_5909 : select2);
ID_5911 = ID_5016, ID_5910;
ID_5912 = (ID_5911 : *);
ID_5913 = ID_5857, ID_5912;
ID_5914 = (ID_5913 :> _);
ID_5915 = (ID_0 : \(x3079).(\(x3080).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3079 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3080 : *) : +)~_));
ID_5916 = 10, ID_5915;
ID_5917 = (ID_5916 : -);
ID_5918 = 0, ID_5917;
ID_5919 = (ID_5918 : -);
ID_5920 = ID_5919, 2;
ID_5921 = (ID_5920 : pow);
ID_5922 = (ID_14 : \(x3081).(\(x3082).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3081 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3082 : *) : +)~_));
ID_5923 = 0, ID_5922;
ID_5924 = (ID_5923 : -);
ID_5925 = 0, ID_5924;
ID_5926 = (ID_5925 : -);
ID_5927 = ID_5926, 2;
ID_5928 = (ID_5927 : pow);
ID_5929 = ID_5921, ID_5928;
ID_5930 = (ID_5929 :> sqrt);
ID_5931 = ID_5930, 0;
ID_5932 = (ID_5931 : ==);
ID_5933 = ID_5932, ID_69;
ID_5934 = (ID_5933 : select2);
ID_5935 = (ID_0 : \(x3083).(\(x3084).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3083 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3084 : *) : +)~_));
ID_5936 = 10, ID_5935;
ID_5937 = (ID_5936 : -);
ID_5938 = 0, ID_5937;
ID_5939 = (ID_5938 : -);
ID_5940 = (ID_0 : \(x3085).(\(x3086).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3085 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3086 : *) : +)~_));
ID_5941 = 10, ID_5940;
ID_5942 = (ID_5941 : -);
ID_5943 = 0, ID_5942;
ID_5944 = (ID_5943 : -);
ID_5945 = ID_5944, 2;
ID_5946 = (ID_5945 : pow);
ID_5947 = (ID_14 : \(x3087).(\(x3088).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3087 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3088 : *) : +)~_));
ID_5948 = 0, ID_5947;
ID_5949 = (ID_5948 : -);
ID_5950 = 0, ID_5949;
ID_5951 = (ID_5950 : -);
ID_5952 = ID_5951, 2;
ID_5953 = (ID_5952 : pow);
ID_5954 = ID_5946, ID_5953;
ID_5955 = (ID_5954 :> sqrt);
ID_5956 = ID_5955, 0;
ID_5957 = (ID_5956 : <);
ID_5958 = ID_5955, 0.0001f;
ID_5959 = (ID_5958 : max);
ID_5960 = ID_5959, ID_5955;
ID_5961 = ID_5957, ID_5960;
ID_5962 = (ID_5961 : select2);
ID_5963 = ID_5939, ID_5962;
ID_5964 = (ID_5963 : /);
ID_5965 = ID_5964, 0;
ID_5966 = ID_5934, ID_5965;
ID_5967 = (ID_5966 : select2);
ID_5968 = ID_5967, 2;
ID_5969 = (ID_5968 : pow);
ID_5970 = (ID_0 : \(x3089).(\(x3090).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3089 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3090 : *) : +)~_));
ID_5971 = 10, ID_5970;
ID_5972 = (ID_5971 : -);
ID_5973 = 0, ID_5972;
ID_5974 = (ID_5973 : -);
ID_5975 = ID_5974, 2;
ID_5976 = (ID_5975 : pow);
ID_5977 = (ID_14 : \(x3091).(\(x3092).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3091 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3092 : *) : +)~_));
ID_5978 = 0, ID_5977;
ID_5979 = (ID_5978 : -);
ID_5980 = 0, ID_5979;
ID_5981 = (ID_5980 : -);
ID_5982 = ID_5981, 2;
ID_5983 = (ID_5982 : pow);
ID_5984 = ID_5976, ID_5983;
ID_5985 = (ID_5984 :> sqrt);
ID_5986 = ID_5985, 0;
ID_5987 = (ID_5986 : ==);
ID_5988 = ID_5987, ID_69;
ID_5989 = (ID_5988 : select2);
ID_5990 = (ID_14 : \(x3093).(\(x3094).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3093 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3094 : *) : +)~_));
ID_5991 = 0, ID_5990;
ID_5992 = (ID_5991 : -);
ID_5993 = 0, ID_5992;
ID_5994 = (ID_5993 : -);
ID_5995 = (ID_0 : \(x3095).(\(x3096).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3095 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3096 : *) : +)~_));
ID_5996 = 10, ID_5995;
ID_5997 = (ID_5996 : -);
ID_5998 = 0, ID_5997;
ID_5999 = (ID_5998 : -);
ID_6000 = ID_5999, 2;
ID_6001 = (ID_6000 : pow);
ID_6002 = (ID_14 : \(x3097).(\(x3098).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3097 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3098 : *) : +)~_));
ID_6003 = 0, ID_6002;
ID_6004 = (ID_6003 : -);
ID_6005 = 0, ID_6004;
ID_6006 = (ID_6005 : -);
ID_6007 = ID_6006, 2;
ID_6008 = (ID_6007 : pow);
ID_6009 = ID_6001, ID_6008;
ID_6010 = (ID_6009 :> sqrt);
ID_6011 = ID_6010, 0;
ID_6012 = (ID_6011 : <);
ID_6013 = ID_6010, 0.0001f;
ID_6014 = (ID_6013 : max);
ID_6015 = ID_6014, ID_6010;
ID_6016 = ID_6012, ID_6015;
ID_6017 = (ID_6016 : select2);
ID_6018 = ID_5994, ID_6017;
ID_6019 = (ID_6018 : /);
ID_6020 = ID_6019, 0;
ID_6021 = ID_5989, ID_6020;
ID_6022 = (ID_6021 : select2);
ID_6023 = ID_6022, 2;
ID_6024 = (ID_6023 : pow);
ID_6025 = ID_5969, ID_6024;
ID_6026 = (ID_6025 :> sqrt);
ID_6027 = ID_6026, ID_5020;
ID_6028 = (ID_6027 : *);
ID_6029 = ID_6028, 0;
ID_6030 = (ID_6029 : <);
ID_6031 = ID_6028, 0.0001f;
ID_6032 = (ID_6031 : max);
ID_6033 = ID_6032, ID_6028;
ID_6034 = ID_6030, ID_6033;
ID_6035 = (ID_6034 : select2);
ID_6036 = ID_5914, ID_6035;
ID_6037 = (ID_6036 : /);
ID_6038 = ID_6037, 0;
ID_6039 = ID_5802, ID_6038;
ID_6040 = (ID_6039 : select2);
ID_6041 = ID_6040, 0;
ID_6042 = (ID_6041 : <);
ID_6043 = ID_6040, 0.0001f;
ID_6044 = (ID_6043 : max);
ID_6045 = ID_6044, ID_6040;
ID_6046 = ID_6042, ID_6045;
ID_6047 = ID_6046 : select2;
ID_6048 = (ID_6047 : acos);
ID_6049 = ID_6048, 0;
ID_6050 = ID_5801, ID_6049;
ID_6051 = (ID_6050 : select2);
ID_6052 = ID_5521, ID_6051;
ID_6053 = ID_6052 : *;
ID_6054 = (ID_6053 : cos);
ID_6055 = ID_5513, ID_6054;
ID_6056 = (ID_6055 : *);
ID_6057 = _, ID_6056;
ID_6058 = (ID_6057 : *);
ID_6059 = ID_4895, ID_1306;
ID_6060 = (ID_6059 :> sqrt);
ID_6061 = ID_6060, 0;
ID_6062 = (ID_6061 : ==);
ID_6063 = ID_6062, ID_69;
ID_6064 = (ID_6063 : select2);
ID_6065 = (ID_0 : \(x3175).(\(x3176).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3175 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3176 : *) : +)~_));
ID_6066 = 10, ID_6065;
ID_6067 = (ID_6066 : -);
ID_6068 = 0, ID_6067;
ID_6069 = (ID_6068 : -);
ID_6070 = ID_6069, 2;
ID_6071 = (ID_6070 : pow);
ID_6072 = (ID_14 : \(x3177).(\(x3178).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3177 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3178 : *) : +)~_));
ID_6073 = 0, ID_6072;
ID_6074 = (ID_6073 : -);
ID_6075 = 0, ID_6074;
ID_6076 = (ID_6075 : -);
ID_6077 = ID_6076, 2;
ID_6078 = (ID_6077 : pow);
ID_6079 = ID_6071, ID_6078;
ID_6080 = (ID_6079 :> sqrt);
ID_6081 = ID_6080, 0;
ID_6082 = (ID_6081 : <);
ID_6083 = ID_6080, 0.0001f;
ID_6084 = (ID_6083 : max);
ID_6085 = ID_6084, ID_6080;
ID_6086 = ID_6082, ID_6085;
ID_6087 = (ID_6086 : select2);
ID_6088 = ID_4911, ID_6087;
ID_6089 = (ID_6088 : /);
ID_6090 = ID_6089, 0;
ID_6091 = ID_6064, ID_6090;
ID_6092 = (ID_6091 : select2);
ID_6093 = ID_6092, 2;
ID_6094 = (ID_6093 : pow);
ID_6095 = ID_4947, ID_1349;
ID_6096 = (ID_6095 :> sqrt);
ID_6097 = ID_6096, 0;
ID_6098 = (ID_6097 : ==);
ID_6099 = ID_6098, ID_69;
ID_6100 = (ID_6099 : select2);
ID_6101 = (ID_0 : \(x3179).(\(x3180).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3179 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3180 : *) : +)~_));
ID_6102 = 10, ID_6101;
ID_6103 = (ID_6102 : -);
ID_6104 = 0, ID_6103;
ID_6105 = (ID_6104 : -);
ID_6106 = ID_6105, 2;
ID_6107 = (ID_6106 : pow);
ID_6108 = (ID_14 : \(x3181).(\(x3182).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3181 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3182 : *) : +)~_));
ID_6109 = 0, ID_6108;
ID_6110 = (ID_6109 : -);
ID_6111 = 0, ID_6110;
ID_6112 = (ID_6111 : -);
ID_6113 = ID_6112, 2;
ID_6114 = (ID_6113 : pow);
ID_6115 = ID_6107, ID_6114;
ID_6116 = (ID_6115 :> sqrt);
ID_6117 = ID_6116, 0;
ID_6118 = (ID_6117 : <);
ID_6119 = ID_6116, 0.0001f;
ID_6120 = (ID_6119 : max);
ID_6121 = ID_6120, ID_6116;
ID_6122 = ID_6118, ID_6121;
ID_6123 = (ID_6122 : select2);
ID_6124 = ID_1360, ID_6123;
ID_6125 = (ID_6124 : /);
ID_6126 = ID_6125, 0;
ID_6127 = ID_6100, ID_6126;
ID_6128 = (ID_6127 : select2);
ID_6129 = ID_6128, 2;
ID_6130 = (ID_6129 : pow);
ID_6131 = ID_6094, ID_6130;
ID_6132 = (ID_6131 :> sqrt);
ID_6133 = ID_6132, ID_5020;
ID_6134 = (ID_6133 : *);
ID_6135 = ID_6134, 0;
ID_6136 = (ID_6135 : ==);
ID_6137 = ID_5030, ID_1403;
ID_6138 = (ID_6137 :> sqrt);
ID_6139 = ID_6138, 0;
ID_6140 = (ID_6139 : ==);
ID_6141 = ID_6140, ID_69;
ID_6142 = (ID_6141 : select2);
ID_6143 = (ID_0 : \(x3183).(\(x3184).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3183 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3184 : *) : +)~_));
ID_6144 = 10, ID_6143;
ID_6145 = (ID_6144 : -);
ID_6146 = 0, ID_6145;
ID_6147 = (ID_6146 : -);
ID_6148 = ID_6147, 2;
ID_6149 = (ID_6148 : pow);
ID_6150 = (ID_14 : \(x3185).(\(x3186).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3185 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3186 : *) : +)~_));
ID_6151 = 0, ID_6150;
ID_6152 = (ID_6151 : -);
ID_6153 = 0, ID_6152;
ID_6154 = (ID_6153 : -);
ID_6155 = ID_6154, 2;
ID_6156 = (ID_6155 : pow);
ID_6157 = ID_6149, ID_6156;
ID_6158 = (ID_6157 :> sqrt);
ID_6159 = ID_6158, 0;
ID_6160 = (ID_6159 : <);
ID_6161 = ID_6158, 0.0001f;
ID_6162 = (ID_6161 : max);
ID_6163 = ID_6162, ID_6158;
ID_6164 = ID_6160, ID_6163;
ID_6165 = (ID_6164 : select2);
ID_6166 = ID_5046, ID_6165;
ID_6167 = (ID_6166 : /);
ID_6168 = ID_6167, 0;
ID_6169 = ID_6142, ID_6168;
ID_6170 = (ID_6169 : select2);
ID_6171 = ID_5009, ID_6170;
ID_6172 = (ID_6171 : *);
ID_6173 = ID_5082, ID_1446;
ID_6174 = (ID_6173 :> sqrt);
ID_6175 = ID_6174, 0;
ID_6176 = (ID_6175 : ==);
ID_6177 = ID_6176, ID_69;
ID_6178 = (ID_6177 : select2);
ID_6179 = (ID_0 : \(x3187).(\(x3188).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3187 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3188 : *) : +)~_));
ID_6180 = 10, ID_6179;
ID_6181 = (ID_6180 : -);
ID_6182 = 0, ID_6181;
ID_6183 = (ID_6182 : -);
ID_6184 = ID_6183, 2;
ID_6185 = (ID_6184 : pow);
ID_6186 = (ID_14 : \(x3189).(\(x3190).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3189 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3190 : *) : +)~_));
ID_6187 = 0, ID_6186;
ID_6188 = (ID_6187 : -);
ID_6189 = 0, ID_6188;
ID_6190 = (ID_6189 : -);
ID_6191 = ID_6190, 2;
ID_6192 = (ID_6191 : pow);
ID_6193 = ID_6185, ID_6192;
ID_6194 = (ID_6193 :> sqrt);
ID_6195 = ID_6194, 0;
ID_6196 = (ID_6195 : <);
ID_6197 = ID_6194, 0.0001f;
ID_6198 = (ID_6197 : max);
ID_6199 = ID_6198, ID_6194;
ID_6200 = ID_6196, ID_6199;
ID_6201 = (ID_6200 : select2);
ID_6202 = ID_1457, ID_6201;
ID_6203 = (ID_6202 : /);
ID_6204 = ID_6203, 0;
ID_6205 = ID_6178, ID_6204;
ID_6206 = (ID_6205 : select2);
ID_6207 = ID_5016, ID_6206;
ID_6208 = (ID_6207 : *);
ID_6209 = ID_6172, ID_6208;
ID_6210 = (ID_6209 :> _);
ID_6211 = (ID_0 : \(x3191).(\(x3192).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3191 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3192 : *) : +)~_));
ID_6212 = 10, ID_6211;
ID_6213 = (ID_6212 : -);
ID_6214 = 0, ID_6213;
ID_6215 = (ID_6214 : -);
ID_6216 = ID_6215, 2;
ID_6217 = (ID_6216 : pow);
ID_6218 = (ID_14 : \(x3193).(\(x3194).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3193 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3194 : *) : +)~_));
ID_6219 = 0, ID_6218;
ID_6220 = (ID_6219 : -);
ID_6221 = 0, ID_6220;
ID_6222 = (ID_6221 : -);
ID_6223 = ID_6222, 2;
ID_6224 = (ID_6223 : pow);
ID_6225 = ID_6217, ID_6224;
ID_6226 = (ID_6225 :> sqrt);
ID_6227 = ID_6226, 0;
ID_6228 = (ID_6227 : ==);
ID_6229 = ID_6228, ID_69;
ID_6230 = (ID_6229 : select2);
ID_6231 = (ID_0 : \(x3195).(\(x3196).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3195 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3196 : *) : +)~_));
ID_6232 = 10, ID_6231;
ID_6233 = (ID_6232 : -);
ID_6234 = 0, ID_6233;
ID_6235 = (ID_6234 : -);
ID_6236 = (ID_0 : \(x3197).(\(x3198).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3197 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3198 : *) : +)~_));
ID_6237 = 10, ID_6236;
ID_6238 = (ID_6237 : -);
ID_6239 = 0, ID_6238;
ID_6240 = (ID_6239 : -);
ID_6241 = ID_6240, 2;
ID_6242 = (ID_6241 : pow);
ID_6243 = (ID_14 : \(x3199).(\(x3200).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3199 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3200 : *) : +)~_));
ID_6244 = 0, ID_6243;
ID_6245 = (ID_6244 : -);
ID_6246 = 0, ID_6245;
ID_6247 = (ID_6246 : -);
ID_6248 = ID_6247, 2;
ID_6249 = (ID_6248 : pow);
ID_6250 = ID_6242, ID_6249;
ID_6251 = (ID_6250 :> sqrt);
ID_6252 = ID_6251, 0;
ID_6253 = (ID_6252 : <);
ID_6254 = ID_6251, 0.0001f;
ID_6255 = (ID_6254 : max);
ID_6256 = ID_6255, ID_6251;
ID_6257 = ID_6253, ID_6256;
ID_6258 = (ID_6257 : select2);
ID_6259 = ID_6235, ID_6258;
ID_6260 = (ID_6259 : /);
ID_6261 = ID_6260, 0;
ID_6262 = ID_6230, ID_6261;
ID_6263 = (ID_6262 : select2);
ID_6264 = ID_6263, 2;
ID_6265 = (ID_6264 : pow);
ID_6266 = (ID_0 : \(x3201).(\(x3202).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3201 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3202 : *) : +)~_));
ID_6267 = 10, ID_6266;
ID_6268 = (ID_6267 : -);
ID_6269 = 0, ID_6268;
ID_6270 = (ID_6269 : -);
ID_6271 = ID_6270, 2;
ID_6272 = (ID_6271 : pow);
ID_6273 = (ID_14 : \(x3203).(\(x3204).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3203 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3204 : *) : +)~_));
ID_6274 = 0, ID_6273;
ID_6275 = (ID_6274 : -);
ID_6276 = 0, ID_6275;
ID_6277 = (ID_6276 : -);
ID_6278 = ID_6277, 2;
ID_6279 = (ID_6278 : pow);
ID_6280 = ID_6272, ID_6279;
ID_6281 = (ID_6280 :> sqrt);
ID_6282 = ID_6281, 0;
ID_6283 = (ID_6282 : ==);
ID_6284 = ID_6283, ID_69;
ID_6285 = (ID_6284 : select2);
ID_6286 = (ID_14 : \(x3205).(\(x3206).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3205 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3206 : *) : +)~_));
ID_6287 = 0, ID_6286;
ID_6288 = (ID_6287 : -);
ID_6289 = 0, ID_6288;
ID_6290 = (ID_6289 : -);
ID_6291 = (ID_0 : \(x3207).(\(x3208).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3207 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3208 : *) : +)~_));
ID_6292 = 10, ID_6291;
ID_6293 = (ID_6292 : -);
ID_6294 = 0, ID_6293;
ID_6295 = (ID_6294 : -);
ID_6296 = ID_6295, 2;
ID_6297 = (ID_6296 : pow);
ID_6298 = (ID_14 : \(x3209).(\(x3210).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3209 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3210 : *) : +)~_));
ID_6299 = 0, ID_6298;
ID_6300 = (ID_6299 : -);
ID_6301 = 0, ID_6300;
ID_6302 = (ID_6301 : -);
ID_6303 = ID_6302, 2;
ID_6304 = (ID_6303 : pow);
ID_6305 = ID_6297, ID_6304;
ID_6306 = (ID_6305 :> sqrt);
ID_6307 = ID_6306, 0;
ID_6308 = (ID_6307 : <);
ID_6309 = ID_6306, 0.0001f;
ID_6310 = (ID_6309 : max);
ID_6311 = ID_6310, ID_6306;
ID_6312 = ID_6308, ID_6311;
ID_6313 = (ID_6312 : select2);
ID_6314 = ID_6290, ID_6313;
ID_6315 = (ID_6314 : /);
ID_6316 = ID_6315, 0;
ID_6317 = ID_6285, ID_6316;
ID_6318 = (ID_6317 : select2);
ID_6319 = ID_6318, 2;
ID_6320 = (ID_6319 : pow);
ID_6321 = ID_6265, ID_6320;
ID_6322 = (ID_6321 :> sqrt);
ID_6323 = ID_6322, ID_5020;
ID_6324 = (ID_6323 : *);
ID_6325 = ID_6324, 0;
ID_6326 = (ID_6325 : <);
ID_6327 = ID_6324, 0.0001f;
ID_6328 = (ID_6327 : max);
ID_6329 = ID_6328, ID_6324;
ID_6330 = ID_6326, ID_6329;
ID_6331 = (ID_6330 : select2);
ID_6332 = ID_6210, ID_6331;
ID_6333 = (ID_6332 : /);
ID_6334 = ID_6333, 0;
ID_6335 = ID_6136, ID_6334;
ID_6336 = (ID_6335 : select2);
ID_6337 = ID_6336, 0;
ID_6338 = (ID_6337 : ==);
ID_6339 = (ID_6325 : ==);
ID_6340 = (ID_0 : \(x3211).(\(x3212).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3211 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3212 : *) : +)~_));
ID_6341 = 10, ID_6340;
ID_6342 = (ID_6341 : -);
ID_6343 = 0, ID_6342;
ID_6344 = (ID_6343 : -);
ID_6345 = ID_6344, 2;
ID_6346 = (ID_6345 : pow);
ID_6347 = (ID_14 : \(x3213).(\(x3214).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3213 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3214 : *) : +)~_));
ID_6348 = 0, ID_6347;
ID_6349 = (ID_6348 : -);
ID_6350 = 0, ID_6349;
ID_6351 = (ID_6350 : -);
ID_6352 = ID_6351, 2;
ID_6353 = (ID_6352 : pow);
ID_6354 = ID_6346, ID_6353;
ID_6355 = (ID_6354 :> sqrt);
ID_6356 = ID_6355, 0;
ID_6357 = (ID_6356 : ==);
ID_6358 = ID_6357, ID_69;
ID_6359 = (ID_6358 : select2);
ID_6360 = (ID_0 : \(x3215).(\(x3216).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3215 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3216 : *) : +)~_));
ID_6361 = 10, ID_6360;
ID_6362 = (ID_6361 : -);
ID_6363 = 0, ID_6362;
ID_6364 = (ID_6363 : -);
ID_6365 = (ID_0 : \(x3217).(\(x3218).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3217 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3218 : *) : +)~_));
ID_6366 = 10, ID_6365;
ID_6367 = (ID_6366 : -);
ID_6368 = 0, ID_6367;
ID_6369 = (ID_6368 : -);
ID_6370 = ID_6369, 2;
ID_6371 = (ID_6370 : pow);
ID_6372 = (ID_14 : \(x3219).(\(x3220).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3219 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3220 : *) : +)~_));
ID_6373 = 0, ID_6372;
ID_6374 = (ID_6373 : -);
ID_6375 = 0, ID_6374;
ID_6376 = (ID_6375 : -);
ID_6377 = ID_6376, 2;
ID_6378 = (ID_6377 : pow);
ID_6379 = ID_6371, ID_6378;
ID_6380 = (ID_6379 :> sqrt);
ID_6381 = ID_6380, 0;
ID_6382 = (ID_6381 : <);
ID_6383 = ID_6380, 0.0001f;
ID_6384 = (ID_6383 : max);
ID_6385 = ID_6384, ID_6380;
ID_6386 = ID_6382, ID_6385;
ID_6387 = (ID_6386 : select2);
ID_6388 = ID_6364, ID_6387;
ID_6389 = (ID_6388 : /);
ID_6390 = ID_6389, 0;
ID_6391 = ID_6359, ID_6390;
ID_6392 = (ID_6391 : select2);
ID_6393 = ID_5009, ID_6392;
ID_6394 = (ID_6393 : *);
ID_6395 = (ID_0 : \(x3221).(\(x3222).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3221 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3222 : *) : +)~_));
ID_6396 = 10, ID_6395;
ID_6397 = (ID_6396 : -);
ID_6398 = 0, ID_6397;
ID_6399 = (ID_6398 : -);
ID_6400 = ID_6399, 2;
ID_6401 = (ID_6400 : pow);
ID_6402 = (ID_14 : \(x3223).(\(x3224).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3223 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3224 : *) : +)~_));
ID_6403 = 0, ID_6402;
ID_6404 = (ID_6403 : -);
ID_6405 = 0, ID_6404;
ID_6406 = (ID_6405 : -);
ID_6407 = ID_6406, 2;
ID_6408 = (ID_6407 : pow);
ID_6409 = ID_6401, ID_6408;
ID_6410 = (ID_6409 :> sqrt);
ID_6411 = ID_6410, 0;
ID_6412 = (ID_6411 : ==);
ID_6413 = ID_6412, ID_69;
ID_6414 = (ID_6413 : select2);
ID_6415 = (ID_14 : \(x3225).(\(x3226).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3225 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3226 : *) : +)~_));
ID_6416 = 0, ID_6415;
ID_6417 = (ID_6416 : -);
ID_6418 = 0, ID_6417;
ID_6419 = (ID_6418 : -);
ID_6420 = (ID_0 : \(x3227).(\(x3228).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3227 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3228 : *) : +)~_));
ID_6421 = 10, ID_6420;
ID_6422 = (ID_6421 : -);
ID_6423 = 0, ID_6422;
ID_6424 = (ID_6423 : -);
ID_6425 = ID_6424, 2;
ID_6426 = (ID_6425 : pow);
ID_6427 = (ID_14 : \(x3229).(\(x3230).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3229 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3230 : *) : +)~_));
ID_6428 = 0, ID_6427;
ID_6429 = (ID_6428 : -);
ID_6430 = 0, ID_6429;
ID_6431 = (ID_6430 : -);
ID_6432 = ID_6431, 2;
ID_6433 = (ID_6432 : pow);
ID_6434 = ID_6426, ID_6433;
ID_6435 = (ID_6434 :> sqrt);
ID_6436 = ID_6435, 0;
ID_6437 = (ID_6436 : <);
ID_6438 = ID_6435, 0.0001f;
ID_6439 = (ID_6438 : max);
ID_6440 = ID_6439, ID_6435;
ID_6441 = ID_6437, ID_6440;
ID_6442 = (ID_6441 : select2);
ID_6443 = ID_6419, ID_6442;
ID_6444 = (ID_6443 : /);
ID_6445 = ID_6444, 0;
ID_6446 = ID_6414, ID_6445;
ID_6447 = (ID_6446 : select2);
ID_6448 = ID_5016, ID_6447;
ID_6449 = (ID_6448 : *);
ID_6450 = ID_6394, ID_6449;
ID_6451 = (ID_6450 :> _);
ID_6452 = (ID_0 : \(x3231).(\(x3232).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3231 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3232 : *) : +)~_));
ID_6453 = 10, ID_6452;
ID_6454 = (ID_6453 : -);
ID_6455 = 0, ID_6454;
ID_6456 = (ID_6455 : -);
ID_6457 = ID_6456, 2;
ID_6458 = (ID_6457 : pow);
ID_6459 = (ID_14 : \(x3233).(\(x3234).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3233 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3234 : *) : +)~_));
ID_6460 = 0, ID_6459;
ID_6461 = (ID_6460 : -);
ID_6462 = 0, ID_6461;
ID_6463 = (ID_6462 : -);
ID_6464 = ID_6463, 2;
ID_6465 = (ID_6464 : pow);
ID_6466 = ID_6458, ID_6465;
ID_6467 = (ID_6466 :> sqrt);
ID_6468 = ID_6467, 0;
ID_6469 = (ID_6468 : ==);
ID_6470 = ID_6469, ID_69;
ID_6471 = (ID_6470 : select2);
ID_6472 = (ID_0 : \(x3235).(\(x3236).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3235 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3236 : *) : +)~_));
ID_6473 = 10, ID_6472;
ID_6474 = (ID_6473 : -);
ID_6475 = 0, ID_6474;
ID_6476 = (ID_6475 : -);
ID_6477 = (ID_0 : \(x3237).(\(x3238).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3237 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3238 : *) : +)~_));
ID_6478 = 10, ID_6477;
ID_6479 = (ID_6478 : -);
ID_6480 = 0, ID_6479;
ID_6481 = (ID_6480 : -);
ID_6482 = ID_6481, 2;
ID_6483 = (ID_6482 : pow);
ID_6484 = (ID_14 : \(x3239).(\(x3240).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3239 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3240 : *) : +)~_));
ID_6485 = 0, ID_6484;
ID_6486 = (ID_6485 : -);
ID_6487 = 0, ID_6486;
ID_6488 = (ID_6487 : -);
ID_6489 = ID_6488, 2;
ID_6490 = (ID_6489 : pow);
ID_6491 = ID_6483, ID_6490;
ID_6492 = (ID_6491 :> sqrt);
ID_6493 = ID_6492, 0;
ID_6494 = (ID_6493 : <);
ID_6495 = ID_6492, 0.0001f;
ID_6496 = (ID_6495 : max);
ID_6497 = ID_6496, ID_6492;
ID_6498 = ID_6494, ID_6497;
ID_6499 = (ID_6498 : select2);
ID_6500 = ID_6476, ID_6499;
ID_6501 = (ID_6500 : /);
ID_6502 = ID_6501, 0;
ID_6503 = ID_6471, ID_6502;
ID_6504 = (ID_6503 : select2);
ID_6505 = ID_6504, 2;
ID_6506 = (ID_6505 : pow);
ID_6507 = (ID_0 : \(x3241).(\(x3242).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3241 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3242 : *) : +)~_));
ID_6508 = 10, ID_6507;
ID_6509 = (ID_6508 : -);
ID_6510 = 0, ID_6509;
ID_6511 = (ID_6510 : -);
ID_6512 = ID_6511, 2;
ID_6513 = (ID_6512 : pow);
ID_6514 = (ID_14 : \(x3243).(\(x3244).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3243 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3244 : *) : +)~_));
ID_6515 = 0, ID_6514;
ID_6516 = (ID_6515 : -);
ID_6517 = 0, ID_6516;
ID_6518 = (ID_6517 : -);
ID_6519 = ID_6518, 2;
ID_6520 = (ID_6519 : pow);
ID_6521 = ID_6513, ID_6520;
ID_6522 = (ID_6521 :> sqrt);
ID_6523 = ID_6522, 0;
ID_6524 = (ID_6523 : ==);
ID_6525 = ID_6524, ID_69;
ID_6526 = (ID_6525 : select2);
ID_6527 = (ID_14 : \(x3245).(\(x3246).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3245 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3246 : *) : +)~_));
ID_6528 = 0, ID_6527;
ID_6529 = (ID_6528 : -);
ID_6530 = 0, ID_6529;
ID_6531 = (ID_6530 : -);
ID_6532 = (ID_0 : \(x3247).(\(x3248).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3247 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3248 : *) : +)~_));
ID_6533 = 10, ID_6532;
ID_6534 = (ID_6533 : -);
ID_6535 = 0, ID_6534;
ID_6536 = (ID_6535 : -);
ID_6537 = ID_6536, 2;
ID_6538 = (ID_6537 : pow);
ID_6539 = (ID_14 : \(x3249).(\(x3250).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3249 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3250 : *) : +)~_));
ID_6540 = 0, ID_6539;
ID_6541 = (ID_6540 : -);
ID_6542 = 0, ID_6541;
ID_6543 = (ID_6542 : -);
ID_6544 = ID_6543, 2;
ID_6545 = (ID_6544 : pow);
ID_6546 = ID_6538, ID_6545;
ID_6547 = (ID_6546 :> sqrt);
ID_6548 = ID_6547, 0;
ID_6549 = (ID_6548 : <);
ID_6550 = ID_6547, 0.0001f;
ID_6551 = (ID_6550 : max);
ID_6552 = ID_6551, ID_6547;
ID_6553 = ID_6549, ID_6552;
ID_6554 = (ID_6553 : select2);
ID_6555 = ID_6531, ID_6554;
ID_6556 = (ID_6555 : /);
ID_6557 = ID_6556, 0;
ID_6558 = ID_6526, ID_6557;
ID_6559 = (ID_6558 : select2);
ID_6560 = ID_6559, 2;
ID_6561 = (ID_6560 : pow);
ID_6562 = ID_6506, ID_6561;
ID_6563 = (ID_6562 :> sqrt);
ID_6564 = ID_6563, ID_5020;
ID_6565 = (ID_6564 : *);
ID_6566 = ID_6565, 0;
ID_6567 = (ID_6566 : <);
ID_6568 = ID_6565, 0.0001f;
ID_6569 = (ID_6568 : max);
ID_6570 = ID_6569, ID_6565;
ID_6571 = ID_6567, ID_6570;
ID_6572 = (ID_6571 : select2);
ID_6573 = ID_6451, ID_6572;
ID_6574 = (ID_6573 : /);
ID_6575 = ID_6574, 0;
ID_6576 = ID_6339, ID_6575;
ID_6577 = (ID_6576 : select2);
ID_6578 = ID_6577, 0;
ID_6579 = (ID_6578 : <);
ID_6580 = ID_6577, 0.0001f;
ID_6581 = (ID_6580 : max);
ID_6582 = ID_6581, ID_6577;
ID_6583 = ID_6579, ID_6582;
ID_6584 = ID_6583 : select2;
ID_6585 = (ID_6584 : acos);
ID_6586 = ID_6585, 0;
ID_6587 = ID_6338, ID_6586;
ID_6588 = (ID_6587 : select2);
ID_6589 = ID_5521, ID_6588;
ID_6590 = ID_6589 : *;
ID_6591 = (ID_6590 : sin);
ID_6592 = _, ID_6591;
ID_6593 = (ID_6592 : *);
ID_6594 = (ID_5512 : cos);
ID_6595 = ID_1877, 10;
ID_6596 = (ID_6595 : *);
ID_6597 = ID_1876, ID_6596;
ID_6598 = (ID_6597 : -);
ID_6599 = ID_6598, 0;
ID_6600 = (ID_6599 : <);
ID_6601 = ID_6600, ID_697;
ID_6602 = (ID_6601 : select2);
ID_6603 = 10, ID_1886;
ID_6604 = (ID_6603 : -);
ID_6605 = 0, ID_6604;
ID_6606 = (ID_6605 : -);
ID_6607 = ID_6606, 2;
ID_6608 = (ID_6607 : pow);
ID_6609 = ID_6608, ID_1899;
ID_6610 = (ID_6609 :> sqrt);
ID_6611 = ID_6610, 0;
ID_6612 = (ID_6611 : ==);
ID_6613 = ID_6612, ID_69;
ID_6614 = (ID_6613 : select2);
ID_6615 = 10, ID_1906;
ID_6616 = (ID_6615 : -);
ID_6617 = 0, ID_6616;
ID_6618 = (ID_6617 : -);
ID_6619 = (ID_0 : \(x3327).(\(x3328).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3327 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3328 : *) : +)~_));
ID_6620 = 10, ID_6619;
ID_6621 = (ID_6620 : -);
ID_6622 = 0, ID_6621;
ID_6623 = (ID_6622 : -);
ID_6624 = ID_6623, 2;
ID_6625 = (ID_6624 : pow);
ID_6626 = (ID_14 : \(x3329).(\(x3330).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3329 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3330 : *) : +)~_));
ID_6627 = 0, ID_6626;
ID_6628 = (ID_6627 : -);
ID_6629 = 0, ID_6628;
ID_6630 = (ID_6629 : -);
ID_6631 = ID_6630, 2;
ID_6632 = (ID_6631 : pow);
ID_6633 = ID_6625, ID_6632;
ID_6634 = (ID_6633 :> sqrt);
ID_6635 = ID_6634, 0;
ID_6636 = (ID_6635 : <);
ID_6637 = ID_6634, 0.0001f;
ID_6638 = (ID_6637 : max);
ID_6639 = ID_6638, ID_6634;
ID_6640 = ID_6636, ID_6639;
ID_6641 = (ID_6640 : select2);
ID_6642 = ID_6618, ID_6641;
ID_6643 = (ID_6642 : /);
ID_6644 = ID_6643, 0;
ID_6645 = ID_6614, ID_6644;
ID_6646 = (ID_6645 : select2);
ID_6647 = ID_6646, 2;
ID_6648 = (ID_6647 : pow);
ID_6649 = 10, ID_1941;
ID_6650 = (ID_6649 : -);
ID_6651 = 0, ID_6650;
ID_6652 = (ID_6651 : -);
ID_6653 = ID_6652, 2;
ID_6654 = (ID_6653 : pow);
ID_6655 = ID_6654, ID_1954;
ID_6656 = (ID_6655 :> sqrt);
ID_6657 = ID_6656, 0;
ID_6658 = (ID_6657 : ==);
ID_6659 = ID_6658, ID_69;
ID_6660 = (ID_6659 : select2);
ID_6661 = (ID_0 : \(x3331).(\(x3332).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3331 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3332 : *) : +)~_));
ID_6662 = 10, ID_6661;
ID_6663 = (ID_6662 : -);
ID_6664 = 0, ID_6663;
ID_6665 = (ID_6664 : -);
ID_6666 = ID_6665, 2;
ID_6667 = (ID_6666 : pow);
ID_6668 = (ID_14 : \(x3333).(\(x3334).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3333 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3334 : *) : +)~_));
ID_6669 = 0, ID_6668;
ID_6670 = (ID_6669 : -);
ID_6671 = 0, ID_6670;
ID_6672 = (ID_6671 : -);
ID_6673 = ID_6672, 2;
ID_6674 = (ID_6673 : pow);
ID_6675 = ID_6667, ID_6674;
ID_6676 = (ID_6675 :> sqrt);
ID_6677 = ID_6676, 0;
ID_6678 = (ID_6677 : <);
ID_6679 = ID_6676, 0.0001f;
ID_6680 = (ID_6679 : max);
ID_6681 = ID_6680, ID_6676;
ID_6682 = ID_6678, ID_6681;
ID_6683 = (ID_6682 : select2);
ID_6684 = ID_1965, ID_6683;
ID_6685 = (ID_6684 : /);
ID_6686 = ID_6685, 0;
ID_6687 = ID_6660, ID_6686;
ID_6688 = (ID_6687 : select2);
ID_6689 = ID_6688, 2;
ID_6690 = (ID_6689 : pow);
ID_6691 = ID_6648, ID_6690;
ID_6692 = (ID_6691 :> sqrt);
ID_6693 = ID_6692, ID_5020;
ID_6694 = (ID_6693 : *);
ID_6695 = ID_6694, 0;
ID_6696 = (ID_6695 : ==);
ID_6697 = 10, ID_2002;
ID_6698 = (ID_6697 : -);
ID_6699 = 0, ID_6698;
ID_6700 = (ID_6699 : -);
ID_6701 = ID_6700, 2;
ID_6702 = (ID_6701 : pow);
ID_6703 = ID_6702, ID_2015;
ID_6704 = (ID_6703 :> sqrt);
ID_6705 = ID_6704, 0;
ID_6706 = (ID_6705 : ==);
ID_6707 = ID_6706, ID_69;
ID_6708 = (ID_6707 : select2);
ID_6709 = 10, ID_2022;
ID_6710 = (ID_6709 : -);
ID_6711 = 0, ID_6710;
ID_6712 = (ID_6711 : -);
ID_6713 = (ID_0 : \(x3335).(\(x3336).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3335 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3336 : *) : +)~_));
ID_6714 = 10, ID_6713;
ID_6715 = (ID_6714 : -);
ID_6716 = 0, ID_6715;
ID_6717 = (ID_6716 : -);
ID_6718 = ID_6717, 2;
ID_6719 = (ID_6718 : pow);
ID_6720 = (ID_14 : \(x3337).(\(x3338).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3337 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3338 : *) : +)~_));
ID_6721 = 0, ID_6720;
ID_6722 = (ID_6721 : -);
ID_6723 = 0, ID_6722;
ID_6724 = (ID_6723 : -);
ID_6725 = ID_6724, 2;
ID_6726 = (ID_6725 : pow);
ID_6727 = ID_6719, ID_6726;
ID_6728 = (ID_6727 :> sqrt);
ID_6729 = ID_6728, 0;
ID_6730 = (ID_6729 : <);
ID_6731 = ID_6728, 0.0001f;
ID_6732 = (ID_6731 : max);
ID_6733 = ID_6732, ID_6728;
ID_6734 = ID_6730, ID_6733;
ID_6735 = (ID_6734 : select2);
ID_6736 = ID_6712, ID_6735;
ID_6737 = (ID_6736 : /);
ID_6738 = ID_6737, 0;
ID_6739 = ID_6708, ID_6738;
ID_6740 = (ID_6739 : select2);
ID_6741 = ID_5009, ID_6740;
ID_6742 = (ID_6741 : *);
ID_6743 = 10, ID_2057;
ID_6744 = (ID_6743 : -);
ID_6745 = 0, ID_6744;
ID_6746 = (ID_6745 : -);
ID_6747 = ID_6746, 2;
ID_6748 = (ID_6747 : pow);
ID_6749 = ID_6748, ID_2070;
ID_6750 = (ID_6749 :> sqrt);
ID_6751 = ID_6750, 0;
ID_6752 = (ID_6751 : ==);
ID_6753 = ID_6752, ID_69;
ID_6754 = (ID_6753 : select2);
ID_6755 = (ID_0 : \(x3339).(\(x3340).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3339 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3340 : *) : +)~_));
ID_6756 = 10, ID_6755;
ID_6757 = (ID_6756 : -);
ID_6758 = 0, ID_6757;
ID_6759 = (ID_6758 : -);
ID_6760 = ID_6759, 2;
ID_6761 = (ID_6760 : pow);
ID_6762 = (ID_14 : \(x3341).(\(x3342).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3341 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3342 : *) : +)~_));
ID_6763 = 0, ID_6762;
ID_6764 = (ID_6763 : -);
ID_6765 = 0, ID_6764;
ID_6766 = (ID_6765 : -);
ID_6767 = ID_6766, 2;
ID_6768 = (ID_6767 : pow);
ID_6769 = ID_6761, ID_6768;
ID_6770 = (ID_6769 :> sqrt);
ID_6771 = ID_6770, 0;
ID_6772 = (ID_6771 : <);
ID_6773 = ID_6770, 0.0001f;
ID_6774 = (ID_6773 : max);
ID_6775 = ID_6774, ID_6770;
ID_6776 = ID_6772, ID_6775;
ID_6777 = (ID_6776 : select2);
ID_6778 = ID_2081, ID_6777;
ID_6779 = (ID_6778 : /);
ID_6780 = ID_6779, 0;
ID_6781 = ID_6754, ID_6780;
ID_6782 = (ID_6781 : select2);
ID_6783 = ID_5016, ID_6782;
ID_6784 = (ID_6783 : *);
ID_6785 = ID_6742, ID_6784;
ID_6786 = (ID_6785 :> _);
ID_6787 = (ID_0 : \(x3343).(\(x3344).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3343 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3344 : *) : +)~_));
ID_6788 = 10, ID_6787;
ID_6789 = (ID_6788 : -);
ID_6790 = 0, ID_6789;
ID_6791 = (ID_6790 : -);
ID_6792 = ID_6791, 2;
ID_6793 = (ID_6792 : pow);
ID_6794 = (ID_14 : \(x3345).(\(x3346).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3345 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3346 : *) : +)~_));
ID_6795 = 0, ID_6794;
ID_6796 = (ID_6795 : -);
ID_6797 = 0, ID_6796;
ID_6798 = (ID_6797 : -);
ID_6799 = ID_6798, 2;
ID_6800 = (ID_6799 : pow);
ID_6801 = ID_6793, ID_6800;
ID_6802 = (ID_6801 :> sqrt);
ID_6803 = ID_6802, 0;
ID_6804 = (ID_6803 : ==);
ID_6805 = ID_6804, ID_69;
ID_6806 = (ID_6805 : select2);
ID_6807 = (ID_0 : \(x3347).(\(x3348).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3347 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3348 : *) : +)~_));
ID_6808 = 10, ID_6807;
ID_6809 = (ID_6808 : -);
ID_6810 = 0, ID_6809;
ID_6811 = (ID_6810 : -);
ID_6812 = (ID_0 : \(x3349).(\(x3350).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3349 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3350 : *) : +)~_));
ID_6813 = 10, ID_6812;
ID_6814 = (ID_6813 : -);
ID_6815 = 0, ID_6814;
ID_6816 = (ID_6815 : -);
ID_6817 = ID_6816, 2;
ID_6818 = (ID_6817 : pow);
ID_6819 = (ID_14 : \(x3351).(\(x3352).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3351 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3352 : *) : +)~_));
ID_6820 = 0, ID_6819;
ID_6821 = (ID_6820 : -);
ID_6822 = 0, ID_6821;
ID_6823 = (ID_6822 : -);
ID_6824 = ID_6823, 2;
ID_6825 = (ID_6824 : pow);
ID_6826 = ID_6818, ID_6825;
ID_6827 = (ID_6826 :> sqrt);
ID_6828 = ID_6827, 0;
ID_6829 = (ID_6828 : <);
ID_6830 = ID_6827, 0.0001f;
ID_6831 = (ID_6830 : max);
ID_6832 = ID_6831, ID_6827;
ID_6833 = ID_6829, ID_6832;
ID_6834 = (ID_6833 : select2);
ID_6835 = ID_6811, ID_6834;
ID_6836 = (ID_6835 : /);
ID_6837 = ID_6836, 0;
ID_6838 = ID_6806, ID_6837;
ID_6839 = (ID_6838 : select2);
ID_6840 = ID_6839, 2;
ID_6841 = (ID_6840 : pow);
ID_6842 = (ID_0 : \(x3353).(\(x3354).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3353 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3354 : *) : +)~_));
ID_6843 = 10, ID_6842;
ID_6844 = (ID_6843 : -);
ID_6845 = 0, ID_6844;
ID_6846 = (ID_6845 : -);
ID_6847 = ID_6846, 2;
ID_6848 = (ID_6847 : pow);
ID_6849 = (ID_14 : \(x3355).(\(x3356).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3355 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3356 : *) : +)~_));
ID_6850 = 0, ID_6849;
ID_6851 = (ID_6850 : -);
ID_6852 = 0, ID_6851;
ID_6853 = (ID_6852 : -);
ID_6854 = ID_6853, 2;
ID_6855 = (ID_6854 : pow);
ID_6856 = ID_6848, ID_6855;
ID_6857 = (ID_6856 :> sqrt);
ID_6858 = ID_6857, 0;
ID_6859 = (ID_6858 : ==);
ID_6860 = ID_6859, ID_69;
ID_6861 = (ID_6860 : select2);
ID_6862 = (ID_14 : \(x3357).(\(x3358).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3357 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3358 : *) : +)~_));
ID_6863 = 0, ID_6862;
ID_6864 = (ID_6863 : -);
ID_6865 = 0, ID_6864;
ID_6866 = (ID_6865 : -);
ID_6867 = (ID_0 : \(x3359).(\(x3360).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3359 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3360 : *) : +)~_));
ID_6868 = 10, ID_6867;
ID_6869 = (ID_6868 : -);
ID_6870 = 0, ID_6869;
ID_6871 = (ID_6870 : -);
ID_6872 = ID_6871, 2;
ID_6873 = (ID_6872 : pow);
ID_6874 = (ID_14 : \(x3361).(\(x3362).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3361 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3362 : *) : +)~_));
ID_6875 = 0, ID_6874;
ID_6876 = (ID_6875 : -);
ID_6877 = 0, ID_6876;
ID_6878 = (ID_6877 : -);
ID_6879 = ID_6878, 2;
ID_6880 = (ID_6879 : pow);
ID_6881 = ID_6873, ID_6880;
ID_6882 = (ID_6881 :> sqrt);
ID_6883 = ID_6882, 0;
ID_6884 = (ID_6883 : <);
ID_6885 = ID_6882, 0.0001f;
ID_6886 = (ID_6885 : max);
ID_6887 = ID_6886, ID_6882;
ID_6888 = ID_6884, ID_6887;
ID_6889 = (ID_6888 : select2);
ID_6890 = ID_6866, ID_6889;
ID_6891 = (ID_6890 : /);
ID_6892 = ID_6891, 0;
ID_6893 = ID_6861, ID_6892;
ID_6894 = (ID_6893 : select2);
ID_6895 = ID_6894, 2;
ID_6896 = (ID_6895 : pow);
ID_6897 = ID_6841, ID_6896;
ID_6898 = (ID_6897 :> sqrt);
ID_6899 = ID_6898, ID_5020;
ID_6900 = (ID_6899 : *);
ID_6901 = ID_6900, 0;
ID_6902 = (ID_6901 : <);
ID_6903 = ID_6900, 0.0001f;
ID_6904 = (ID_6903 : max);
ID_6905 = ID_6904, ID_6900;
ID_6906 = ID_6902, ID_6905;
ID_6907 = (ID_6906 : select2);
ID_6908 = ID_6786, ID_6907;
ID_6909 = (ID_6908 : /);
ID_6910 = ID_6909, 0;
ID_6911 = ID_6696, ID_6910;
ID_6912 = (ID_6911 : select2);
ID_6913 = ID_6912, 0;
ID_6914 = (ID_6913 : ==);
ID_6915 = (ID_6901 : ==);
ID_6916 = (ID_0 : \(x3363).(\(x3364).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3363 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3364 : *) : +)~_));
ID_6917 = 10, ID_6916;
ID_6918 = (ID_6917 : -);
ID_6919 = 0, ID_6918;
ID_6920 = (ID_6919 : -);
ID_6921 = ID_6920, 2;
ID_6922 = (ID_6921 : pow);
ID_6923 = (ID_14 : \(x3365).(\(x3366).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3365 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3366 : *) : +)~_));
ID_6924 = 0, ID_6923;
ID_6925 = (ID_6924 : -);
ID_6926 = 0, ID_6925;
ID_6927 = (ID_6926 : -);
ID_6928 = ID_6927, 2;
ID_6929 = (ID_6928 : pow);
ID_6930 = ID_6922, ID_6929;
ID_6931 = (ID_6930 :> sqrt);
ID_6932 = ID_6931, 0;
ID_6933 = (ID_6932 : ==);
ID_6934 = ID_6933, ID_69;
ID_6935 = (ID_6934 : select2);
ID_6936 = (ID_0 : \(x3367).(\(x3368).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3367 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3368 : *) : +)~_));
ID_6937 = 10, ID_6936;
ID_6938 = (ID_6937 : -);
ID_6939 = 0, ID_6938;
ID_6940 = (ID_6939 : -);
ID_6941 = (ID_0 : \(x3369).(\(x3370).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3369 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3370 : *) : +)~_));
ID_6942 = 10, ID_6941;
ID_6943 = (ID_6942 : -);
ID_6944 = 0, ID_6943;
ID_6945 = (ID_6944 : -);
ID_6946 = ID_6945, 2;
ID_6947 = (ID_6946 : pow);
ID_6948 = (ID_14 : \(x3371).(\(x3372).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3371 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3372 : *) : +)~_));
ID_6949 = 0, ID_6948;
ID_6950 = (ID_6949 : -);
ID_6951 = 0, ID_6950;
ID_6952 = (ID_6951 : -);
ID_6953 = ID_6952, 2;
ID_6954 = (ID_6953 : pow);
ID_6955 = ID_6947, ID_6954;
ID_6956 = (ID_6955 :> sqrt);
ID_6957 = ID_6956, 0;
ID_6958 = (ID_6957 : <);
ID_6959 = ID_6956, 0.0001f;
ID_6960 = (ID_6959 : max);
ID_6961 = ID_6960, ID_6956;
ID_6962 = ID_6958, ID_6961;
ID_6963 = (ID_6962 : select2);
ID_6964 = ID_6940, ID_6963;
ID_6965 = (ID_6964 : /);
ID_6966 = ID_6965, 0;
ID_6967 = ID_6935, ID_6966;
ID_6968 = (ID_6967 : select2);
ID_6969 = ID_5009, ID_6968;
ID_6970 = (ID_6969 : *);
ID_6971 = (ID_0 : \(x3373).(\(x3374).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3373 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3374 : *) : +)~_));
ID_6972 = 10, ID_6971;
ID_6973 = (ID_6972 : -);
ID_6974 = 0, ID_6973;
ID_6975 = (ID_6974 : -);
ID_6976 = ID_6975, 2;
ID_6977 = (ID_6976 : pow);
ID_6978 = (ID_14 : \(x3375).(\(x3376).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3375 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3376 : *) : +)~_));
ID_6979 = 0, ID_6978;
ID_6980 = (ID_6979 : -);
ID_6981 = 0, ID_6980;
ID_6982 = (ID_6981 : -);
ID_6983 = ID_6982, 2;
ID_6984 = (ID_6983 : pow);
ID_6985 = ID_6977, ID_6984;
ID_6986 = (ID_6985 :> sqrt);
ID_6987 = ID_6986, 0;
ID_6988 = (ID_6987 : ==);
ID_6989 = ID_6988, ID_69;
ID_6990 = (ID_6989 : select2);
ID_6991 = (ID_14 : \(x3377).(\(x3378).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3377 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3378 : *) : +)~_));
ID_6992 = 0, ID_6991;
ID_6993 = (ID_6992 : -);
ID_6994 = 0, ID_6993;
ID_6995 = (ID_6994 : -);
ID_6996 = (ID_0 : \(x3379).(\(x3380).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3379 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3380 : *) : +)~_));
ID_6997 = 10, ID_6996;
ID_6998 = (ID_6997 : -);
ID_6999 = 0, ID_6998;
ID_7000 = (ID_6999 : -);
ID_7001 = ID_7000, 2;
ID_7002 = (ID_7001 : pow);
ID_7003 = (ID_14 : \(x3381).(\(x3382).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3381 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3382 : *) : +)~_));
ID_7004 = 0, ID_7003;
ID_7005 = (ID_7004 : -);
ID_7006 = 0, ID_7005;
ID_7007 = (ID_7006 : -);
ID_7008 = ID_7007, 2;
ID_7009 = (ID_7008 : pow);
ID_7010 = ID_7002, ID_7009;
ID_7011 = (ID_7010 :> sqrt);
ID_7012 = ID_7011, 0;
ID_7013 = (ID_7012 : <);
ID_7014 = ID_7011, 0.0001f;
ID_7015 = (ID_7014 : max);
ID_7016 = ID_7015, ID_7011;
ID_7017 = ID_7013, ID_7016;
ID_7018 = (ID_7017 : select2);
ID_7019 = ID_6995, ID_7018;
ID_7020 = (ID_7019 : /);
ID_7021 = ID_7020, 0;
ID_7022 = ID_6990, ID_7021;
ID_7023 = (ID_7022 : select2);
ID_7024 = ID_5016, ID_7023;
ID_7025 = (ID_7024 : *);
ID_7026 = ID_6970, ID_7025;
ID_7027 = (ID_7026 :> _);
ID_7028 = (ID_0 : \(x3383).(\(x3384).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3383 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3384 : *) : +)~_));
ID_7029 = 10, ID_7028;
ID_7030 = (ID_7029 : -);
ID_7031 = 0, ID_7030;
ID_7032 = (ID_7031 : -);
ID_7033 = ID_7032, 2;
ID_7034 = (ID_7033 : pow);
ID_7035 = (ID_14 : \(x3385).(\(x3386).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3385 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3386 : *) : +)~_));
ID_7036 = 0, ID_7035;
ID_7037 = (ID_7036 : -);
ID_7038 = 0, ID_7037;
ID_7039 = (ID_7038 : -);
ID_7040 = ID_7039, 2;
ID_7041 = (ID_7040 : pow);
ID_7042 = ID_7034, ID_7041;
ID_7043 = (ID_7042 :> sqrt);
ID_7044 = ID_7043, 0;
ID_7045 = (ID_7044 : ==);
ID_7046 = ID_7045, ID_69;
ID_7047 = (ID_7046 : select2);
ID_7048 = (ID_0 : \(x3387).(\(x3388).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3387 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3388 : *) : +)~_));
ID_7049 = 10, ID_7048;
ID_7050 = (ID_7049 : -);
ID_7051 = 0, ID_7050;
ID_7052 = (ID_7051 : -);
ID_7053 = (ID_0 : \(x3389).(\(x3390).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3389 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3390 : *) : +)~_));
ID_7054 = 10, ID_7053;
ID_7055 = (ID_7054 : -);
ID_7056 = 0, ID_7055;
ID_7057 = (ID_7056 : -);
ID_7058 = ID_7057, 2;
ID_7059 = (ID_7058 : pow);
ID_7060 = (ID_14 : \(x3391).(\(x3392).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3391 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3392 : *) : +)~_));
ID_7061 = 0, ID_7060;
ID_7062 = (ID_7061 : -);
ID_7063 = 0, ID_7062;
ID_7064 = (ID_7063 : -);
ID_7065 = ID_7064, 2;
ID_7066 = (ID_7065 : pow);
ID_7067 = ID_7059, ID_7066;
ID_7068 = (ID_7067 :> sqrt);
ID_7069 = ID_7068, 0;
ID_7070 = (ID_7069 : <);
ID_7071 = ID_7068, 0.0001f;
ID_7072 = (ID_7071 : max);
ID_7073 = ID_7072, ID_7068;
ID_7074 = ID_7070, ID_7073;
ID_7075 = (ID_7074 : select2);
ID_7076 = ID_7052, ID_7075;
ID_7077 = (ID_7076 : /);
ID_7078 = ID_7077, 0;
ID_7079 = ID_7047, ID_7078;
ID_7080 = (ID_7079 : select2);
ID_7081 = ID_7080, 2;
ID_7082 = (ID_7081 : pow);
ID_7083 = (ID_0 : \(x3393).(\(x3394).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3393 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3394 : *) : +)~_));
ID_7084 = 10, ID_7083;
ID_7085 = (ID_7084 : -);
ID_7086 = 0, ID_7085;
ID_7087 = (ID_7086 : -);
ID_7088 = ID_7087, 2;
ID_7089 = (ID_7088 : pow);
ID_7090 = (ID_14 : \(x3395).(\(x3396).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3395 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3396 : *) : +)~_));
ID_7091 = 0, ID_7090;
ID_7092 = (ID_7091 : -);
ID_7093 = 0, ID_7092;
ID_7094 = (ID_7093 : -);
ID_7095 = ID_7094, 2;
ID_7096 = (ID_7095 : pow);
ID_7097 = ID_7089, ID_7096;
ID_7098 = (ID_7097 :> sqrt);
ID_7099 = ID_7098, 0;
ID_7100 = (ID_7099 : ==);
ID_7101 = ID_7100, ID_69;
ID_7102 = (ID_7101 : select2);
ID_7103 = (ID_14 : \(x3397).(\(x3398).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3397 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3398 : *) : +)~_));
ID_7104 = 0, ID_7103;
ID_7105 = (ID_7104 : -);
ID_7106 = 0, ID_7105;
ID_7107 = (ID_7106 : -);
ID_7108 = (ID_0 : \(x3399).(\(x3400).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3399 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3400 : *) : +)~_));
ID_7109 = 10, ID_7108;
ID_7110 = (ID_7109 : -);
ID_7111 = 0, ID_7110;
ID_7112 = (ID_7111 : -);
ID_7113 = ID_7112, 2;
ID_7114 = (ID_7113 : pow);
ID_7115 = (ID_14 : \(x3401).(\(x3402).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3401 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3402 : *) : +)~_));
ID_7116 = 0, ID_7115;
ID_7117 = (ID_7116 : -);
ID_7118 = 0, ID_7117;
ID_7119 = (ID_7118 : -);
ID_7120 = ID_7119, 2;
ID_7121 = (ID_7120 : pow);
ID_7122 = ID_7114, ID_7121;
ID_7123 = (ID_7122 :> sqrt);
ID_7124 = ID_7123, 0;
ID_7125 = (ID_7124 : <);
ID_7126 = ID_7123, 0.0001f;
ID_7127 = (ID_7126 : max);
ID_7128 = ID_7127, ID_7123;
ID_7129 = ID_7125, ID_7128;
ID_7130 = (ID_7129 : select2);
ID_7131 = ID_7107, ID_7130;
ID_7132 = (ID_7131 : /);
ID_7133 = ID_7132, 0;
ID_7134 = ID_7102, ID_7133;
ID_7135 = (ID_7134 : select2);
ID_7136 = ID_7135, 2;
ID_7137 = (ID_7136 : pow);
ID_7138 = ID_7082, ID_7137;
ID_7139 = (ID_7138 :> sqrt);
ID_7140 = ID_7139, ID_5020;
ID_7141 = (ID_7140 : *);
ID_7142 = ID_7141, 0;
ID_7143 = (ID_7142 : <);
ID_7144 = ID_7141, 0.0001f;
ID_7145 = (ID_7144 : max);
ID_7146 = ID_7145, ID_7141;
ID_7147 = ID_7143, ID_7146;
ID_7148 = (ID_7147 : select2);
ID_7149 = ID_7027, ID_7148;
ID_7150 = (ID_7149 : /);
ID_7151 = ID_7150, 0;
ID_7152 = ID_6915, ID_7151;
ID_7153 = (ID_7152 : select2);
ID_7154 = ID_7153, 0;
ID_7155 = (ID_7154 : <);
ID_7156 = ID_7153, 0.0001f;
ID_7157 = (ID_7156 : max);
ID_7158 = ID_7157, ID_7153;
ID_7159 = ID_7155, ID_7158;
ID_7160 = ID_7159 : select2;
ID_7161 = (ID_7160 : acos);
ID_7162 = ID_7161, 0;
ID_7163 = ID_6914, ID_7162;
ID_7164 = (ID_7163 : select2);
ID_7165 = ID_6602, ID_7164;
ID_7166 = ID_7165 : *;
ID_7167 = (ID_7166 : cos);
ID_7168 = ID_6594, ID_7167;
ID_7169 = (ID_7168 : *);
ID_7170 = _, ID_7169;
ID_7171 = (ID_7170 : *);
ID_7172 = ID_6593, ID_7171;
ID_7173 = ID_6058, ID_7172;
ID_7174 = ID_37, ID_7173;
ID_7175 = _ <: ID_7174;
ID_7176 = ID_7175 : \(x5470).(\(x5471).(\(x5472).(\(x5473).(((((x5470,x5471 : +),x5472 : +),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : -),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : +),x5473 : -),2 : /),((((x5470,x5471 : +),x5472 : -),x5473 : -),2 : /)))));
ID_7177 = \(x5475).(x5475,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),(0,(((((((hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),10 : -),2 : pow),(((hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : +),(((hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : + : sqrt),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),340 : /) : max) : min) : @) : ID_7176;
ID_7178 = (ID_4881 : ID_7177);
ID_7179 = ID_7, 3.6f;
ID_7180 = (ID_7179 : -);
ID_7181 = ID_7180, 2;
ID_7182 = (ID_7181 : pow);
ID_7183 = ID_2509, ID_7182;
ID_7184 = (ID_7183 : +);
ID_7185 = ID_7184, ID_19;
ID_7186 = ID_7185 : +;
ID_7187 = (ID_7186 : sqrt);
ID_7188 = ID_7187, 1;
ID_7189 = ID_7188 : max;
ID_7190 = (ID_7189 : log10);
ID_7191 = 11, ID_7190;
ID_7192 = (ID_7191 : *);
ID_7193 = 0, ID_7192;
ID_7194 = (ID_7193 : -);
ID_7195 = ID_7194, 2e+01f;
ID_7196 = (ID_7195 : /);
ID_7197 = 1e+01f, ID_7196;
ID_7198 = (ID_7197 : pow);
ID_7199 = _, ID_7198;
ID_7200 = ID_7199 : *;
ID_7201 = ID_38, 3.6f;
ID_7202 = (ID_7201 : *);
ID_7203 = ID_7202, ID_2535;
ID_7204 = (ID_7203 : -);
ID_7205 = ID_7204, 0;
ID_7206 = (ID_7205 : <);
ID_7207 = ID_7206, ID_48;
ID_7208 = (ID_7207 : select2);
ID_7209 = 3.6f, ID_58;
ID_7210 = (ID_7209 : -);
ID_7211 = 0, ID_7210;
ID_7212 = (ID_7211 : -);
ID_7213 = ID_7212, 2;
ID_7214 = (ID_7213 : pow);
ID_7215 = ID_2547, ID_7214;
ID_7216 = (ID_7215 :> sqrt);
ID_7217 = ID_7216, 0;
ID_7218 = (ID_7217 : ==);
ID_7219 = ID_7218, ID_69;
ID_7220 = (ID_7219 : select2);
ID_7221 = (ID_0 : \(x3979).(\(x3980).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3979 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3980 : *) : +)~_));
ID_7222 = 9.3f, ID_7221;
ID_7223 = (ID_7222 : -);
ID_7224 = 0, ID_7223;
ID_7225 = (ID_7224 : -);
ID_7226 = ID_7225, 2;
ID_7227 = (ID_7226 : pow);
ID_7228 = (ID_6 : \(x3981).(\(x3982).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3981 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3982 : *) : +)~_));
ID_7229 = 3.6f, ID_7228;
ID_7230 = (ID_7229 : -);
ID_7231 = 0, ID_7230;
ID_7232 = (ID_7231 : -);
ID_7233 = ID_7232, 2;
ID_7234 = (ID_7233 : pow);
ID_7235 = ID_7227, ID_7234;
ID_7236 = (ID_7235 :> sqrt);
ID_7237 = ID_7236, 0;
ID_7238 = (ID_7237 : <);
ID_7239 = ID_7236, 0.0001f;
ID_7240 = (ID_7239 : max);
ID_7241 = ID_7240, ID_7236;
ID_7242 = ID_7238, ID_7241;
ID_7243 = (ID_7242 : select2);
ID_7244 = ID_2563, ID_7243;
ID_7245 = (ID_7244 : /);
ID_7246 = ID_7245, 0;
ID_7247 = ID_7220, ID_7246;
ID_7248 = (ID_7247 : select2);
ID_7249 = ID_7248, 2;
ID_7250 = (ID_7249 : pow);
ID_7251 = 3.6f, ID_114;
ID_7252 = (ID_7251 : -);
ID_7253 = 0, ID_7252;
ID_7254 = (ID_7253 : -);
ID_7255 = ID_7254, 2;
ID_7256 = (ID_7255 : pow);
ID_7257 = ID_2599, ID_7256;
ID_7258 = (ID_7257 :> sqrt);
ID_7259 = ID_7258, 0;
ID_7260 = (ID_7259 : ==);
ID_7261 = ID_7260, ID_69;
ID_7262 = (ID_7261 : select2);
ID_7263 = 3.6f, ID_127;
ID_7264 = (ID_7263 : -);
ID_7265 = 0, ID_7264;
ID_7266 = (ID_7265 : -);
ID_7267 = (ID_0 : \(x3983).(\(x3984).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3983 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3984 : *) : +)~_));
ID_7268 = 9.3f, ID_7267;
ID_7269 = (ID_7268 : -);
ID_7270 = 0, ID_7269;
ID_7271 = (ID_7270 : -);
ID_7272 = ID_7271, 2;
ID_7273 = (ID_7272 : pow);
ID_7274 = (ID_6 : \(x3985).(\(x3986).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3985 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3986 : *) : +)~_));
ID_7275 = 3.6f, ID_7274;
ID_7276 = (ID_7275 : -);
ID_7277 = 0, ID_7276;
ID_7278 = (ID_7277 : -);
ID_7279 = ID_7278, 2;
ID_7280 = (ID_7279 : pow);
ID_7281 = ID_7273, ID_7280;
ID_7282 = (ID_7281 :> sqrt);
ID_7283 = ID_7282, 0;
ID_7284 = (ID_7283 : <);
ID_7285 = ID_7282, 0.0001f;
ID_7286 = (ID_7285 : max);
ID_7287 = ID_7286, ID_7282;
ID_7288 = ID_7284, ID_7287;
ID_7289 = (ID_7288 : select2);
ID_7290 = ID_7266, ID_7289;
ID_7291 = (ID_7290 : /);
ID_7292 = ID_7291, 0;
ID_7293 = ID_7262, ID_7292;
ID_7294 = (ID_7293 : select2);
ID_7295 = ID_7294, 2;
ID_7296 = (ID_7295 : pow);
ID_7297 = ID_7250, ID_7296;
ID_7298 = (ID_7297 :> sqrt);
ID_7299 = 3.6f, ID_2656;
ID_7300 = (ID_7299 : /);
ID_7301 = ID_7300, 0;
ID_7302 = ID_2653, ID_7301;
ID_7303 = (ID_7302 : select2);
ID_7304 = ID_7303, 2;
ID_7305 = (ID_7304 : pow);
ID_7306 = ID_2663, ID_7305;
ID_7307 = (ID_7306 :> sqrt);
ID_7308 = ID_7298, ID_7307;
ID_7309 = (ID_7308 : *);
ID_7310 = ID_7309, 0;
ID_7311 = (ID_7310 : ==);
ID_7312 = 3.6f, ID_200;
ID_7313 = (ID_7312 : -);
ID_7314 = 0, ID_7313;
ID_7315 = (ID_7314 : -);
ID_7316 = ID_7315, 2;
ID_7317 = (ID_7316 : pow);
ID_7318 = ID_2682, ID_7317;
ID_7319 = (ID_7318 :> sqrt);
ID_7320 = ID_7319, 0;
ID_7321 = (ID_7320 : ==);
ID_7322 = ID_7321, ID_69;
ID_7323 = (ID_7322 : select2);
ID_7324 = (ID_0 : \(x3987).(\(x3988).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3987 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3988 : *) : +)~_));
ID_7325 = 9.3f, ID_7324;
ID_7326 = (ID_7325 : -);
ID_7327 = 0, ID_7326;
ID_7328 = (ID_7327 : -);
ID_7329 = ID_7328, 2;
ID_7330 = (ID_7329 : pow);
ID_7331 = (ID_6 : \(x3989).(\(x3990).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3989 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3990 : *) : +)~_));
ID_7332 = 3.6f, ID_7331;
ID_7333 = (ID_7332 : -);
ID_7334 = 0, ID_7333;
ID_7335 = (ID_7334 : -);
ID_7336 = ID_7335, 2;
ID_7337 = (ID_7336 : pow);
ID_7338 = ID_7330, ID_7337;
ID_7339 = (ID_7338 :> sqrt);
ID_7340 = ID_7339, 0;
ID_7341 = (ID_7340 : <);
ID_7342 = ID_7339, 0.0001f;
ID_7343 = (ID_7342 : max);
ID_7344 = ID_7343, ID_7339;
ID_7345 = ID_7341, ID_7344;
ID_7346 = (ID_7345 : select2);
ID_7347 = ID_2698, ID_7346;
ID_7348 = (ID_7347 : /);
ID_7349 = ID_7348, 0;
ID_7350 = ID_7323, ID_7349;
ID_7351 = (ID_7350 : select2);
ID_7352 = ID_2661, ID_7351;
ID_7353 = (ID_7352 : *);
ID_7354 = 3.6f, ID_255;
ID_7355 = (ID_7354 : -);
ID_7356 = 0, ID_7355;
ID_7357 = (ID_7356 : -);
ID_7358 = ID_7357, 2;
ID_7359 = (ID_7358 : pow);
ID_7360 = ID_2734, ID_7359;
ID_7361 = (ID_7360 :> sqrt);
ID_7362 = ID_7361, 0;
ID_7363 = (ID_7362 : ==);
ID_7364 = ID_7363, ID_69;
ID_7365 = (ID_7364 : select2);
ID_7366 = 3.6f, ID_268;
ID_7367 = (ID_7366 : -);
ID_7368 = 0, ID_7367;
ID_7369 = (ID_7368 : -);
ID_7370 = (ID_0 : \(x3991).(\(x3992).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3991 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3992 : *) : +)~_));
ID_7371 = 9.3f, ID_7370;
ID_7372 = (ID_7371 : -);
ID_7373 = 0, ID_7372;
ID_7374 = (ID_7373 : -);
ID_7375 = ID_7374, 2;
ID_7376 = (ID_7375 : pow);
ID_7377 = (ID_6 : \(x3993).(\(x3994).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3993 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3994 : *) : +)~_));
ID_7378 = 3.6f, ID_7377;
ID_7379 = (ID_7378 : -);
ID_7380 = 0, ID_7379;
ID_7381 = (ID_7380 : -);
ID_7382 = ID_7381, 2;
ID_7383 = (ID_7382 : pow);
ID_7384 = ID_7376, ID_7383;
ID_7385 = (ID_7384 :> sqrt);
ID_7386 = ID_7385, 0;
ID_7387 = (ID_7386 : <);
ID_7388 = ID_7385, 0.0001f;
ID_7389 = (ID_7388 : max);
ID_7390 = ID_7389, ID_7385;
ID_7391 = ID_7387, ID_7390;
ID_7392 = (ID_7391 : select2);
ID_7393 = ID_7369, ID_7392;
ID_7394 = (ID_7393 : /);
ID_7395 = ID_7394, 0;
ID_7396 = ID_7365, ID_7395;
ID_7397 = (ID_7396 : select2);
ID_7398 = ID_7303, ID_7397;
ID_7399 = (ID_7398 : *);
ID_7400 = ID_7353, ID_7399;
ID_7401 = (ID_7400 :> _);
ID_7402 = (ID_0 : \(x3995).(\(x3996).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3995 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3996 : *) : +)~_));
ID_7403 = 9.3f, ID_7402;
ID_7404 = (ID_7403 : -);
ID_7405 = 0, ID_7404;
ID_7406 = (ID_7405 : -);
ID_7407 = ID_7406, 2;
ID_7408 = (ID_7407 : pow);
ID_7409 = (ID_6 : \(x3997).(\(x3998).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3997 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x3998 : *) : +)~_));
ID_7410 = 3.6f, ID_7409;
ID_7411 = (ID_7410 : -);
ID_7412 = 0, ID_7411;
ID_7413 = (ID_7412 : -);
ID_7414 = ID_7413, 2;
ID_7415 = (ID_7414 : pow);
ID_7416 = ID_7408, ID_7415;
ID_7417 = (ID_7416 :> sqrt);
ID_7418 = ID_7417, 0;
ID_7419 = (ID_7418 : ==);
ID_7420 = ID_7419, ID_69;
ID_7421 = (ID_7420 : select2);
ID_7422 = (ID_0 : \(x3999).(\(x4000).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x3999 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4000 : *) : +)~_));
ID_7423 = 9.3f, ID_7422;
ID_7424 = (ID_7423 : -);
ID_7425 = 0, ID_7424;
ID_7426 = (ID_7425 : -);
ID_7427 = (ID_0 : \(x4001).(\(x4002).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4001 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4002 : *) : +)~_));
ID_7428 = 9.3f, ID_7427;
ID_7429 = (ID_7428 : -);
ID_7430 = 0, ID_7429;
ID_7431 = (ID_7430 : -);
ID_7432 = ID_7431, 2;
ID_7433 = (ID_7432 : pow);
ID_7434 = (ID_6 : \(x4003).(\(x4004).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4003 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4004 : *) : +)~_));
ID_7435 = 3.6f, ID_7434;
ID_7436 = (ID_7435 : -);
ID_7437 = 0, ID_7436;
ID_7438 = (ID_7437 : -);
ID_7439 = ID_7438, 2;
ID_7440 = (ID_7439 : pow);
ID_7441 = ID_7433, ID_7440;
ID_7442 = (ID_7441 :> sqrt);
ID_7443 = ID_7442, 0;
ID_7444 = (ID_7443 : <);
ID_7445 = ID_7442, 0.0001f;
ID_7446 = (ID_7445 : max);
ID_7447 = ID_7446, ID_7442;
ID_7448 = ID_7444, ID_7447;
ID_7449 = (ID_7448 : select2);
ID_7450 = ID_7426, ID_7449;
ID_7451 = (ID_7450 : /);
ID_7452 = ID_7451, 0;
ID_7453 = ID_7421, ID_7452;
ID_7454 = (ID_7453 : select2);
ID_7455 = ID_7454, 2;
ID_7456 = (ID_7455 : pow);
ID_7457 = (ID_0 : \(x4005).(\(x4006).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4005 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4006 : *) : +)~_));
ID_7458 = 9.3f, ID_7457;
ID_7459 = (ID_7458 : -);
ID_7460 = 0, ID_7459;
ID_7461 = (ID_7460 : -);
ID_7462 = ID_7461, 2;
ID_7463 = (ID_7462 : pow);
ID_7464 = (ID_6 : \(x4007).(\(x4008).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4007 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4008 : *) : +)~_));
ID_7465 = 3.6f, ID_7464;
ID_7466 = (ID_7465 : -);
ID_7467 = 0, ID_7466;
ID_7468 = (ID_7467 : -);
ID_7469 = ID_7468, 2;
ID_7470 = (ID_7469 : pow);
ID_7471 = ID_7463, ID_7470;
ID_7472 = (ID_7471 :> sqrt);
ID_7473 = ID_7472, 0;
ID_7474 = (ID_7473 : ==);
ID_7475 = ID_7474, ID_69;
ID_7476 = (ID_7475 : select2);
ID_7477 = (ID_6 : \(x4009).(\(x4010).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4009 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4010 : *) : +)~_));
ID_7478 = 3.6f, ID_7477;
ID_7479 = (ID_7478 : -);
ID_7480 = 0, ID_7479;
ID_7481 = (ID_7480 : -);
ID_7482 = (ID_0 : \(x4011).(\(x4012).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4011 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4012 : *) : +)~_));
ID_7483 = 9.3f, ID_7482;
ID_7484 = (ID_7483 : -);
ID_7485 = 0, ID_7484;
ID_7486 = (ID_7485 : -);
ID_7487 = ID_7486, 2;
ID_7488 = (ID_7487 : pow);
ID_7489 = (ID_6 : \(x4013).(\(x4014).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4013 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4014 : *) : +)~_));
ID_7490 = 3.6f, ID_7489;
ID_7491 = (ID_7490 : -);
ID_7492 = 0, ID_7491;
ID_7493 = (ID_7492 : -);
ID_7494 = ID_7493, 2;
ID_7495 = (ID_7494 : pow);
ID_7496 = ID_7488, ID_7495;
ID_7497 = (ID_7496 :> sqrt);
ID_7498 = ID_7497, 0;
ID_7499 = (ID_7498 : <);
ID_7500 = ID_7497, 0.0001f;
ID_7501 = (ID_7500 : max);
ID_7502 = ID_7501, ID_7497;
ID_7503 = ID_7499, ID_7502;
ID_7504 = (ID_7503 : select2);
ID_7505 = ID_7481, ID_7504;
ID_7506 = (ID_7505 : /);
ID_7507 = ID_7506, 0;
ID_7508 = ID_7476, ID_7507;
ID_7509 = (ID_7508 : select2);
ID_7510 = ID_7509, 2;
ID_7511 = (ID_7510 : pow);
ID_7512 = ID_7456, ID_7511;
ID_7513 = (ID_7512 :> sqrt);
ID_7514 = ID_7513, ID_7307;
ID_7515 = (ID_7514 : *);
ID_7516 = ID_7515, 0;
ID_7517 = (ID_7516 : <);
ID_7518 = ID_7515, 0.0001f;
ID_7519 = (ID_7518 : max);
ID_7520 = ID_7519, ID_7515;
ID_7521 = ID_7517, ID_7520;
ID_7522 = (ID_7521 : select2);
ID_7523 = ID_7401, ID_7522;
ID_7524 = (ID_7523 : /);
ID_7525 = ID_7524, 0;
ID_7526 = ID_7311, ID_7525;
ID_7527 = (ID_7526 : select2);
ID_7528 = ID_7527, 0;
ID_7529 = (ID_7528 : ==);
ID_7530 = (ID_7516 : ==);
ID_7531 = (ID_0 : \(x4015).(\(x4016).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4015 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4016 : *) : +)~_));
ID_7532 = 9.3f, ID_7531;
ID_7533 = (ID_7532 : -);
ID_7534 = 0, ID_7533;
ID_7535 = (ID_7534 : -);
ID_7536 = ID_7535, 2;
ID_7537 = (ID_7536 : pow);
ID_7538 = (ID_6 : \(x4017).(\(x4018).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4017 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4018 : *) : +)~_));
ID_7539 = 3.6f, ID_7538;
ID_7540 = (ID_7539 : -);
ID_7541 = 0, ID_7540;
ID_7542 = (ID_7541 : -);
ID_7543 = ID_7542, 2;
ID_7544 = (ID_7543 : pow);
ID_7545 = ID_7537, ID_7544;
ID_7546 = (ID_7545 :> sqrt);
ID_7547 = ID_7546, 0;
ID_7548 = (ID_7547 : ==);
ID_7549 = ID_7548, ID_69;
ID_7550 = (ID_7549 : select2);
ID_7551 = (ID_0 : \(x4019).(\(x4020).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4019 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4020 : *) : +)~_));
ID_7552 = 9.3f, ID_7551;
ID_7553 = (ID_7552 : -);
ID_7554 = 0, ID_7553;
ID_7555 = (ID_7554 : -);
ID_7556 = (ID_0 : \(x4021).(\(x4022).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4021 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4022 : *) : +)~_));
ID_7557 = 9.3f, ID_7556;
ID_7558 = (ID_7557 : -);
ID_7559 = 0, ID_7558;
ID_7560 = (ID_7559 : -);
ID_7561 = ID_7560, 2;
ID_7562 = (ID_7561 : pow);
ID_7563 = (ID_6 : \(x4023).(\(x4024).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4023 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4024 : *) : +)~_));
ID_7564 = 3.6f, ID_7563;
ID_7565 = (ID_7564 : -);
ID_7566 = 0, ID_7565;
ID_7567 = (ID_7566 : -);
ID_7568 = ID_7567, 2;
ID_7569 = (ID_7568 : pow);
ID_7570 = ID_7562, ID_7569;
ID_7571 = (ID_7570 :> sqrt);
ID_7572 = ID_7571, 0;
ID_7573 = (ID_7572 : <);
ID_7574 = ID_7571, 0.0001f;
ID_7575 = (ID_7574 : max);
ID_7576 = ID_7575, ID_7571;
ID_7577 = ID_7573, ID_7576;
ID_7578 = (ID_7577 : select2);
ID_7579 = ID_7555, ID_7578;
ID_7580 = (ID_7579 : /);
ID_7581 = ID_7580, 0;
ID_7582 = ID_7550, ID_7581;
ID_7583 = (ID_7582 : select2);
ID_7584 = ID_2661, ID_7583;
ID_7585 = (ID_7584 : *);
ID_7586 = (ID_0 : \(x4025).(\(x4026).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4025 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4026 : *) : +)~_));
ID_7587 = 9.3f, ID_7586;
ID_7588 = (ID_7587 : -);
ID_7589 = 0, ID_7588;
ID_7590 = (ID_7589 : -);
ID_7591 = ID_7590, 2;
ID_7592 = (ID_7591 : pow);
ID_7593 = (ID_6 : \(x4027).(\(x4028).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4027 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4028 : *) : +)~_));
ID_7594 = 3.6f, ID_7593;
ID_7595 = (ID_7594 : -);
ID_7596 = 0, ID_7595;
ID_7597 = (ID_7596 : -);
ID_7598 = ID_7597, 2;
ID_7599 = (ID_7598 : pow);
ID_7600 = ID_7592, ID_7599;
ID_7601 = (ID_7600 :> sqrt);
ID_7602 = ID_7601, 0;
ID_7603 = (ID_7602 : ==);
ID_7604 = ID_7603, ID_69;
ID_7605 = (ID_7604 : select2);
ID_7606 = (ID_6 : \(x4029).(\(x4030).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4029 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4030 : *) : +)~_));
ID_7607 = 3.6f, ID_7606;
ID_7608 = (ID_7607 : -);
ID_7609 = 0, ID_7608;
ID_7610 = (ID_7609 : -);
ID_7611 = (ID_0 : \(x4031).(\(x4032).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4031 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4032 : *) : +)~_));
ID_7612 = 9.3f, ID_7611;
ID_7613 = (ID_7612 : -);
ID_7614 = 0, ID_7613;
ID_7615 = (ID_7614 : -);
ID_7616 = ID_7615, 2;
ID_7617 = (ID_7616 : pow);
ID_7618 = (ID_6 : \(x4033).(\(x4034).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4033 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4034 : *) : +)~_));
ID_7619 = 3.6f, ID_7618;
ID_7620 = (ID_7619 : -);
ID_7621 = 0, ID_7620;
ID_7622 = (ID_7621 : -);
ID_7623 = ID_7622, 2;
ID_7624 = (ID_7623 : pow);
ID_7625 = ID_7617, ID_7624;
ID_7626 = (ID_7625 :> sqrt);
ID_7627 = ID_7626, 0;
ID_7628 = (ID_7627 : <);
ID_7629 = ID_7626, 0.0001f;
ID_7630 = (ID_7629 : max);
ID_7631 = ID_7630, ID_7626;
ID_7632 = ID_7628, ID_7631;
ID_7633 = (ID_7632 : select2);
ID_7634 = ID_7610, ID_7633;
ID_7635 = (ID_7634 : /);
ID_7636 = ID_7635, 0;
ID_7637 = ID_7605, ID_7636;
ID_7638 = (ID_7637 : select2);
ID_7639 = ID_7303, ID_7638;
ID_7640 = (ID_7639 : *);
ID_7641 = ID_7585, ID_7640;
ID_7642 = (ID_7641 :> _);
ID_7643 = (ID_0 : \(x4035).(\(x4036).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4035 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4036 : *) : +)~_));
ID_7644 = 9.3f, ID_7643;
ID_7645 = (ID_7644 : -);
ID_7646 = 0, ID_7645;
ID_7647 = (ID_7646 : -);
ID_7648 = ID_7647, 2;
ID_7649 = (ID_7648 : pow);
ID_7650 = (ID_6 : \(x4037).(\(x4038).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4037 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4038 : *) : +)~_));
ID_7651 = 3.6f, ID_7650;
ID_7652 = (ID_7651 : -);
ID_7653 = 0, ID_7652;
ID_7654 = (ID_7653 : -);
ID_7655 = ID_7654, 2;
ID_7656 = (ID_7655 : pow);
ID_7657 = ID_7649, ID_7656;
ID_7658 = (ID_7657 :> sqrt);
ID_7659 = ID_7658, 0;
ID_7660 = (ID_7659 : ==);
ID_7661 = ID_7660, ID_69;
ID_7662 = (ID_7661 : select2);
ID_7663 = (ID_0 : \(x4039).(\(x4040).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4039 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4040 : *) : +)~_));
ID_7664 = 9.3f, ID_7663;
ID_7665 = (ID_7664 : -);
ID_7666 = 0, ID_7665;
ID_7667 = (ID_7666 : -);
ID_7668 = (ID_0 : \(x4041).(\(x4042).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4041 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4042 : *) : +)~_));
ID_7669 = 9.3f, ID_7668;
ID_7670 = (ID_7669 : -);
ID_7671 = 0, ID_7670;
ID_7672 = (ID_7671 : -);
ID_7673 = ID_7672, 2;
ID_7674 = (ID_7673 : pow);
ID_7675 = (ID_6 : \(x4043).(\(x4044).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4043 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4044 : *) : +)~_));
ID_7676 = 3.6f, ID_7675;
ID_7677 = (ID_7676 : -);
ID_7678 = 0, ID_7677;
ID_7679 = (ID_7678 : -);
ID_7680 = ID_7679, 2;
ID_7681 = (ID_7680 : pow);
ID_7682 = ID_7674, ID_7681;
ID_7683 = (ID_7682 :> sqrt);
ID_7684 = ID_7683, 0;
ID_7685 = (ID_7684 : <);
ID_7686 = ID_7683, 0.0001f;
ID_7687 = (ID_7686 : max);
ID_7688 = ID_7687, ID_7683;
ID_7689 = ID_7685, ID_7688;
ID_7690 = (ID_7689 : select2);
ID_7691 = ID_7667, ID_7690;
ID_7692 = (ID_7691 : /);
ID_7693 = ID_7692, 0;
ID_7694 = ID_7662, ID_7693;
ID_7695 = (ID_7694 : select2);
ID_7696 = ID_7695, 2;
ID_7697 = (ID_7696 : pow);
ID_7698 = (ID_0 : \(x4045).(\(x4046).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4045 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4046 : *) : +)~_));
ID_7699 = 9.3f, ID_7698;
ID_7700 = (ID_7699 : -);
ID_7701 = 0, ID_7700;
ID_7702 = (ID_7701 : -);
ID_7703 = ID_7702, 2;
ID_7704 = (ID_7703 : pow);
ID_7705 = (ID_6 : \(x4047).(\(x4048).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4047 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4048 : *) : +)~_));
ID_7706 = 3.6f, ID_7705;
ID_7707 = (ID_7706 : -);
ID_7708 = 0, ID_7707;
ID_7709 = (ID_7708 : -);
ID_7710 = ID_7709, 2;
ID_7711 = (ID_7710 : pow);
ID_7712 = ID_7704, ID_7711;
ID_7713 = (ID_7712 :> sqrt);
ID_7714 = ID_7713, 0;
ID_7715 = (ID_7714 : ==);
ID_7716 = ID_7715, ID_69;
ID_7717 = (ID_7716 : select2);
ID_7718 = (ID_6 : \(x4049).(\(x4050).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4049 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4050 : *) : +)~_));
ID_7719 = 3.6f, ID_7718;
ID_7720 = (ID_7719 : -);
ID_7721 = 0, ID_7720;
ID_7722 = (ID_7721 : -);
ID_7723 = (ID_0 : \(x4051).(\(x4052).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4051 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4052 : *) : +)~_));
ID_7724 = 9.3f, ID_7723;
ID_7725 = (ID_7724 : -);
ID_7726 = 0, ID_7725;
ID_7727 = (ID_7726 : -);
ID_7728 = ID_7727, 2;
ID_7729 = (ID_7728 : pow);
ID_7730 = (ID_6 : \(x4053).(\(x4054).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4053 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4054 : *) : +)~_));
ID_7731 = 3.6f, ID_7730;
ID_7732 = (ID_7731 : -);
ID_7733 = 0, ID_7732;
ID_7734 = (ID_7733 : -);
ID_7735 = ID_7734, 2;
ID_7736 = (ID_7735 : pow);
ID_7737 = ID_7729, ID_7736;
ID_7738 = (ID_7737 :> sqrt);
ID_7739 = ID_7738, 0;
ID_7740 = (ID_7739 : <);
ID_7741 = ID_7738, 0.0001f;
ID_7742 = (ID_7741 : max);
ID_7743 = ID_7742, ID_7738;
ID_7744 = ID_7740, ID_7743;
ID_7745 = (ID_7744 : select2);
ID_7746 = ID_7722, ID_7745;
ID_7747 = (ID_7746 : /);
ID_7748 = ID_7747, 0;
ID_7749 = ID_7717, ID_7748;
ID_7750 = (ID_7749 : select2);
ID_7751 = ID_7750, 2;
ID_7752 = (ID_7751 : pow);
ID_7753 = ID_7697, ID_7752;
ID_7754 = (ID_7753 :> sqrt);
ID_7755 = ID_7754, ID_7307;
ID_7756 = (ID_7755 : *);
ID_7757 = ID_7756, 0;
ID_7758 = (ID_7757 : <);
ID_7759 = ID_7756, 0.0001f;
ID_7760 = (ID_7759 : max);
ID_7761 = ID_7760, ID_7756;
ID_7762 = ID_7758, ID_7761;
ID_7763 = (ID_7762 : select2);
ID_7764 = ID_7642, ID_7763;
ID_7765 = (ID_7764 : /);
ID_7766 = ID_7765, 0;
ID_7767 = ID_7530, ID_7766;
ID_7768 = (ID_7767 : select2);
ID_7769 = ID_7768, 0;
ID_7770 = (ID_7769 : <);
ID_7771 = ID_7768, 0.0001f;
ID_7772 = (ID_7771 : max);
ID_7773 = ID_7772, ID_7768;
ID_7774 = ID_7770, ID_7773;
ID_7775 = ID_7774 : select2;
ID_7776 = (ID_7775 : acos);
ID_7777 = ID_7776, 0;
ID_7778 = ID_7529, ID_7777;
ID_7779 = (ID_7778 : select2);
ID_7780 = ID_7208, ID_7779;
ID_7781 = (ID_7780 : *);
ID_7782 = ID_7781, 0;
ID_7783 = ID_7782 : +;
ID_7784 = (ID_7783 : sin);
ID_7785 = (ID_0 : \(x4055).(\(x4056).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4055 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4056 : *) : +)~_));
ID_7786 = 9.3f, ID_7785;
ID_7787 = (ID_7786 : -);
ID_7788 = 0, ID_7787;
ID_7789 = (ID_7788 : -);
ID_7790 = ID_7789, 2;
ID_7791 = (ID_7790 : pow);
ID_7792 = (ID_14 : \(x4057).(\(x4058).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4057 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4058 : *) : +)~_));
ID_7793 = 0, ID_7792;
ID_7794 = (ID_7793 : -);
ID_7795 = 0, ID_7794;
ID_7796 = (ID_7795 : -);
ID_7797 = ID_7796, 2;
ID_7798 = (ID_7797 : pow);
ID_7799 = ID_7791, ID_7798;
ID_7800 = (ID_7799 :> sqrt);
ID_7801 = ID_7800, 0;
ID_7802 = (ID_7801 : <);
ID_7803 = ID_7800, 0.0001f;
ID_7804 = (ID_7803 : max);
ID_7805 = ID_7804, ID_7800;
ID_7806 = ID_7802, ID_7805;
ID_7807 = (ID_7806 : select2);
ID_7808 = ID_2563, ID_7807;
ID_7809 = (ID_7808 : /);
ID_7810 = ID_7809, 0;
ID_7811 = ID_3179, ID_7810;
ID_7812 = (ID_7811 : select2);
ID_7813 = ID_7812, 2;
ID_7814 = (ID_7813 : pow);
ID_7815 = (ID_0 : \(x4059).(\(x4060).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4059 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4060 : *) : +)~_));
ID_7816 = 9.3f, ID_7815;
ID_7817 = (ID_7816 : -);
ID_7818 = 0, ID_7817;
ID_7819 = (ID_7818 : -);
ID_7820 = ID_7819, 2;
ID_7821 = (ID_7820 : pow);
ID_7822 = (ID_14 : \(x4061).(\(x4062).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4061 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4062 : *) : +)~_));
ID_7823 = 0, ID_7822;
ID_7824 = (ID_7823 : -);
ID_7825 = 0, ID_7824;
ID_7826 = (ID_7825 : -);
ID_7827 = ID_7826, 2;
ID_7828 = (ID_7827 : pow);
ID_7829 = ID_7821, ID_7828;
ID_7830 = (ID_7829 :> sqrt);
ID_7831 = ID_7830, 0;
ID_7832 = (ID_7831 : <);
ID_7833 = ID_7830, 0.0001f;
ID_7834 = (ID_7833 : max);
ID_7835 = ID_7834, ID_7830;
ID_7836 = ID_7832, ID_7835;
ID_7837 = (ID_7836 : select2);
ID_7838 = ID_760, ID_7837;
ID_7839 = (ID_7838 : /);
ID_7840 = ID_7839, 0;
ID_7841 = ID_3215, ID_7840;
ID_7842 = (ID_7841 : select2);
ID_7843 = ID_7842, 2;
ID_7844 = (ID_7843 : pow);
ID_7845 = ID_7814, ID_7844;
ID_7846 = (ID_7845 :> sqrt);
ID_7847 = ID_7846, ID_3272;
ID_7848 = (ID_7847 : *);
ID_7849 = ID_7848, 0;
ID_7850 = (ID_7849 : ==);
ID_7851 = (ID_0 : \(x4063).(\(x4064).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4063 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4064 : *) : +)~_));
ID_7852 = 9.3f, ID_7851;
ID_7853 = (ID_7852 : -);
ID_7854 = 0, ID_7853;
ID_7855 = (ID_7854 : -);
ID_7856 = ID_7855, 2;
ID_7857 = (ID_7856 : pow);
ID_7858 = (ID_14 : \(x4065).(\(x4066).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4065 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4066 : *) : +)~_));
ID_7859 = 0, ID_7858;
ID_7860 = (ID_7859 : -);
ID_7861 = 0, ID_7860;
ID_7862 = (ID_7861 : -);
ID_7863 = ID_7862, 2;
ID_7864 = (ID_7863 : pow);
ID_7865 = ID_7857, ID_7864;
ID_7866 = (ID_7865 :> sqrt);
ID_7867 = ID_7866, 0;
ID_7868 = (ID_7867 : <);
ID_7869 = ID_7866, 0.0001f;
ID_7870 = (ID_7869 : max);
ID_7871 = ID_7870, ID_7866;
ID_7872 = ID_7868, ID_7871;
ID_7873 = (ID_7872 : select2);
ID_7874 = ID_2698, ID_7873;
ID_7875 = (ID_7874 : /);
ID_7876 = ID_7875, 0;
ID_7877 = ID_3282, ID_7876;
ID_7878 = (ID_7877 : select2);
ID_7879 = ID_3261, ID_7878;
ID_7880 = (ID_7879 : *);
ID_7881 = (ID_0 : \(x4067).(\(x4068).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4067 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4068 : *) : +)~_));
ID_7882 = 9.3f, ID_7881;
ID_7883 = (ID_7882 : -);
ID_7884 = 0, ID_7883;
ID_7885 = (ID_7884 : -);
ID_7886 = ID_7885, 2;
ID_7887 = (ID_7886 : pow);
ID_7888 = (ID_14 : \(x4069).(\(x4070).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4069 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4070 : *) : +)~_));
ID_7889 = 0, ID_7888;
ID_7890 = (ID_7889 : -);
ID_7891 = 0, ID_7890;
ID_7892 = (ID_7891 : -);
ID_7893 = ID_7892, 2;
ID_7894 = (ID_7893 : pow);
ID_7895 = ID_7887, ID_7894;
ID_7896 = (ID_7895 :> sqrt);
ID_7897 = ID_7896, 0;
ID_7898 = (ID_7897 : <);
ID_7899 = ID_7896, 0.0001f;
ID_7900 = (ID_7899 : max);
ID_7901 = ID_7900, ID_7896;
ID_7902 = ID_7898, ID_7901;
ID_7903 = (ID_7902 : select2);
ID_7904 = ID_882, ID_7903;
ID_7905 = (ID_7904 : /);
ID_7906 = ID_7905, 0;
ID_7907 = ID_3318, ID_7906;
ID_7908 = (ID_7907 : select2);
ID_7909 = ID_3268, ID_7908;
ID_7910 = (ID_7909 : *);
ID_7911 = ID_7880, ID_7910;
ID_7912 = (ID_7911 :> _);
ID_7913 = (ID_0 : \(x4071).(\(x4072).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4071 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4072 : *) : +)~_));
ID_7914 = 9.3f, ID_7913;
ID_7915 = (ID_7914 : -);
ID_7916 = 0, ID_7915;
ID_7917 = (ID_7916 : -);
ID_7918 = ID_7917, 2;
ID_7919 = (ID_7918 : pow);
ID_7920 = (ID_14 : \(x4073).(\(x4074).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4073 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4074 : *) : +)~_));
ID_7921 = 0, ID_7920;
ID_7922 = (ID_7921 : -);
ID_7923 = 0, ID_7922;
ID_7924 = (ID_7923 : -);
ID_7925 = ID_7924, 2;
ID_7926 = (ID_7925 : pow);
ID_7927 = ID_7919, ID_7926;
ID_7928 = (ID_7927 :> sqrt);
ID_7929 = ID_7928, 0;
ID_7930 = (ID_7929 : ==);
ID_7931 = ID_7930, ID_69;
ID_7932 = (ID_7931 : select2);
ID_7933 = (ID_0 : \(x4075).(\(x4076).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4075 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4076 : *) : +)~_));
ID_7934 = 9.3f, ID_7933;
ID_7935 = (ID_7934 : -);
ID_7936 = 0, ID_7935;
ID_7937 = (ID_7936 : -);
ID_7938 = (ID_0 : \(x4077).(\(x4078).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4077 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4078 : *) : +)~_));
ID_7939 = 9.3f, ID_7938;
ID_7940 = (ID_7939 : -);
ID_7941 = 0, ID_7940;
ID_7942 = (ID_7941 : -);
ID_7943 = ID_7942, 2;
ID_7944 = (ID_7943 : pow);
ID_7945 = (ID_14 : \(x4079).(\(x4080).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4079 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4080 : *) : +)~_));
ID_7946 = 0, ID_7945;
ID_7947 = (ID_7946 : -);
ID_7948 = 0, ID_7947;
ID_7949 = (ID_7948 : -);
ID_7950 = ID_7949, 2;
ID_7951 = (ID_7950 : pow);
ID_7952 = ID_7944, ID_7951;
ID_7953 = (ID_7952 :> sqrt);
ID_7954 = ID_7953, 0;
ID_7955 = (ID_7954 : <);
ID_7956 = ID_7953, 0.0001f;
ID_7957 = (ID_7956 : max);
ID_7958 = ID_7957, ID_7953;
ID_7959 = ID_7955, ID_7958;
ID_7960 = (ID_7959 : select2);
ID_7961 = ID_7937, ID_7960;
ID_7962 = (ID_7961 : /);
ID_7963 = ID_7962, 0;
ID_7964 = ID_7932, ID_7963;
ID_7965 = (ID_7964 : select2);
ID_7966 = ID_7965, 2;
ID_7967 = (ID_7966 : pow);
ID_7968 = (ID_0 : \(x4081).(\(x4082).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4081 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4082 : *) : +)~_));
ID_7969 = 9.3f, ID_7968;
ID_7970 = (ID_7969 : -);
ID_7971 = 0, ID_7970;
ID_7972 = (ID_7971 : -);
ID_7973 = ID_7972, 2;
ID_7974 = (ID_7973 : pow);
ID_7975 = (ID_14 : \(x4083).(\(x4084).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4083 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4084 : *) : +)~_));
ID_7976 = 0, ID_7975;
ID_7977 = (ID_7976 : -);
ID_7978 = 0, ID_7977;
ID_7979 = (ID_7978 : -);
ID_7980 = ID_7979, 2;
ID_7981 = (ID_7980 : pow);
ID_7982 = ID_7974, ID_7981;
ID_7983 = (ID_7982 :> sqrt);
ID_7984 = ID_7983, 0;
ID_7985 = (ID_7984 : ==);
ID_7986 = ID_7985, ID_69;
ID_7987 = (ID_7986 : select2);
ID_7988 = (ID_14 : \(x4085).(\(x4086).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4085 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4086 : *) : +)~_));
ID_7989 = 0, ID_7988;
ID_7990 = (ID_7989 : -);
ID_7991 = 0, ID_7990;
ID_7992 = (ID_7991 : -);
ID_7993 = (ID_0 : \(x4087).(\(x4088).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4087 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4088 : *) : +)~_));
ID_7994 = 9.3f, ID_7993;
ID_7995 = (ID_7994 : -);
ID_7996 = 0, ID_7995;
ID_7997 = (ID_7996 : -);
ID_7998 = ID_7997, 2;
ID_7999 = (ID_7998 : pow);
ID_8000 = (ID_14 : \(x4089).(\(x4090).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4089 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4090 : *) : +)~_));
ID_8001 = 0, ID_8000;
ID_8002 = (ID_8001 : -);
ID_8003 = 0, ID_8002;
ID_8004 = (ID_8003 : -);
ID_8005 = ID_8004, 2;
ID_8006 = (ID_8005 : pow);
ID_8007 = ID_7999, ID_8006;
ID_8008 = (ID_8007 :> sqrt);
ID_8009 = ID_8008, 0;
ID_8010 = (ID_8009 : <);
ID_8011 = ID_8008, 0.0001f;
ID_8012 = (ID_8011 : max);
ID_8013 = ID_8012, ID_8008;
ID_8014 = ID_8010, ID_8013;
ID_8015 = (ID_8014 : select2);
ID_8016 = ID_7992, ID_8015;
ID_8017 = (ID_8016 : /);
ID_8018 = ID_8017, 0;
ID_8019 = ID_7987, ID_8018;
ID_8020 = (ID_8019 : select2);
ID_8021 = ID_8020, 2;
ID_8022 = (ID_8021 : pow);
ID_8023 = ID_7967, ID_8022;
ID_8024 = (ID_8023 :> sqrt);
ID_8025 = ID_8024, ID_3272;
ID_8026 = (ID_8025 : *);
ID_8027 = ID_8026, 0;
ID_8028 = (ID_8027 : <);
ID_8029 = ID_8026, 0.0001f;
ID_8030 = (ID_8029 : max);
ID_8031 = ID_8030, ID_8026;
ID_8032 = ID_8028, ID_8031;
ID_8033 = (ID_8032 : select2);
ID_8034 = ID_7912, ID_8033;
ID_8035 = (ID_8034 : /);
ID_8036 = ID_8035, 0;
ID_8037 = ID_7850, ID_8036;
ID_8038 = (ID_8037 : select2);
ID_8039 = ID_8038, 0;
ID_8040 = (ID_8039 : ==);
ID_8041 = (ID_8027 : ==);
ID_8042 = (ID_0 : \(x4091).(\(x4092).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4091 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4092 : *) : +)~_));
ID_8043 = 9.3f, ID_8042;
ID_8044 = (ID_8043 : -);
ID_8045 = 0, ID_8044;
ID_8046 = (ID_8045 : -);
ID_8047 = ID_8046, 2;
ID_8048 = (ID_8047 : pow);
ID_8049 = (ID_14 : \(x4093).(\(x4094).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4093 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4094 : *) : +)~_));
ID_8050 = 0, ID_8049;
ID_8051 = (ID_8050 : -);
ID_8052 = 0, ID_8051;
ID_8053 = (ID_8052 : -);
ID_8054 = ID_8053, 2;
ID_8055 = (ID_8054 : pow);
ID_8056 = ID_8048, ID_8055;
ID_8057 = (ID_8056 :> sqrt);
ID_8058 = ID_8057, 0;
ID_8059 = (ID_8058 : ==);
ID_8060 = ID_8059, ID_69;
ID_8061 = (ID_8060 : select2);
ID_8062 = (ID_0 : \(x4095).(\(x4096).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4095 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4096 : *) : +)~_));
ID_8063 = 9.3f, ID_8062;
ID_8064 = (ID_8063 : -);
ID_8065 = 0, ID_8064;
ID_8066 = (ID_8065 : -);
ID_8067 = (ID_0 : \(x4097).(\(x4098).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4097 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4098 : *) : +)~_));
ID_8068 = 9.3f, ID_8067;
ID_8069 = (ID_8068 : -);
ID_8070 = 0, ID_8069;
ID_8071 = (ID_8070 : -);
ID_8072 = ID_8071, 2;
ID_8073 = (ID_8072 : pow);
ID_8074 = (ID_14 : \(x4099).(\(x4100).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4099 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4100 : *) : +)~_));
ID_8075 = 0, ID_8074;
ID_8076 = (ID_8075 : -);
ID_8077 = 0, ID_8076;
ID_8078 = (ID_8077 : -);
ID_8079 = ID_8078, 2;
ID_8080 = (ID_8079 : pow);
ID_8081 = ID_8073, ID_8080;
ID_8082 = (ID_8081 :> sqrt);
ID_8083 = ID_8082, 0;
ID_8084 = (ID_8083 : <);
ID_8085 = ID_8082, 0.0001f;
ID_8086 = (ID_8085 : max);
ID_8087 = ID_8086, ID_8082;
ID_8088 = ID_8084, ID_8087;
ID_8089 = (ID_8088 : select2);
ID_8090 = ID_8066, ID_8089;
ID_8091 = (ID_8090 : /);
ID_8092 = ID_8091, 0;
ID_8093 = ID_8061, ID_8092;
ID_8094 = (ID_8093 : select2);
ID_8095 = ID_3261, ID_8094;
ID_8096 = (ID_8095 : *);
ID_8097 = (ID_0 : \(x4101).(\(x4102).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4101 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4102 : *) : +)~_));
ID_8098 = 9.3f, ID_8097;
ID_8099 = (ID_8098 : -);
ID_8100 = 0, ID_8099;
ID_8101 = (ID_8100 : -);
ID_8102 = ID_8101, 2;
ID_8103 = (ID_8102 : pow);
ID_8104 = (ID_14 : \(x4103).(\(x4104).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4103 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4104 : *) : +)~_));
ID_8105 = 0, ID_8104;
ID_8106 = (ID_8105 : -);
ID_8107 = 0, ID_8106;
ID_8108 = (ID_8107 : -);
ID_8109 = ID_8108, 2;
ID_8110 = (ID_8109 : pow);
ID_8111 = ID_8103, ID_8110;
ID_8112 = (ID_8111 :> sqrt);
ID_8113 = ID_8112, 0;
ID_8114 = (ID_8113 : ==);
ID_8115 = ID_8114, ID_69;
ID_8116 = (ID_8115 : select2);
ID_8117 = (ID_14 : \(x4105).(\(x4106).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4105 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4106 : *) : +)~_));
ID_8118 = 0, ID_8117;
ID_8119 = (ID_8118 : -);
ID_8120 = 0, ID_8119;
ID_8121 = (ID_8120 : -);
ID_8122 = (ID_0 : \(x4107).(\(x4108).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4107 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4108 : *) : +)~_));
ID_8123 = 9.3f, ID_8122;
ID_8124 = (ID_8123 : -);
ID_8125 = 0, ID_8124;
ID_8126 = (ID_8125 : -);
ID_8127 = ID_8126, 2;
ID_8128 = (ID_8127 : pow);
ID_8129 = (ID_14 : \(x4109).(\(x4110).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4109 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4110 : *) : +)~_));
ID_8130 = 0, ID_8129;
ID_8131 = (ID_8130 : -);
ID_8132 = 0, ID_8131;
ID_8133 = (ID_8132 : -);
ID_8134 = ID_8133, 2;
ID_8135 = (ID_8134 : pow);
ID_8136 = ID_8128, ID_8135;
ID_8137 = (ID_8136 :> sqrt);
ID_8138 = ID_8137, 0;
ID_8139 = (ID_8138 : <);
ID_8140 = ID_8137, 0.0001f;
ID_8141 = (ID_8140 : max);
ID_8142 = ID_8141, ID_8137;
ID_8143 = ID_8139, ID_8142;
ID_8144 = (ID_8143 : select2);
ID_8145 = ID_8121, ID_8144;
ID_8146 = (ID_8145 : /);
ID_8147 = ID_8146, 0;
ID_8148 = ID_8116, ID_8147;
ID_8149 = (ID_8148 : select2);
ID_8150 = ID_3268, ID_8149;
ID_8151 = (ID_8150 : *);
ID_8152 = ID_8096, ID_8151;
ID_8153 = (ID_8152 :> _);
ID_8154 = (ID_0 : \(x4111).(\(x4112).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4111 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4112 : *) : +)~_));
ID_8155 = 9.3f, ID_8154;
ID_8156 = (ID_8155 : -);
ID_8157 = 0, ID_8156;
ID_8158 = (ID_8157 : -);
ID_8159 = ID_8158, 2;
ID_8160 = (ID_8159 : pow);
ID_8161 = (ID_14 : \(x4113).(\(x4114).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4113 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4114 : *) : +)~_));
ID_8162 = 0, ID_8161;
ID_8163 = (ID_8162 : -);
ID_8164 = 0, ID_8163;
ID_8165 = (ID_8164 : -);
ID_8166 = ID_8165, 2;
ID_8167 = (ID_8166 : pow);
ID_8168 = ID_8160, ID_8167;
ID_8169 = (ID_8168 :> sqrt);
ID_8170 = ID_8169, 0;
ID_8171 = (ID_8170 : ==);
ID_8172 = ID_8171, ID_69;
ID_8173 = (ID_8172 : select2);
ID_8174 = (ID_0 : \(x4115).(\(x4116).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4115 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4116 : *) : +)~_));
ID_8175 = 9.3f, ID_8174;
ID_8176 = (ID_8175 : -);
ID_8177 = 0, ID_8176;
ID_8178 = (ID_8177 : -);
ID_8179 = (ID_0 : \(x4117).(\(x4118).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4117 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4118 : *) : +)~_));
ID_8180 = 9.3f, ID_8179;
ID_8181 = (ID_8180 : -);
ID_8182 = 0, ID_8181;
ID_8183 = (ID_8182 : -);
ID_8184 = ID_8183, 2;
ID_8185 = (ID_8184 : pow);
ID_8186 = (ID_14 : \(x4119).(\(x4120).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4119 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4120 : *) : +)~_));
ID_8187 = 0, ID_8186;
ID_8188 = (ID_8187 : -);
ID_8189 = 0, ID_8188;
ID_8190 = (ID_8189 : -);
ID_8191 = ID_8190, 2;
ID_8192 = (ID_8191 : pow);
ID_8193 = ID_8185, ID_8192;
ID_8194 = (ID_8193 :> sqrt);
ID_8195 = ID_8194, 0;
ID_8196 = (ID_8195 : <);
ID_8197 = ID_8194, 0.0001f;
ID_8198 = (ID_8197 : max);
ID_8199 = ID_8198, ID_8194;
ID_8200 = ID_8196, ID_8199;
ID_8201 = (ID_8200 : select2);
ID_8202 = ID_8178, ID_8201;
ID_8203 = (ID_8202 : /);
ID_8204 = ID_8203, 0;
ID_8205 = ID_8173, ID_8204;
ID_8206 = (ID_8205 : select2);
ID_8207 = ID_8206, 2;
ID_8208 = (ID_8207 : pow);
ID_8209 = (ID_0 : \(x4121).(\(x4122).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4121 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4122 : *) : +)~_));
ID_8210 = 9.3f, ID_8209;
ID_8211 = (ID_8210 : -);
ID_8212 = 0, ID_8211;
ID_8213 = (ID_8212 : -);
ID_8214 = ID_8213, 2;
ID_8215 = (ID_8214 : pow);
ID_8216 = (ID_14 : \(x4123).(\(x4124).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4123 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4124 : *) : +)~_));
ID_8217 = 0, ID_8216;
ID_8218 = (ID_8217 : -);
ID_8219 = 0, ID_8218;
ID_8220 = (ID_8219 : -);
ID_8221 = ID_8220, 2;
ID_8222 = (ID_8221 : pow);
ID_8223 = ID_8215, ID_8222;
ID_8224 = (ID_8223 :> sqrt);
ID_8225 = ID_8224, 0;
ID_8226 = (ID_8225 : ==);
ID_8227 = ID_8226, ID_69;
ID_8228 = (ID_8227 : select2);
ID_8229 = (ID_14 : \(x4125).(\(x4126).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4125 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4126 : *) : +)~_));
ID_8230 = 0, ID_8229;
ID_8231 = (ID_8230 : -);
ID_8232 = 0, ID_8231;
ID_8233 = (ID_8232 : -);
ID_8234 = (ID_0 : \(x4127).(\(x4128).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4127 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4128 : *) : +)~_));
ID_8235 = 9.3f, ID_8234;
ID_8236 = (ID_8235 : -);
ID_8237 = 0, ID_8236;
ID_8238 = (ID_8237 : -);
ID_8239 = ID_8238, 2;
ID_8240 = (ID_8239 : pow);
ID_8241 = (ID_14 : \(x4129).(\(x4130).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4129 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4130 : *) : +)~_));
ID_8242 = 0, ID_8241;
ID_8243 = (ID_8242 : -);
ID_8244 = 0, ID_8243;
ID_8245 = (ID_8244 : -);
ID_8246 = ID_8245, 2;
ID_8247 = (ID_8246 : pow);
ID_8248 = ID_8240, ID_8247;
ID_8249 = (ID_8248 :> sqrt);
ID_8250 = ID_8249, 0;
ID_8251 = (ID_8250 : <);
ID_8252 = ID_8249, 0.0001f;
ID_8253 = (ID_8252 : max);
ID_8254 = ID_8253, ID_8249;
ID_8255 = ID_8251, ID_8254;
ID_8256 = (ID_8255 : select2);
ID_8257 = ID_8233, ID_8256;
ID_8258 = (ID_8257 : /);
ID_8259 = ID_8258, 0;
ID_8260 = ID_8228, ID_8259;
ID_8261 = (ID_8260 : select2);
ID_8262 = ID_8261, 2;
ID_8263 = (ID_8262 : pow);
ID_8264 = ID_8208, ID_8263;
ID_8265 = (ID_8264 :> sqrt);
ID_8266 = ID_8265, ID_3272;
ID_8267 = (ID_8266 : *);
ID_8268 = ID_8267, 0;
ID_8269 = (ID_8268 : <);
ID_8270 = ID_8267, 0.0001f;
ID_8271 = (ID_8270 : max);
ID_8272 = ID_8271, ID_8267;
ID_8273 = ID_8269, ID_8272;
ID_8274 = (ID_8273 : select2);
ID_8275 = ID_8153, ID_8274;
ID_8276 = (ID_8275 : /);
ID_8277 = ID_8276, 0;
ID_8278 = ID_8041, ID_8277;
ID_8279 = (ID_8278 : select2);
ID_8280 = ID_8279, 0;
ID_8281 = (ID_8280 : <);
ID_8282 = ID_8279, 0.0001f;
ID_8283 = (ID_8282 : max);
ID_8284 = ID_8283, ID_8279;
ID_8285 = ID_8281, ID_8284;
ID_8286 = ID_8285 : select2;
ID_8287 = (ID_8286 : acos);
ID_8288 = ID_8287, 0;
ID_8289 = ID_8040, ID_8288;
ID_8290 = (ID_8289 : select2);
ID_8291 = ID_3173, ID_8290;
ID_8292 = ID_8291 : *;
ID_8293 = (ID_8292 : cos);
ID_8294 = ID_7784, ID_8293;
ID_8295 = (ID_8294 : *);
ID_8296 = _, ID_8295;
ID_8297 = (ID_8296 : *);
ID_8298 = (ID_0 : \(x4207).(\(x4208).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4207 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4208 : *) : +)~_));
ID_8299 = 9.3f, ID_8298;
ID_8300 = (ID_8299 : -);
ID_8301 = 0, ID_8300;
ID_8302 = (ID_8301 : -);
ID_8303 = ID_8302, 2;
ID_8304 = (ID_8303 : pow);
ID_8305 = (ID_14 : \(x4209).(\(x4210).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4209 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4210 : *) : +)~_));
ID_8306 = 0, ID_8305;
ID_8307 = (ID_8306 : -);
ID_8308 = 0, ID_8307;
ID_8309 = (ID_8308 : -);
ID_8310 = ID_8309, 2;
ID_8311 = (ID_8310 : pow);
ID_8312 = ID_8304, ID_8311;
ID_8313 = (ID_8312 :> sqrt);
ID_8314 = ID_8313, 0;
ID_8315 = (ID_8314 : <);
ID_8316 = ID_8313, 0.0001f;
ID_8317 = (ID_8316 : max);
ID_8318 = ID_8317, ID_8313;
ID_8319 = ID_8315, ID_8318;
ID_8320 = (ID_8319 : select2);
ID_8321 = ID_2563, ID_8320;
ID_8322 = (ID_8321 : /);
ID_8323 = ID_8322, 0;
ID_8324 = ID_3741, ID_8323;
ID_8325 = (ID_8324 : select2);
ID_8326 = ID_8325, 2;
ID_8327 = (ID_8326 : pow);
ID_8328 = (ID_0 : \(x4211).(\(x4212).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4211 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4212 : *) : +)~_));
ID_8329 = 9.3f, ID_8328;
ID_8330 = (ID_8329 : -);
ID_8331 = 0, ID_8330;
ID_8332 = (ID_8331 : -);
ID_8333 = ID_8332, 2;
ID_8334 = (ID_8333 : pow);
ID_8335 = (ID_14 : \(x4213).(\(x4214).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4213 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4214 : *) : +)~_));
ID_8336 = 0, ID_8335;
ID_8337 = (ID_8336 : -);
ID_8338 = 0, ID_8337;
ID_8339 = (ID_8338 : -);
ID_8340 = ID_8339, 2;
ID_8341 = (ID_8340 : pow);
ID_8342 = ID_8334, ID_8341;
ID_8343 = (ID_8342 :> sqrt);
ID_8344 = ID_8343, 0;
ID_8345 = (ID_8344 : <);
ID_8346 = ID_8343, 0.0001f;
ID_8347 = (ID_8346 : max);
ID_8348 = ID_8347, ID_8343;
ID_8349 = ID_8345, ID_8348;
ID_8350 = (ID_8349 : select2);
ID_8351 = ID_1360, ID_8350;
ID_8352 = (ID_8351 : /);
ID_8353 = ID_8352, 0;
ID_8354 = ID_3777, ID_8353;
ID_8355 = (ID_8354 : select2);
ID_8356 = ID_8355, 2;
ID_8357 = (ID_8356 : pow);
ID_8358 = ID_8327, ID_8357;
ID_8359 = (ID_8358 :> sqrt);
ID_8360 = ID_8359, ID_3272;
ID_8361 = (ID_8360 : *);
ID_8362 = ID_8361, 0;
ID_8363 = (ID_8362 : ==);
ID_8364 = (ID_0 : \(x4215).(\(x4216).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4215 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4216 : *) : +)~_));
ID_8365 = 9.3f, ID_8364;
ID_8366 = (ID_8365 : -);
ID_8367 = 0, ID_8366;
ID_8368 = (ID_8367 : -);
ID_8369 = ID_8368, 2;
ID_8370 = (ID_8369 : pow);
ID_8371 = (ID_14 : \(x4217).(\(x4218).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4217 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4218 : *) : +)~_));
ID_8372 = 0, ID_8371;
ID_8373 = (ID_8372 : -);
ID_8374 = 0, ID_8373;
ID_8375 = (ID_8374 : -);
ID_8376 = ID_8375, 2;
ID_8377 = (ID_8376 : pow);
ID_8378 = ID_8370, ID_8377;
ID_8379 = (ID_8378 :> sqrt);
ID_8380 = ID_8379, 0;
ID_8381 = (ID_8380 : <);
ID_8382 = ID_8379, 0.0001f;
ID_8383 = (ID_8382 : max);
ID_8384 = ID_8383, ID_8379;
ID_8385 = ID_8381, ID_8384;
ID_8386 = (ID_8385 : select2);
ID_8387 = ID_2698, ID_8386;
ID_8388 = (ID_8387 : /);
ID_8389 = ID_8388, 0;
ID_8390 = ID_3819, ID_8389;
ID_8391 = (ID_8390 : select2);
ID_8392 = ID_3261, ID_8391;
ID_8393 = (ID_8392 : *);
ID_8394 = (ID_0 : \(x4219).(\(x4220).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4219 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4220 : *) : +)~_));
ID_8395 = 9.3f, ID_8394;
ID_8396 = (ID_8395 : -);
ID_8397 = 0, ID_8396;
ID_8398 = (ID_8397 : -);
ID_8399 = ID_8398, 2;
ID_8400 = (ID_8399 : pow);
ID_8401 = (ID_14 : \(x4221).(\(x4222).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4221 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4222 : *) : +)~_));
ID_8402 = 0, ID_8401;
ID_8403 = (ID_8402 : -);
ID_8404 = 0, ID_8403;
ID_8405 = (ID_8404 : -);
ID_8406 = ID_8405, 2;
ID_8407 = (ID_8406 : pow);
ID_8408 = ID_8400, ID_8407;
ID_8409 = (ID_8408 :> sqrt);
ID_8410 = ID_8409, 0;
ID_8411 = (ID_8410 : <);
ID_8412 = ID_8409, 0.0001f;
ID_8413 = (ID_8412 : max);
ID_8414 = ID_8413, ID_8409;
ID_8415 = ID_8411, ID_8414;
ID_8416 = (ID_8415 : select2);
ID_8417 = ID_1457, ID_8416;
ID_8418 = (ID_8417 : /);
ID_8419 = ID_8418, 0;
ID_8420 = ID_3855, ID_8419;
ID_8421 = (ID_8420 : select2);
ID_8422 = ID_3268, ID_8421;
ID_8423 = (ID_8422 : *);
ID_8424 = ID_8393, ID_8423;
ID_8425 = (ID_8424 :> _);
ID_8426 = (ID_0 : \(x4223).(\(x4224).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4223 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4224 : *) : +)~_));
ID_8427 = 9.3f, ID_8426;
ID_8428 = (ID_8427 : -);
ID_8429 = 0, ID_8428;
ID_8430 = (ID_8429 : -);
ID_8431 = ID_8430, 2;
ID_8432 = (ID_8431 : pow);
ID_8433 = (ID_14 : \(x4225).(\(x4226).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4225 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4226 : *) : +)~_));
ID_8434 = 0, ID_8433;
ID_8435 = (ID_8434 : -);
ID_8436 = 0, ID_8435;
ID_8437 = (ID_8436 : -);
ID_8438 = ID_8437, 2;
ID_8439 = (ID_8438 : pow);
ID_8440 = ID_8432, ID_8439;
ID_8441 = (ID_8440 :> sqrt);
ID_8442 = ID_8441, 0;
ID_8443 = (ID_8442 : ==);
ID_8444 = ID_8443, ID_69;
ID_8445 = (ID_8444 : select2);
ID_8446 = (ID_0 : \(x4227).(\(x4228).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4227 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4228 : *) : +)~_));
ID_8447 = 9.3f, ID_8446;
ID_8448 = (ID_8447 : -);
ID_8449 = 0, ID_8448;
ID_8450 = (ID_8449 : -);
ID_8451 = (ID_0 : \(x4229).(\(x4230).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4229 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4230 : *) : +)~_));
ID_8452 = 9.3f, ID_8451;
ID_8453 = (ID_8452 : -);
ID_8454 = 0, ID_8453;
ID_8455 = (ID_8454 : -);
ID_8456 = ID_8455, 2;
ID_8457 = (ID_8456 : pow);
ID_8458 = (ID_14 : \(x4231).(\(x4232).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4231 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4232 : *) : +)~_));
ID_8459 = 0, ID_8458;
ID_8460 = (ID_8459 : -);
ID_8461 = 0, ID_8460;
ID_8462 = (ID_8461 : -);
ID_8463 = ID_8462, 2;
ID_8464 = (ID_8463 : pow);
ID_8465 = ID_8457, ID_8464;
ID_8466 = (ID_8465 :> sqrt);
ID_8467 = ID_8466, 0;
ID_8468 = (ID_8467 : <);
ID_8469 = ID_8466, 0.0001f;
ID_8470 = (ID_8469 : max);
ID_8471 = ID_8470, ID_8466;
ID_8472 = ID_8468, ID_8471;
ID_8473 = (ID_8472 : select2);
ID_8474 = ID_8450, ID_8473;
ID_8475 = (ID_8474 : /);
ID_8476 = ID_8475, 0;
ID_8477 = ID_8445, ID_8476;
ID_8478 = (ID_8477 : select2);
ID_8479 = ID_8478, 2;
ID_8480 = (ID_8479 : pow);
ID_8481 = (ID_0 : \(x4233).(\(x4234).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4233 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4234 : *) : +)~_));
ID_8482 = 9.3f, ID_8481;
ID_8483 = (ID_8482 : -);
ID_8484 = 0, ID_8483;
ID_8485 = (ID_8484 : -);
ID_8486 = ID_8485, 2;
ID_8487 = (ID_8486 : pow);
ID_8488 = (ID_14 : \(x4235).(\(x4236).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4235 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4236 : *) : +)~_));
ID_8489 = 0, ID_8488;
ID_8490 = (ID_8489 : -);
ID_8491 = 0, ID_8490;
ID_8492 = (ID_8491 : -);
ID_8493 = ID_8492, 2;
ID_8494 = (ID_8493 : pow);
ID_8495 = ID_8487, ID_8494;
ID_8496 = (ID_8495 :> sqrt);
ID_8497 = ID_8496, 0;
ID_8498 = (ID_8497 : ==);
ID_8499 = ID_8498, ID_69;
ID_8500 = (ID_8499 : select2);
ID_8501 = (ID_14 : \(x4237).(\(x4238).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4237 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4238 : *) : +)~_));
ID_8502 = 0, ID_8501;
ID_8503 = (ID_8502 : -);
ID_8504 = 0, ID_8503;
ID_8505 = (ID_8504 : -);
ID_8506 = (ID_0 : \(x4239).(\(x4240).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4239 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4240 : *) : +)~_));
ID_8507 = 9.3f, ID_8506;
ID_8508 = (ID_8507 : -);
ID_8509 = 0, ID_8508;
ID_8510 = (ID_8509 : -);
ID_8511 = ID_8510, 2;
ID_8512 = (ID_8511 : pow);
ID_8513 = (ID_14 : \(x4241).(\(x4242).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4241 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4242 : *) : +)~_));
ID_8514 = 0, ID_8513;
ID_8515 = (ID_8514 : -);
ID_8516 = 0, ID_8515;
ID_8517 = (ID_8516 : -);
ID_8518 = ID_8517, 2;
ID_8519 = (ID_8518 : pow);
ID_8520 = ID_8512, ID_8519;
ID_8521 = (ID_8520 :> sqrt);
ID_8522 = ID_8521, 0;
ID_8523 = (ID_8522 : <);
ID_8524 = ID_8521, 0.0001f;
ID_8525 = (ID_8524 : max);
ID_8526 = ID_8525, ID_8521;
ID_8527 = ID_8523, ID_8526;
ID_8528 = (ID_8527 : select2);
ID_8529 = ID_8505, ID_8528;
ID_8530 = (ID_8529 : /);
ID_8531 = ID_8530, 0;
ID_8532 = ID_8500, ID_8531;
ID_8533 = (ID_8532 : select2);
ID_8534 = ID_8533, 2;
ID_8535 = (ID_8534 : pow);
ID_8536 = ID_8480, ID_8535;
ID_8537 = (ID_8536 :> sqrt);
ID_8538 = ID_8537, ID_3272;
ID_8539 = (ID_8538 : *);
ID_8540 = ID_8539, 0;
ID_8541 = (ID_8540 : <);
ID_8542 = ID_8539, 0.0001f;
ID_8543 = (ID_8542 : max);
ID_8544 = ID_8543, ID_8539;
ID_8545 = ID_8541, ID_8544;
ID_8546 = (ID_8545 : select2);
ID_8547 = ID_8425, ID_8546;
ID_8548 = (ID_8547 : /);
ID_8549 = ID_8548, 0;
ID_8550 = ID_8363, ID_8549;
ID_8551 = (ID_8550 : select2);
ID_8552 = ID_8551, 0;
ID_8553 = (ID_8552 : ==);
ID_8554 = (ID_8540 : ==);
ID_8555 = (ID_0 : \(x4243).(\(x4244).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4243 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4244 : *) : +)~_));
ID_8556 = 9.3f, ID_8555;
ID_8557 = (ID_8556 : -);
ID_8558 = 0, ID_8557;
ID_8559 = (ID_8558 : -);
ID_8560 = ID_8559, 2;
ID_8561 = (ID_8560 : pow);
ID_8562 = (ID_14 : \(x4245).(\(x4246).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4245 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4246 : *) : +)~_));
ID_8563 = 0, ID_8562;
ID_8564 = (ID_8563 : -);
ID_8565 = 0, ID_8564;
ID_8566 = (ID_8565 : -);
ID_8567 = ID_8566, 2;
ID_8568 = (ID_8567 : pow);
ID_8569 = ID_8561, ID_8568;
ID_8570 = (ID_8569 :> sqrt);
ID_8571 = ID_8570, 0;
ID_8572 = (ID_8571 : ==);
ID_8573 = ID_8572, ID_69;
ID_8574 = (ID_8573 : select2);
ID_8575 = (ID_0 : \(x4247).(\(x4248).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4247 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4248 : *) : +)~_));
ID_8576 = 9.3f, ID_8575;
ID_8577 = (ID_8576 : -);
ID_8578 = 0, ID_8577;
ID_8579 = (ID_8578 : -);
ID_8580 = (ID_0 : \(x4249).(\(x4250).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4249 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4250 : *) : +)~_));
ID_8581 = 9.3f, ID_8580;
ID_8582 = (ID_8581 : -);
ID_8583 = 0, ID_8582;
ID_8584 = (ID_8583 : -);
ID_8585 = ID_8584, 2;
ID_8586 = (ID_8585 : pow);
ID_8587 = (ID_14 : \(x4251).(\(x4252).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4251 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4252 : *) : +)~_));
ID_8588 = 0, ID_8587;
ID_8589 = (ID_8588 : -);
ID_8590 = 0, ID_8589;
ID_8591 = (ID_8590 : -);
ID_8592 = ID_8591, 2;
ID_8593 = (ID_8592 : pow);
ID_8594 = ID_8586, ID_8593;
ID_8595 = (ID_8594 :> sqrt);
ID_8596 = ID_8595, 0;
ID_8597 = (ID_8596 : <);
ID_8598 = ID_8595, 0.0001f;
ID_8599 = (ID_8598 : max);
ID_8600 = ID_8599, ID_8595;
ID_8601 = ID_8597, ID_8600;
ID_8602 = (ID_8601 : select2);
ID_8603 = ID_8579, ID_8602;
ID_8604 = (ID_8603 : /);
ID_8605 = ID_8604, 0;
ID_8606 = ID_8574, ID_8605;
ID_8607 = (ID_8606 : select2);
ID_8608 = ID_3261, ID_8607;
ID_8609 = (ID_8608 : *);
ID_8610 = (ID_0 : \(x4253).(\(x4254).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4253 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4254 : *) : +)~_));
ID_8611 = 9.3f, ID_8610;
ID_8612 = (ID_8611 : -);
ID_8613 = 0, ID_8612;
ID_8614 = (ID_8613 : -);
ID_8615 = ID_8614, 2;
ID_8616 = (ID_8615 : pow);
ID_8617 = (ID_14 : \(x4255).(\(x4256).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4255 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4256 : *) : +)~_));
ID_8618 = 0, ID_8617;
ID_8619 = (ID_8618 : -);
ID_8620 = 0, ID_8619;
ID_8621 = (ID_8620 : -);
ID_8622 = ID_8621, 2;
ID_8623 = (ID_8622 : pow);
ID_8624 = ID_8616, ID_8623;
ID_8625 = (ID_8624 :> sqrt);
ID_8626 = ID_8625, 0;
ID_8627 = (ID_8626 : ==);
ID_8628 = ID_8627, ID_69;
ID_8629 = (ID_8628 : select2);
ID_8630 = (ID_14 : \(x4257).(\(x4258).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4257 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4258 : *) : +)~_));
ID_8631 = 0, ID_8630;
ID_8632 = (ID_8631 : -);
ID_8633 = 0, ID_8632;
ID_8634 = (ID_8633 : -);
ID_8635 = (ID_0 : \(x4259).(\(x4260).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4259 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4260 : *) : +)~_));
ID_8636 = 9.3f, ID_8635;
ID_8637 = (ID_8636 : -);
ID_8638 = 0, ID_8637;
ID_8639 = (ID_8638 : -);
ID_8640 = ID_8639, 2;
ID_8641 = (ID_8640 : pow);
ID_8642 = (ID_14 : \(x4261).(\(x4262).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4261 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4262 : *) : +)~_));
ID_8643 = 0, ID_8642;
ID_8644 = (ID_8643 : -);
ID_8645 = 0, ID_8644;
ID_8646 = (ID_8645 : -);
ID_8647 = ID_8646, 2;
ID_8648 = (ID_8647 : pow);
ID_8649 = ID_8641, ID_8648;
ID_8650 = (ID_8649 :> sqrt);
ID_8651 = ID_8650, 0;
ID_8652 = (ID_8651 : <);
ID_8653 = ID_8650, 0.0001f;
ID_8654 = (ID_8653 : max);
ID_8655 = ID_8654, ID_8650;
ID_8656 = ID_8652, ID_8655;
ID_8657 = (ID_8656 : select2);
ID_8658 = ID_8634, ID_8657;
ID_8659 = (ID_8658 : /);
ID_8660 = ID_8659, 0;
ID_8661 = ID_8629, ID_8660;
ID_8662 = (ID_8661 : select2);
ID_8663 = ID_3268, ID_8662;
ID_8664 = (ID_8663 : *);
ID_8665 = ID_8609, ID_8664;
ID_8666 = (ID_8665 :> _);
ID_8667 = (ID_0 : \(x4263).(\(x4264).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4263 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4264 : *) : +)~_));
ID_8668 = 9.3f, ID_8667;
ID_8669 = (ID_8668 : -);
ID_8670 = 0, ID_8669;
ID_8671 = (ID_8670 : -);
ID_8672 = ID_8671, 2;
ID_8673 = (ID_8672 : pow);
ID_8674 = (ID_14 : \(x4265).(\(x4266).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4265 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4266 : *) : +)~_));
ID_8675 = 0, ID_8674;
ID_8676 = (ID_8675 : -);
ID_8677 = 0, ID_8676;
ID_8678 = (ID_8677 : -);
ID_8679 = ID_8678, 2;
ID_8680 = (ID_8679 : pow);
ID_8681 = ID_8673, ID_8680;
ID_8682 = (ID_8681 :> sqrt);
ID_8683 = ID_8682, 0;
ID_8684 = (ID_8683 : ==);
ID_8685 = ID_8684, ID_69;
ID_8686 = (ID_8685 : select2);
ID_8687 = (ID_0 : \(x4267).(\(x4268).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4267 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4268 : *) : +)~_));
ID_8688 = 9.3f, ID_8687;
ID_8689 = (ID_8688 : -);
ID_8690 = 0, ID_8689;
ID_8691 = (ID_8690 : -);
ID_8692 = (ID_0 : \(x4269).(\(x4270).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4269 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4270 : *) : +)~_));
ID_8693 = 9.3f, ID_8692;
ID_8694 = (ID_8693 : -);
ID_8695 = 0, ID_8694;
ID_8696 = (ID_8695 : -);
ID_8697 = ID_8696, 2;
ID_8698 = (ID_8697 : pow);
ID_8699 = (ID_14 : \(x4271).(\(x4272).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4271 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4272 : *) : +)~_));
ID_8700 = 0, ID_8699;
ID_8701 = (ID_8700 : -);
ID_8702 = 0, ID_8701;
ID_8703 = (ID_8702 : -);
ID_8704 = ID_8703, 2;
ID_8705 = (ID_8704 : pow);
ID_8706 = ID_8698, ID_8705;
ID_8707 = (ID_8706 :> sqrt);
ID_8708 = ID_8707, 0;
ID_8709 = (ID_8708 : <);
ID_8710 = ID_8707, 0.0001f;
ID_8711 = (ID_8710 : max);
ID_8712 = ID_8711, ID_8707;
ID_8713 = ID_8709, ID_8712;
ID_8714 = (ID_8713 : select2);
ID_8715 = ID_8691, ID_8714;
ID_8716 = (ID_8715 : /);
ID_8717 = ID_8716, 0;
ID_8718 = ID_8686, ID_8717;
ID_8719 = (ID_8718 : select2);
ID_8720 = ID_8719, 2;
ID_8721 = (ID_8720 : pow);
ID_8722 = (ID_0 : \(x4273).(\(x4274).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4273 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4274 : *) : +)~_));
ID_8723 = 9.3f, ID_8722;
ID_8724 = (ID_8723 : -);
ID_8725 = 0, ID_8724;
ID_8726 = (ID_8725 : -);
ID_8727 = ID_8726, 2;
ID_8728 = (ID_8727 : pow);
ID_8729 = (ID_14 : \(x4275).(\(x4276).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4275 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4276 : *) : +)~_));
ID_8730 = 0, ID_8729;
ID_8731 = (ID_8730 : -);
ID_8732 = 0, ID_8731;
ID_8733 = (ID_8732 : -);
ID_8734 = ID_8733, 2;
ID_8735 = (ID_8734 : pow);
ID_8736 = ID_8728, ID_8735;
ID_8737 = (ID_8736 :> sqrt);
ID_8738 = ID_8737, 0;
ID_8739 = (ID_8738 : ==);
ID_8740 = ID_8739, ID_69;
ID_8741 = (ID_8740 : select2);
ID_8742 = (ID_14 : \(x4277).(\(x4278).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4277 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4278 : *) : +)~_));
ID_8743 = 0, ID_8742;
ID_8744 = (ID_8743 : -);
ID_8745 = 0, ID_8744;
ID_8746 = (ID_8745 : -);
ID_8747 = (ID_0 : \(x4279).(\(x4280).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4279 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4280 : *) : +)~_));
ID_8748 = 9.3f, ID_8747;
ID_8749 = (ID_8748 : -);
ID_8750 = 0, ID_8749;
ID_8751 = (ID_8750 : -);
ID_8752 = ID_8751, 2;
ID_8753 = (ID_8752 : pow);
ID_8754 = (ID_14 : \(x4281).(\(x4282).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4281 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4282 : *) : +)~_));
ID_8755 = 0, ID_8754;
ID_8756 = (ID_8755 : -);
ID_8757 = 0, ID_8756;
ID_8758 = (ID_8757 : -);
ID_8759 = ID_8758, 2;
ID_8760 = (ID_8759 : pow);
ID_8761 = ID_8753, ID_8760;
ID_8762 = (ID_8761 :> sqrt);
ID_8763 = ID_8762, 0;
ID_8764 = (ID_8763 : <);
ID_8765 = ID_8762, 0.0001f;
ID_8766 = (ID_8765 : max);
ID_8767 = ID_8766, ID_8762;
ID_8768 = ID_8764, ID_8767;
ID_8769 = (ID_8768 : select2);
ID_8770 = ID_8746, ID_8769;
ID_8771 = (ID_8770 : /);
ID_8772 = ID_8771, 0;
ID_8773 = ID_8741, ID_8772;
ID_8774 = (ID_8773 : select2);
ID_8775 = ID_8774, 2;
ID_8776 = (ID_8775 : pow);
ID_8777 = ID_8721, ID_8776;
ID_8778 = (ID_8777 :> sqrt);
ID_8779 = ID_8778, ID_3272;
ID_8780 = (ID_8779 : *);
ID_8781 = ID_8780, 0;
ID_8782 = (ID_8781 : <);
ID_8783 = ID_8780, 0.0001f;
ID_8784 = (ID_8783 : max);
ID_8785 = ID_8784, ID_8780;
ID_8786 = ID_8782, ID_8785;
ID_8787 = (ID_8786 : select2);
ID_8788 = ID_8666, ID_8787;
ID_8789 = (ID_8788 : /);
ID_8790 = ID_8789, 0;
ID_8791 = ID_8554, ID_8790;
ID_8792 = (ID_8791 : select2);
ID_8793 = ID_8792, 0;
ID_8794 = (ID_8793 : <);
ID_8795 = ID_8792, 0.0001f;
ID_8796 = (ID_8795 : max);
ID_8797 = ID_8796, ID_8792;
ID_8798 = ID_8794, ID_8797;
ID_8799 = ID_8798 : select2;
ID_8800 = (ID_8799 : acos);
ID_8801 = ID_8800, 0;
ID_8802 = ID_8553, ID_8801;
ID_8803 = (ID_8802 : select2);
ID_8804 = ID_3173, ID_8803;
ID_8805 = ID_8804 : *;
ID_8806 = (ID_8805 : sin);
ID_8807 = _, ID_8806;
ID_8808 = (ID_8807 : *);
ID_8809 = (ID_7783 : cos);
ID_8810 = (ID_0 : \(x4359).(\(x4360).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4359 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4360 : *) : +)~_));
ID_8811 = 9.3f, ID_8810;
ID_8812 = (ID_8811 : -);
ID_8813 = 0, ID_8812;
ID_8814 = (ID_8813 : -);
ID_8815 = ID_8814, 2;
ID_8816 = (ID_8815 : pow);
ID_8817 = (ID_14 : \(x4361).(\(x4362).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4361 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4362 : *) : +)~_));
ID_8818 = 0, ID_8817;
ID_8819 = (ID_8818 : -);
ID_8820 = 0, ID_8819;
ID_8821 = (ID_8820 : -);
ID_8822 = ID_8821, 2;
ID_8823 = (ID_8822 : pow);
ID_8824 = ID_8816, ID_8823;
ID_8825 = (ID_8824 :> sqrt);
ID_8826 = ID_8825, 0;
ID_8827 = (ID_8826 : <);
ID_8828 = ID_8825, 0.0001f;
ID_8829 = (ID_8828 : max);
ID_8830 = ID_8829, ID_8825;
ID_8831 = ID_8827, ID_8830;
ID_8832 = (ID_8831 : select2);
ID_8833 = ID_4295, ID_8832;
ID_8834 = (ID_8833 : /);
ID_8835 = ID_8834, 0;
ID_8836 = ID_4291, ID_8835;
ID_8837 = (ID_8836 : select2);
ID_8838 = ID_8837, 2;
ID_8839 = (ID_8838 : pow);
ID_8840 = (ID_0 : \(x4363).(\(x4364).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4363 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4364 : *) : +)~_));
ID_8841 = 9.3f, ID_8840;
ID_8842 = (ID_8841 : -);
ID_8843 = 0, ID_8842;
ID_8844 = (ID_8843 : -);
ID_8845 = ID_8844, 2;
ID_8846 = (ID_8845 : pow);
ID_8847 = (ID_14 : \(x4365).(\(x4366).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4365 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4366 : *) : +)~_));
ID_8848 = 0, ID_8847;
ID_8849 = (ID_8848 : -);
ID_8850 = 0, ID_8849;
ID_8851 = (ID_8850 : -);
ID_8852 = ID_8851, 2;
ID_8853 = (ID_8852 : pow);
ID_8854 = ID_8846, ID_8853;
ID_8855 = (ID_8854 :> sqrt);
ID_8856 = ID_8855, 0;
ID_8857 = (ID_8856 : <);
ID_8858 = ID_8855, 0.0001f;
ID_8859 = (ID_8858 : max);
ID_8860 = ID_8859, ID_8855;
ID_8861 = ID_8857, ID_8860;
ID_8862 = (ID_8861 : select2);
ID_8863 = ID_1965, ID_8862;
ID_8864 = (ID_8863 : /);
ID_8865 = ID_8864, 0;
ID_8866 = ID_4337, ID_8865;
ID_8867 = (ID_8866 : select2);
ID_8868 = ID_8867, 2;
ID_8869 = (ID_8868 : pow);
ID_8870 = ID_8839, ID_8869;
ID_8871 = (ID_8870 :> sqrt);
ID_8872 = ID_8871, ID_3272;
ID_8873 = (ID_8872 : *);
ID_8874 = ID_8873, 0;
ID_8875 = (ID_8874 : ==);
ID_8876 = (ID_0 : \(x4367).(\(x4368).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4367 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4368 : *) : +)~_));
ID_8877 = 9.3f, ID_8876;
ID_8878 = (ID_8877 : -);
ID_8879 = 0, ID_8878;
ID_8880 = (ID_8879 : -);
ID_8881 = ID_8880, 2;
ID_8882 = (ID_8881 : pow);
ID_8883 = (ID_14 : \(x4369).(\(x4370).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4369 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4370 : *) : +)~_));
ID_8884 = 0, ID_8883;
ID_8885 = (ID_8884 : -);
ID_8886 = 0, ID_8885;
ID_8887 = (ID_8886 : -);
ID_8888 = ID_8887, 2;
ID_8889 = (ID_8888 : pow);
ID_8890 = ID_8882, ID_8889;
ID_8891 = (ID_8890 :> sqrt);
ID_8892 = ID_8891, 0;
ID_8893 = (ID_8892 : <);
ID_8894 = ID_8891, 0.0001f;
ID_8895 = (ID_8894 : max);
ID_8896 = ID_8895, ID_8891;
ID_8897 = ID_8893, ID_8896;
ID_8898 = (ID_8897 : select2);
ID_8899 = ID_4389, ID_8898;
ID_8900 = (ID_8899 : /);
ID_8901 = ID_8900, 0;
ID_8902 = ID_4385, ID_8901;
ID_8903 = (ID_8902 : select2);
ID_8904 = ID_3261, ID_8903;
ID_8905 = (ID_8904 : *);
ID_8906 = (ID_0 : \(x4371).(\(x4372).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4371 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4372 : *) : +)~_));
ID_8907 = 9.3f, ID_8906;
ID_8908 = (ID_8907 : -);
ID_8909 = 0, ID_8908;
ID_8910 = (ID_8909 : -);
ID_8911 = ID_8910, 2;
ID_8912 = (ID_8911 : pow);
ID_8913 = (ID_14 : \(x4373).(\(x4374).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4373 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4374 : *) : +)~_));
ID_8914 = 0, ID_8913;
ID_8915 = (ID_8914 : -);
ID_8916 = 0, ID_8915;
ID_8917 = (ID_8916 : -);
ID_8918 = ID_8917, 2;
ID_8919 = (ID_8918 : pow);
ID_8920 = ID_8912, ID_8919;
ID_8921 = (ID_8920 :> sqrt);
ID_8922 = ID_8921, 0;
ID_8923 = (ID_8922 : <);
ID_8924 = ID_8921, 0.0001f;
ID_8925 = (ID_8924 : max);
ID_8926 = ID_8925, ID_8921;
ID_8927 = ID_8923, ID_8926;
ID_8928 = (ID_8927 : select2);
ID_8929 = ID_2081, ID_8928;
ID_8930 = (ID_8929 : /);
ID_8931 = ID_8930, 0;
ID_8932 = ID_4431, ID_8931;
ID_8933 = (ID_8932 : select2);
ID_8934 = ID_3268, ID_8933;
ID_8935 = (ID_8934 : *);
ID_8936 = ID_8905, ID_8935;
ID_8937 = (ID_8936 :> _);
ID_8938 = (ID_0 : \(x4375).(\(x4376).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4375 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4376 : *) : +)~_));
ID_8939 = 9.3f, ID_8938;
ID_8940 = (ID_8939 : -);
ID_8941 = 0, ID_8940;
ID_8942 = (ID_8941 : -);
ID_8943 = ID_8942, 2;
ID_8944 = (ID_8943 : pow);
ID_8945 = (ID_14 : \(x4377).(\(x4378).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4377 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4378 : *) : +)~_));
ID_8946 = 0, ID_8945;
ID_8947 = (ID_8946 : -);
ID_8948 = 0, ID_8947;
ID_8949 = (ID_8948 : -);
ID_8950 = ID_8949, 2;
ID_8951 = (ID_8950 : pow);
ID_8952 = ID_8944, ID_8951;
ID_8953 = (ID_8952 :> sqrt);
ID_8954 = ID_8953, 0;
ID_8955 = (ID_8954 : ==);
ID_8956 = ID_8955, ID_69;
ID_8957 = (ID_8956 : select2);
ID_8958 = (ID_0 : \(x4379).(\(x4380).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4379 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4380 : *) : +)~_));
ID_8959 = 9.3f, ID_8958;
ID_8960 = (ID_8959 : -);
ID_8961 = 0, ID_8960;
ID_8962 = (ID_8961 : -);
ID_8963 = (ID_0 : \(x4381).(\(x4382).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4381 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4382 : *) : +)~_));
ID_8964 = 9.3f, ID_8963;
ID_8965 = (ID_8964 : -);
ID_8966 = 0, ID_8965;
ID_8967 = (ID_8966 : -);
ID_8968 = ID_8967, 2;
ID_8969 = (ID_8968 : pow);
ID_8970 = (ID_14 : \(x4383).(\(x4384).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4383 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4384 : *) : +)~_));
ID_8971 = 0, ID_8970;
ID_8972 = (ID_8971 : -);
ID_8973 = 0, ID_8972;
ID_8974 = (ID_8973 : -);
ID_8975 = ID_8974, 2;
ID_8976 = (ID_8975 : pow);
ID_8977 = ID_8969, ID_8976;
ID_8978 = (ID_8977 :> sqrt);
ID_8979 = ID_8978, 0;
ID_8980 = (ID_8979 : <);
ID_8981 = ID_8978, 0.0001f;
ID_8982 = (ID_8981 : max);
ID_8983 = ID_8982, ID_8978;
ID_8984 = ID_8980, ID_8983;
ID_8985 = (ID_8984 : select2);
ID_8986 = ID_8962, ID_8985;
ID_8987 = (ID_8986 : /);
ID_8988 = ID_8987, 0;
ID_8989 = ID_8957, ID_8988;
ID_8990 = (ID_8989 : select2);
ID_8991 = ID_8990, 2;
ID_8992 = (ID_8991 : pow);
ID_8993 = (ID_0 : \(x4385).(\(x4386).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4385 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4386 : *) : +)~_));
ID_8994 = 9.3f, ID_8993;
ID_8995 = (ID_8994 : -);
ID_8996 = 0, ID_8995;
ID_8997 = (ID_8996 : -);
ID_8998 = ID_8997, 2;
ID_8999 = (ID_8998 : pow);
ID_9000 = (ID_14 : \(x4387).(\(x4388).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4387 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4388 : *) : +)~_));
ID_9001 = 0, ID_9000;
ID_9002 = (ID_9001 : -);
ID_9003 = 0, ID_9002;
ID_9004 = (ID_9003 : -);
ID_9005 = ID_9004, 2;
ID_9006 = (ID_9005 : pow);
ID_9007 = ID_8999, ID_9006;
ID_9008 = (ID_9007 :> sqrt);
ID_9009 = ID_9008, 0;
ID_9010 = (ID_9009 : ==);
ID_9011 = ID_9010, ID_69;
ID_9012 = (ID_9011 : select2);
ID_9013 = (ID_14 : \(x4389).(\(x4390).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4389 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4390 : *) : +)~_));
ID_9014 = 0, ID_9013;
ID_9015 = (ID_9014 : -);
ID_9016 = 0, ID_9015;
ID_9017 = (ID_9016 : -);
ID_9018 = (ID_0 : \(x4391).(\(x4392).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4391 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4392 : *) : +)~_));
ID_9019 = 9.3f, ID_9018;
ID_9020 = (ID_9019 : -);
ID_9021 = 0, ID_9020;
ID_9022 = (ID_9021 : -);
ID_9023 = ID_9022, 2;
ID_9024 = (ID_9023 : pow);
ID_9025 = (ID_14 : \(x4393).(\(x4394).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4393 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4394 : *) : +)~_));
ID_9026 = 0, ID_9025;
ID_9027 = (ID_9026 : -);
ID_9028 = 0, ID_9027;
ID_9029 = (ID_9028 : -);
ID_9030 = ID_9029, 2;
ID_9031 = (ID_9030 : pow);
ID_9032 = ID_9024, ID_9031;
ID_9033 = (ID_9032 :> sqrt);
ID_9034 = ID_9033, 0;
ID_9035 = (ID_9034 : <);
ID_9036 = ID_9033, 0.0001f;
ID_9037 = (ID_9036 : max);
ID_9038 = ID_9037, ID_9033;
ID_9039 = ID_9035, ID_9038;
ID_9040 = (ID_9039 : select2);
ID_9041 = ID_9017, ID_9040;
ID_9042 = (ID_9041 : /);
ID_9043 = ID_9042, 0;
ID_9044 = ID_9012, ID_9043;
ID_9045 = (ID_9044 : select2);
ID_9046 = ID_9045, 2;
ID_9047 = (ID_9046 : pow);
ID_9048 = ID_8992, ID_9047;
ID_9049 = (ID_9048 :> sqrt);
ID_9050 = ID_9049, ID_3272;
ID_9051 = (ID_9050 : *);
ID_9052 = ID_9051, 0;
ID_9053 = (ID_9052 : <);
ID_9054 = ID_9051, 0.0001f;
ID_9055 = (ID_9054 : max);
ID_9056 = ID_9055, ID_9051;
ID_9057 = ID_9053, ID_9056;
ID_9058 = (ID_9057 : select2);
ID_9059 = ID_8937, ID_9058;
ID_9060 = (ID_9059 : /);
ID_9061 = ID_9060, 0;
ID_9062 = ID_8875, ID_9061;
ID_9063 = (ID_9062 : select2);
ID_9064 = ID_9063, 0;
ID_9065 = (ID_9064 : ==);
ID_9066 = (ID_9052 : ==);
ID_9067 = (ID_0 : \(x4395).(\(x4396).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4395 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4396 : *) : +)~_));
ID_9068 = 9.3f, ID_9067;
ID_9069 = (ID_9068 : -);
ID_9070 = 0, ID_9069;
ID_9071 = (ID_9070 : -);
ID_9072 = ID_9071, 2;
ID_9073 = (ID_9072 : pow);
ID_9074 = (ID_14 : \(x4397).(\(x4398).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4397 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4398 : *) : +)~_));
ID_9075 = 0, ID_9074;
ID_9076 = (ID_9075 : -);
ID_9077 = 0, ID_9076;
ID_9078 = (ID_9077 : -);
ID_9079 = ID_9078, 2;
ID_9080 = (ID_9079 : pow);
ID_9081 = ID_9073, ID_9080;
ID_9082 = (ID_9081 :> sqrt);
ID_9083 = ID_9082, 0;
ID_9084 = (ID_9083 : ==);
ID_9085 = ID_9084, ID_69;
ID_9086 = (ID_9085 : select2);
ID_9087 = (ID_0 : \(x4399).(\(x4400).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4399 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4400 : *) : +)~_));
ID_9088 = 9.3f, ID_9087;
ID_9089 = (ID_9088 : -);
ID_9090 = 0, ID_9089;
ID_9091 = (ID_9090 : -);
ID_9092 = (ID_0 : \(x4401).(\(x4402).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4401 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4402 : *) : +)~_));
ID_9093 = 9.3f, ID_9092;
ID_9094 = (ID_9093 : -);
ID_9095 = 0, ID_9094;
ID_9096 = (ID_9095 : -);
ID_9097 = ID_9096, 2;
ID_9098 = (ID_9097 : pow);
ID_9099 = (ID_14 : \(x4403).(\(x4404).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4403 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4404 : *) : +)~_));
ID_9100 = 0, ID_9099;
ID_9101 = (ID_9100 : -);
ID_9102 = 0, ID_9101;
ID_9103 = (ID_9102 : -);
ID_9104 = ID_9103, 2;
ID_9105 = (ID_9104 : pow);
ID_9106 = ID_9098, ID_9105;
ID_9107 = (ID_9106 :> sqrt);
ID_9108 = ID_9107, 0;
ID_9109 = (ID_9108 : <);
ID_9110 = ID_9107, 0.0001f;
ID_9111 = (ID_9110 : max);
ID_9112 = ID_9111, ID_9107;
ID_9113 = ID_9109, ID_9112;
ID_9114 = (ID_9113 : select2);
ID_9115 = ID_9091, ID_9114;
ID_9116 = (ID_9115 : /);
ID_9117 = ID_9116, 0;
ID_9118 = ID_9086, ID_9117;
ID_9119 = (ID_9118 : select2);
ID_9120 = ID_3261, ID_9119;
ID_9121 = (ID_9120 : *);
ID_9122 = (ID_0 : \(x4405).(\(x4406).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4405 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4406 : *) : +)~_));
ID_9123 = 9.3f, ID_9122;
ID_9124 = (ID_9123 : -);
ID_9125 = 0, ID_9124;
ID_9126 = (ID_9125 : -);
ID_9127 = ID_9126, 2;
ID_9128 = (ID_9127 : pow);
ID_9129 = (ID_14 : \(x4407).(\(x4408).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4407 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4408 : *) : +)~_));
ID_9130 = 0, ID_9129;
ID_9131 = (ID_9130 : -);
ID_9132 = 0, ID_9131;
ID_9133 = (ID_9132 : -);
ID_9134 = ID_9133, 2;
ID_9135 = (ID_9134 : pow);
ID_9136 = ID_9128, ID_9135;
ID_9137 = (ID_9136 :> sqrt);
ID_9138 = ID_9137, 0;
ID_9139 = (ID_9138 : ==);
ID_9140 = ID_9139, ID_69;
ID_9141 = (ID_9140 : select2);
ID_9142 = (ID_14 : \(x4409).(\(x4410).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4409 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4410 : *) : +)~_));
ID_9143 = 0, ID_9142;
ID_9144 = (ID_9143 : -);
ID_9145 = 0, ID_9144;
ID_9146 = (ID_9145 : -);
ID_9147 = (ID_0 : \(x4411).(\(x4412).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4411 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4412 : *) : +)~_));
ID_9148 = 9.3f, ID_9147;
ID_9149 = (ID_9148 : -);
ID_9150 = 0, ID_9149;
ID_9151 = (ID_9150 : -);
ID_9152 = ID_9151, 2;
ID_9153 = (ID_9152 : pow);
ID_9154 = (ID_14 : \(x4413).(\(x4414).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4413 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4414 : *) : +)~_));
ID_9155 = 0, ID_9154;
ID_9156 = (ID_9155 : -);
ID_9157 = 0, ID_9156;
ID_9158 = (ID_9157 : -);
ID_9159 = ID_9158, 2;
ID_9160 = (ID_9159 : pow);
ID_9161 = ID_9153, ID_9160;
ID_9162 = (ID_9161 :> sqrt);
ID_9163 = ID_9162, 0;
ID_9164 = (ID_9163 : <);
ID_9165 = ID_9162, 0.0001f;
ID_9166 = (ID_9165 : max);
ID_9167 = ID_9166, ID_9162;
ID_9168 = ID_9164, ID_9167;
ID_9169 = (ID_9168 : select2);
ID_9170 = ID_9146, ID_9169;
ID_9171 = (ID_9170 : /);
ID_9172 = ID_9171, 0;
ID_9173 = ID_9141, ID_9172;
ID_9174 = (ID_9173 : select2);
ID_9175 = ID_3268, ID_9174;
ID_9176 = (ID_9175 : *);
ID_9177 = ID_9121, ID_9176;
ID_9178 = (ID_9177 :> _);
ID_9179 = (ID_0 : \(x4415).(\(x4416).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4415 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4416 : *) : +)~_));
ID_9180 = 9.3f, ID_9179;
ID_9181 = (ID_9180 : -);
ID_9182 = 0, ID_9181;
ID_9183 = (ID_9182 : -);
ID_9184 = ID_9183, 2;
ID_9185 = (ID_9184 : pow);
ID_9186 = (ID_14 : \(x4417).(\(x4418).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4417 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4418 : *) : +)~_));
ID_9187 = 0, ID_9186;
ID_9188 = (ID_9187 : -);
ID_9189 = 0, ID_9188;
ID_9190 = (ID_9189 : -);
ID_9191 = ID_9190, 2;
ID_9192 = (ID_9191 : pow);
ID_9193 = ID_9185, ID_9192;
ID_9194 = (ID_9193 :> sqrt);
ID_9195 = ID_9194, 0;
ID_9196 = (ID_9195 : ==);
ID_9197 = ID_9196, ID_69;
ID_9198 = (ID_9197 : select2);
ID_9199 = (ID_0 : \(x4419).(\(x4420).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4419 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4420 : *) : +)~_));
ID_9200 = 9.3f, ID_9199;
ID_9201 = (ID_9200 : -);
ID_9202 = 0, ID_9201;
ID_9203 = (ID_9202 : -);
ID_9204 = (ID_0 : \(x4421).(\(x4422).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4421 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4422 : *) : +)~_));
ID_9205 = 9.3f, ID_9204;
ID_9206 = (ID_9205 : -);
ID_9207 = 0, ID_9206;
ID_9208 = (ID_9207 : -);
ID_9209 = ID_9208, 2;
ID_9210 = (ID_9209 : pow);
ID_9211 = (ID_14 : \(x4423).(\(x4424).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4423 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4424 : *) : +)~_));
ID_9212 = 0, ID_9211;
ID_9213 = (ID_9212 : -);
ID_9214 = 0, ID_9213;
ID_9215 = (ID_9214 : -);
ID_9216 = ID_9215, 2;
ID_9217 = (ID_9216 : pow);
ID_9218 = ID_9210, ID_9217;
ID_9219 = (ID_9218 :> sqrt);
ID_9220 = ID_9219, 0;
ID_9221 = (ID_9220 : <);
ID_9222 = ID_9219, 0.0001f;
ID_9223 = (ID_9222 : max);
ID_9224 = ID_9223, ID_9219;
ID_9225 = ID_9221, ID_9224;
ID_9226 = (ID_9225 : select2);
ID_9227 = ID_9203, ID_9226;
ID_9228 = (ID_9227 : /);
ID_9229 = ID_9228, 0;
ID_9230 = ID_9198, ID_9229;
ID_9231 = (ID_9230 : select2);
ID_9232 = ID_9231, 2;
ID_9233 = (ID_9232 : pow);
ID_9234 = (ID_0 : \(x4425).(\(x4426).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4425 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4426 : *) : +)~_));
ID_9235 = 9.3f, ID_9234;
ID_9236 = (ID_9235 : -);
ID_9237 = 0, ID_9236;
ID_9238 = (ID_9237 : -);
ID_9239 = ID_9238, 2;
ID_9240 = (ID_9239 : pow);
ID_9241 = (ID_14 : \(x4427).(\(x4428).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4427 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4428 : *) : +)~_));
ID_9242 = 0, ID_9241;
ID_9243 = (ID_9242 : -);
ID_9244 = 0, ID_9243;
ID_9245 = (ID_9244 : -);
ID_9246 = ID_9245, 2;
ID_9247 = (ID_9246 : pow);
ID_9248 = ID_9240, ID_9247;
ID_9249 = (ID_9248 :> sqrt);
ID_9250 = ID_9249, 0;
ID_9251 = (ID_9250 : ==);
ID_9252 = ID_9251, ID_69;
ID_9253 = (ID_9252 : select2);
ID_9254 = (ID_14 : \(x4429).(\(x4430).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4429 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4430 : *) : +)~_));
ID_9255 = 0, ID_9254;
ID_9256 = (ID_9255 : -);
ID_9257 = 0, ID_9256;
ID_9258 = (ID_9257 : -);
ID_9259 = (ID_0 : \(x4431).(\(x4432).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4431 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4432 : *) : +)~_));
ID_9260 = 9.3f, ID_9259;
ID_9261 = (ID_9260 : -);
ID_9262 = 0, ID_9261;
ID_9263 = (ID_9262 : -);
ID_9264 = ID_9263, 2;
ID_9265 = (ID_9264 : pow);
ID_9266 = (ID_14 : \(x4433).(\(x4434).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x4433 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x4434 : *) : +)~_));
ID_9267 = 0, ID_9266;
ID_9268 = (ID_9267 : -);
ID_9269 = 0, ID_9268;
ID_9270 = (ID_9269 : -);
ID_9271 = ID_9270, 2;
ID_9272 = (ID_9271 : pow);
ID_9273 = ID_9265, ID_9272;
ID_9274 = (ID_9273 :> sqrt);
ID_9275 = ID_9274, 0;
ID_9276 = (ID_9275 : <);
ID_9277 = ID_9274, 0.0001f;
ID_9278 = (ID_9277 : max);
ID_9279 = ID_9278, ID_9274;
ID_9280 = ID_9276, ID_9279;
ID_9281 = (ID_9280 : select2);
ID_9282 = ID_9258, ID_9281;
ID_9283 = (ID_9282 : /);
ID_9284 = ID_9283, 0;
ID_9285 = ID_9253, ID_9284;
ID_9286 = (ID_9285 : select2);
ID_9287 = ID_9286, 2;
ID_9288 = (ID_9287 : pow);
ID_9289 = ID_9233, ID_9288;
ID_9290 = (ID_9289 :> sqrt);
ID_9291 = ID_9290, ID_3272;
ID_9292 = (ID_9291 : *);
ID_9293 = ID_9292, 0;
ID_9294 = (ID_9293 : <);
ID_9295 = ID_9292, 0.0001f;
ID_9296 = (ID_9295 : max);
ID_9297 = ID_9296, ID_9292;
ID_9298 = ID_9294, ID_9297;
ID_9299 = (ID_9298 : select2);
ID_9300 = ID_9178, ID_9299;
ID_9301 = (ID_9300 : /);
ID_9302 = ID_9301, 0;
ID_9303 = ID_9066, ID_9302;
ID_9304 = (ID_9303 : select2);
ID_9305 = ID_9304, 0;
ID_9306 = (ID_9305 : <);
ID_9307 = ID_9304, 0.0001f;
ID_9308 = (ID_9307 : max);
ID_9309 = ID_9308, ID_9304;
ID_9310 = ID_9306, ID_9309;
ID_9311 = ID_9310 : select2;
ID_9312 = (ID_9311 : acos);
ID_9313 = ID_9312, 0;
ID_9314 = ID_9065, ID_9313;
ID_9315 = (ID_9314 : select2);
ID_9316 = ID_4279, ID_9315;
ID_9317 = ID_9316 : *;
ID_9318 = (ID_9317 : cos);
ID_9319 = ID_8809, ID_9318;
ID_9320 = (ID_9319 : *);
ID_9321 = _, ID_9320;
ID_9322 = (ID_9321 : *);
ID_9323 = ID_8808, ID_9322;
ID_9324 = ID_8297, ID_9323;
ID_9325 = ID_37, ID_9324;
ID_9326 = _ <: ID_9325;
ID_9327 = ID_9326 : \(x5470).(\(x5471).(\(x5472).(\(x5473).(((((x5470,x5471 : +),x5472 : +),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : -),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : +),x5473 : -),2 : /),((((x5470,x5471 : +),x5472 : -),x5473 : -),2 : /)))));
ID_9328 = \(x5476).(x5476,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),(0,(((((((hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),9.3f : -),2 : pow),(((hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),3.6f : -),2 : pow) : +),(((hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : + : sqrt),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),340 : /) : max) : min) : @) : ID_9327;
ID_9329 = (ID_7200 : ID_9328);
ID_9330 = ID_7, 6.7f;
ID_9331 = (ID_9330 : -);
ID_9332 = ID_9331, 2;
ID_9333 = (ID_9332 : pow);
ID_9334 = ID_5, ID_9333;
ID_9335 = (ID_9334 : +);
ID_9336 = ID_9335, ID_19;
ID_9337 = ID_9336 : +;
ID_9338 = (ID_9337 : sqrt);
ID_9339 = ID_9338, 1;
ID_9340 = ID_9339 : max;
ID_9341 = (ID_9340 : log10);
ID_9342 = 11, ID_9341;
ID_9343 = (ID_9342 : *);
ID_9344 = 0, ID_9343;
ID_9345 = (ID_9344 : -);
ID_9346 = ID_9345, 2e+01f;
ID_9347 = (ID_9346 : /);
ID_9348 = 1e+01f, ID_9347;
ID_9349 = (ID_9348 : pow);
ID_9350 = _, ID_9349;
ID_9351 = ID_9350 : *;
ID_9352 = ID_38, 6.7f;
ID_9353 = (ID_9352 : *);
ID_9354 = ID_9353, ID_43;
ID_9355 = (ID_9354 : -);
ID_9356 = ID_9355, 0;
ID_9357 = (ID_9356 : <);
ID_9358 = ID_9357, ID_48;
ID_9359 = (ID_9358 : select2);
ID_9360 = 6.7f, ID_58;
ID_9361 = (ID_9360 : -);
ID_9362 = 0, ID_9361;
ID_9363 = (ID_9362 : -);
ID_9364 = ID_9363, 2;
ID_9365 = (ID_9364 : pow);
ID_9366 = ID_57, ID_9365;
ID_9367 = (ID_9366 :> sqrt);
ID_9368 = ID_9367, 0;
ID_9369 = (ID_9368 : ==);
ID_9370 = ID_9369, ID_69;
ID_9371 = (ID_9370 : select2);
ID_9372 = (ID_0 : \(x5011).(\(x5012).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5011 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5012 : *) : +)~_));
ID_9373 = 7.3f, ID_9372;
ID_9374 = (ID_9373 : -);
ID_9375 = 0, ID_9374;
ID_9376 = (ID_9375 : -);
ID_9377 = ID_9376, 2;
ID_9378 = (ID_9377 : pow);
ID_9379 = (ID_6 : \(x5013).(\(x5014).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5013 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5014 : *) : +)~_));
ID_9380 = 6.7f, ID_9379;
ID_9381 = (ID_9380 : -);
ID_9382 = 0, ID_9381;
ID_9383 = (ID_9382 : -);
ID_9384 = ID_9383, 2;
ID_9385 = (ID_9384 : pow);
ID_9386 = ID_9378, ID_9385;
ID_9387 = (ID_9386 :> sqrt);
ID_9388 = ID_9387, 0;
ID_9389 = (ID_9388 : <);
ID_9390 = ID_9387, 0.0001f;
ID_9391 = (ID_9390 : max);
ID_9392 = ID_9391, ID_9387;
ID_9393 = ID_9389, ID_9392;
ID_9394 = (ID_9393 : select2);
ID_9395 = ID_76, ID_9394;
ID_9396 = (ID_9395 : /);
ID_9397 = ID_9396, 0;
ID_9398 = ID_9371, ID_9397;
ID_9399 = (ID_9398 : select2);
ID_9400 = ID_9399, 2;
ID_9401 = (ID_9400 : pow);
ID_9402 = 6.7f, ID_114;
ID_9403 = (ID_9402 : -);
ID_9404 = 0, ID_9403;
ID_9405 = (ID_9404 : -);
ID_9406 = ID_9405, 2;
ID_9407 = (ID_9406 : pow);
ID_9408 = ID_113, ID_9407;
ID_9409 = (ID_9408 :> sqrt);
ID_9410 = ID_9409, 0;
ID_9411 = (ID_9410 : ==);
ID_9412 = ID_9411, ID_69;
ID_9413 = (ID_9412 : select2);
ID_9414 = 6.7f, ID_127;
ID_9415 = (ID_9414 : -);
ID_9416 = 0, ID_9415;
ID_9417 = (ID_9416 : -);
ID_9418 = (ID_0 : \(x5015).(\(x5016).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5015 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5016 : *) : +)~_));
ID_9419 = 7.3f, ID_9418;
ID_9420 = (ID_9419 : -);
ID_9421 = 0, ID_9420;
ID_9422 = (ID_9421 : -);
ID_9423 = ID_9422, 2;
ID_9424 = (ID_9423 : pow);
ID_9425 = (ID_6 : \(x5017).(\(x5018).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5017 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5018 : *) : +)~_));
ID_9426 = 6.7f, ID_9425;
ID_9427 = (ID_9426 : -);
ID_9428 = 0, ID_9427;
ID_9429 = (ID_9428 : -);
ID_9430 = ID_9429, 2;
ID_9431 = (ID_9430 : pow);
ID_9432 = ID_9424, ID_9431;
ID_9433 = (ID_9432 :> sqrt);
ID_9434 = ID_9433, 0;
ID_9435 = (ID_9434 : <);
ID_9436 = ID_9433, 0.0001f;
ID_9437 = (ID_9436 : max);
ID_9438 = ID_9437, ID_9433;
ID_9439 = ID_9435, ID_9438;
ID_9440 = (ID_9439 : select2);
ID_9441 = ID_9417, ID_9440;
ID_9442 = (ID_9441 : /);
ID_9443 = ID_9442, 0;
ID_9444 = ID_9413, ID_9443;
ID_9445 = (ID_9444 : select2);
ID_9446 = ID_9445, 2;
ID_9447 = (ID_9446 : pow);
ID_9448 = ID_9401, ID_9447;
ID_9449 = (ID_9448 :> sqrt);
ID_9450 = 6.7f, ID_172;
ID_9451 = (ID_9450 : /);
ID_9452 = ID_9451, 0;
ID_9453 = ID_169, ID_9452;
ID_9454 = (ID_9453 : select2);
ID_9455 = ID_9454, 2;
ID_9456 = (ID_9455 : pow);
ID_9457 = ID_179, ID_9456;
ID_9458 = (ID_9457 :> sqrt);
ID_9459 = ID_9449, ID_9458;
ID_9460 = (ID_9459 : *);
ID_9461 = ID_9460, 0;
ID_9462 = (ID_9461 : ==);
ID_9463 = 6.7f, ID_200;
ID_9464 = (ID_9463 : -);
ID_9465 = 0, ID_9464;
ID_9466 = (ID_9465 : -);
ID_9467 = ID_9466, 2;
ID_9468 = (ID_9467 : pow);
ID_9469 = ID_199, ID_9468;
ID_9470 = (ID_9469 :> sqrt);
ID_9471 = ID_9470, 0;
ID_9472 = (ID_9471 : ==);
ID_9473 = ID_9472, ID_69;
ID_9474 = (ID_9473 : select2);
ID_9475 = (ID_0 : \(x5019).(\(x5020).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5019 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5020 : *) : +)~_));
ID_9476 = 7.3f, ID_9475;
ID_9477 = (ID_9476 : -);
ID_9478 = 0, ID_9477;
ID_9479 = (ID_9478 : -);
ID_9480 = ID_9479, 2;
ID_9481 = (ID_9480 : pow);
ID_9482 = (ID_6 : \(x5021).(\(x5022).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5021 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5022 : *) : +)~_));
ID_9483 = 6.7f, ID_9482;
ID_9484 = (ID_9483 : -);
ID_9485 = 0, ID_9484;
ID_9486 = (ID_9485 : -);
ID_9487 = ID_9486, 2;
ID_9488 = (ID_9487 : pow);
ID_9489 = ID_9481, ID_9488;
ID_9490 = (ID_9489 :> sqrt);
ID_9491 = ID_9490, 0;
ID_9492 = (ID_9491 : <);
ID_9493 = ID_9490, 0.0001f;
ID_9494 = (ID_9493 : max);
ID_9495 = ID_9494, ID_9490;
ID_9496 = ID_9492, ID_9495;
ID_9497 = (ID_9496 : select2);
ID_9498 = ID_217, ID_9497;
ID_9499 = (ID_9498 : /);
ID_9500 = ID_9499, 0;
ID_9501 = ID_9474, ID_9500;
ID_9502 = (ID_9501 : select2);
ID_9503 = ID_177, ID_9502;
ID_9504 = (ID_9503 : *);
ID_9505 = 6.7f, ID_255;
ID_9506 = (ID_9505 : -);
ID_9507 = 0, ID_9506;
ID_9508 = (ID_9507 : -);
ID_9509 = ID_9508, 2;
ID_9510 = (ID_9509 : pow);
ID_9511 = ID_254, ID_9510;
ID_9512 = (ID_9511 :> sqrt);
ID_9513 = ID_9512, 0;
ID_9514 = (ID_9513 : ==);
ID_9515 = ID_9514, ID_69;
ID_9516 = (ID_9515 : select2);
ID_9517 = 6.7f, ID_268;
ID_9518 = (ID_9517 : -);
ID_9519 = 0, ID_9518;
ID_9520 = (ID_9519 : -);
ID_9521 = (ID_0 : \(x5023).(\(x5024).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5023 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5024 : *) : +)~_));
ID_9522 = 7.3f, ID_9521;
ID_9523 = (ID_9522 : -);
ID_9524 = 0, ID_9523;
ID_9525 = (ID_9524 : -);
ID_9526 = ID_9525, 2;
ID_9527 = (ID_9526 : pow);
ID_9528 = (ID_6 : \(x5025).(\(x5026).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5025 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5026 : *) : +)~_));
ID_9529 = 6.7f, ID_9528;
ID_9530 = (ID_9529 : -);
ID_9531 = 0, ID_9530;
ID_9532 = (ID_9531 : -);
ID_9533 = ID_9532, 2;
ID_9534 = (ID_9533 : pow);
ID_9535 = ID_9527, ID_9534;
ID_9536 = (ID_9535 :> sqrt);
ID_9537 = ID_9536, 0;
ID_9538 = (ID_9537 : <);
ID_9539 = ID_9536, 0.0001f;
ID_9540 = (ID_9539 : max);
ID_9541 = ID_9540, ID_9536;
ID_9542 = ID_9538, ID_9541;
ID_9543 = (ID_9542 : select2);
ID_9544 = ID_9520, ID_9543;
ID_9545 = (ID_9544 : /);
ID_9546 = ID_9545, 0;
ID_9547 = ID_9516, ID_9546;
ID_9548 = (ID_9547 : select2);
ID_9549 = ID_9454, ID_9548;
ID_9550 = (ID_9549 : *);
ID_9551 = ID_9504, ID_9550;
ID_9552 = (ID_9551 :> _);
ID_9553 = (ID_0 : \(x5027).(\(x5028).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5027 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5028 : *) : +)~_));
ID_9554 = 7.3f, ID_9553;
ID_9555 = (ID_9554 : -);
ID_9556 = 0, ID_9555;
ID_9557 = (ID_9556 : -);
ID_9558 = ID_9557, 2;
ID_9559 = (ID_9558 : pow);
ID_9560 = (ID_6 : \(x5029).(\(x5030).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5029 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5030 : *) : +)~_));
ID_9561 = 6.7f, ID_9560;
ID_9562 = (ID_9561 : -);
ID_9563 = 0, ID_9562;
ID_9564 = (ID_9563 : -);
ID_9565 = ID_9564, 2;
ID_9566 = (ID_9565 : pow);
ID_9567 = ID_9559, ID_9566;
ID_9568 = (ID_9567 :> sqrt);
ID_9569 = ID_9568, 0;
ID_9570 = (ID_9569 : ==);
ID_9571 = ID_9570, ID_69;
ID_9572 = (ID_9571 : select2);
ID_9573 = (ID_0 : \(x5031).(\(x5032).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5031 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5032 : *) : +)~_));
ID_9574 = 7.3f, ID_9573;
ID_9575 = (ID_9574 : -);
ID_9576 = 0, ID_9575;
ID_9577 = (ID_9576 : -);
ID_9578 = (ID_0 : \(x5033).(\(x5034).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5033 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5034 : *) : +)~_));
ID_9579 = 7.3f, ID_9578;
ID_9580 = (ID_9579 : -);
ID_9581 = 0, ID_9580;
ID_9582 = (ID_9581 : -);
ID_9583 = ID_9582, 2;
ID_9584 = (ID_9583 : pow);
ID_9585 = (ID_6 : \(x5035).(\(x5036).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5035 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5036 : *) : +)~_));
ID_9586 = 6.7f, ID_9585;
ID_9587 = (ID_9586 : -);
ID_9588 = 0, ID_9587;
ID_9589 = (ID_9588 : -);
ID_9590 = ID_9589, 2;
ID_9591 = (ID_9590 : pow);
ID_9592 = ID_9584, ID_9591;
ID_9593 = (ID_9592 :> sqrt);
ID_9594 = ID_9593, 0;
ID_9595 = (ID_9594 : <);
ID_9596 = ID_9593, 0.0001f;
ID_9597 = (ID_9596 : max);
ID_9598 = ID_9597, ID_9593;
ID_9599 = ID_9595, ID_9598;
ID_9600 = (ID_9599 : select2);
ID_9601 = ID_9577, ID_9600;
ID_9602 = (ID_9601 : /);
ID_9603 = ID_9602, 0;
ID_9604 = ID_9572, ID_9603;
ID_9605 = (ID_9604 : select2);
ID_9606 = ID_9605, 2;
ID_9607 = (ID_9606 : pow);
ID_9608 = (ID_0 : \(x5037).(\(x5038).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5037 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5038 : *) : +)~_));
ID_9609 = 7.3f, ID_9608;
ID_9610 = (ID_9609 : -);
ID_9611 = 0, ID_9610;
ID_9612 = (ID_9611 : -);
ID_9613 = ID_9612, 2;
ID_9614 = (ID_9613 : pow);
ID_9615 = (ID_6 : \(x5039).(\(x5040).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5039 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5040 : *) : +)~_));
ID_9616 = 6.7f, ID_9615;
ID_9617 = (ID_9616 : -);
ID_9618 = 0, ID_9617;
ID_9619 = (ID_9618 : -);
ID_9620 = ID_9619, 2;
ID_9621 = (ID_9620 : pow);
ID_9622 = ID_9614, ID_9621;
ID_9623 = (ID_9622 :> sqrt);
ID_9624 = ID_9623, 0;
ID_9625 = (ID_9624 : ==);
ID_9626 = ID_9625, ID_69;
ID_9627 = (ID_9626 : select2);
ID_9628 = (ID_6 : \(x5041).(\(x5042).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5041 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5042 : *) : +)~_));
ID_9629 = 6.7f, ID_9628;
ID_9630 = (ID_9629 : -);
ID_9631 = 0, ID_9630;
ID_9632 = (ID_9631 : -);
ID_9633 = (ID_0 : \(x5043).(\(x5044).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5043 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5044 : *) : +)~_));
ID_9634 = 7.3f, ID_9633;
ID_9635 = (ID_9634 : -);
ID_9636 = 0, ID_9635;
ID_9637 = (ID_9636 : -);
ID_9638 = ID_9637, 2;
ID_9639 = (ID_9638 : pow);
ID_9640 = (ID_6 : \(x5045).(\(x5046).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5045 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5046 : *) : +)~_));
ID_9641 = 6.7f, ID_9640;
ID_9642 = (ID_9641 : -);
ID_9643 = 0, ID_9642;
ID_9644 = (ID_9643 : -);
ID_9645 = ID_9644, 2;
ID_9646 = (ID_9645 : pow);
ID_9647 = ID_9639, ID_9646;
ID_9648 = (ID_9647 :> sqrt);
ID_9649 = ID_9648, 0;
ID_9650 = (ID_9649 : <);
ID_9651 = ID_9648, 0.0001f;
ID_9652 = (ID_9651 : max);
ID_9653 = ID_9652, ID_9648;
ID_9654 = ID_9650, ID_9653;
ID_9655 = (ID_9654 : select2);
ID_9656 = ID_9632, ID_9655;
ID_9657 = (ID_9656 : /);
ID_9658 = ID_9657, 0;
ID_9659 = ID_9627, ID_9658;
ID_9660 = (ID_9659 : select2);
ID_9661 = ID_9660, 2;
ID_9662 = (ID_9661 : pow);
ID_9663 = ID_9607, ID_9662;
ID_9664 = (ID_9663 :> sqrt);
ID_9665 = ID_9664, ID_9458;
ID_9666 = (ID_9665 : *);
ID_9667 = ID_9666, 0;
ID_9668 = (ID_9667 : <);
ID_9669 = ID_9666, 0.0001f;
ID_9670 = (ID_9669 : max);
ID_9671 = ID_9670, ID_9666;
ID_9672 = ID_9668, ID_9671;
ID_9673 = (ID_9672 : select2);
ID_9674 = ID_9552, ID_9673;
ID_9675 = (ID_9674 : /);
ID_9676 = ID_9675, 0;
ID_9677 = ID_9462, ID_9676;
ID_9678 = (ID_9677 : select2);
ID_9679 = ID_9678, 0;
ID_9680 = (ID_9679 : ==);
ID_9681 = (ID_9667 : ==);
ID_9682 = (ID_0 : \(x5047).(\(x5048).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5047 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5048 : *) : +)~_));
ID_9683 = 7.3f, ID_9682;
ID_9684 = (ID_9683 : -);
ID_9685 = 0, ID_9684;
ID_9686 = (ID_9685 : -);
ID_9687 = ID_9686, 2;
ID_9688 = (ID_9687 : pow);
ID_9689 = (ID_6 : \(x5049).(\(x5050).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5049 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5050 : *) : +)~_));
ID_9690 = 6.7f, ID_9689;
ID_9691 = (ID_9690 : -);
ID_9692 = 0, ID_9691;
ID_9693 = (ID_9692 : -);
ID_9694 = ID_9693, 2;
ID_9695 = (ID_9694 : pow);
ID_9696 = ID_9688, ID_9695;
ID_9697 = (ID_9696 :> sqrt);
ID_9698 = ID_9697, 0;
ID_9699 = (ID_9698 : ==);
ID_9700 = ID_9699, ID_69;
ID_9701 = (ID_9700 : select2);
ID_9702 = (ID_0 : \(x5051).(\(x5052).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5051 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5052 : *) : +)~_));
ID_9703 = 7.3f, ID_9702;
ID_9704 = (ID_9703 : -);
ID_9705 = 0, ID_9704;
ID_9706 = (ID_9705 : -);
ID_9707 = (ID_0 : \(x5053).(\(x5054).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5053 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5054 : *) : +)~_));
ID_9708 = 7.3f, ID_9707;
ID_9709 = (ID_9708 : -);
ID_9710 = 0, ID_9709;
ID_9711 = (ID_9710 : -);
ID_9712 = ID_9711, 2;
ID_9713 = (ID_9712 : pow);
ID_9714 = (ID_6 : \(x5055).(\(x5056).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5055 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5056 : *) : +)~_));
ID_9715 = 6.7f, ID_9714;
ID_9716 = (ID_9715 : -);
ID_9717 = 0, ID_9716;
ID_9718 = (ID_9717 : -);
ID_9719 = ID_9718, 2;
ID_9720 = (ID_9719 : pow);
ID_9721 = ID_9713, ID_9720;
ID_9722 = (ID_9721 :> sqrt);
ID_9723 = ID_9722, 0;
ID_9724 = (ID_9723 : <);
ID_9725 = ID_9722, 0.0001f;
ID_9726 = (ID_9725 : max);
ID_9727 = ID_9726, ID_9722;
ID_9728 = ID_9724, ID_9727;
ID_9729 = (ID_9728 : select2);
ID_9730 = ID_9706, ID_9729;
ID_9731 = (ID_9730 : /);
ID_9732 = ID_9731, 0;
ID_9733 = ID_9701, ID_9732;
ID_9734 = (ID_9733 : select2);
ID_9735 = ID_177, ID_9734;
ID_9736 = (ID_9735 : *);
ID_9737 = (ID_0 : \(x5057).(\(x5058).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5057 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5058 : *) : +)~_));
ID_9738 = 7.3f, ID_9737;
ID_9739 = (ID_9738 : -);
ID_9740 = 0, ID_9739;
ID_9741 = (ID_9740 : -);
ID_9742 = ID_9741, 2;
ID_9743 = (ID_9742 : pow);
ID_9744 = (ID_6 : \(x5059).(\(x5060).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5059 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5060 : *) : +)~_));
ID_9745 = 6.7f, ID_9744;
ID_9746 = (ID_9745 : -);
ID_9747 = 0, ID_9746;
ID_9748 = (ID_9747 : -);
ID_9749 = ID_9748, 2;
ID_9750 = (ID_9749 : pow);
ID_9751 = ID_9743, ID_9750;
ID_9752 = (ID_9751 :> sqrt);
ID_9753 = ID_9752, 0;
ID_9754 = (ID_9753 : ==);
ID_9755 = ID_9754, ID_69;
ID_9756 = (ID_9755 : select2);
ID_9757 = (ID_6 : \(x5061).(\(x5062).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5061 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5062 : *) : +)~_));
ID_9758 = 6.7f, ID_9757;
ID_9759 = (ID_9758 : -);
ID_9760 = 0, ID_9759;
ID_9761 = (ID_9760 : -);
ID_9762 = (ID_0 : \(x5063).(\(x5064).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5063 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5064 : *) : +)~_));
ID_9763 = 7.3f, ID_9762;
ID_9764 = (ID_9763 : -);
ID_9765 = 0, ID_9764;
ID_9766 = (ID_9765 : -);
ID_9767 = ID_9766, 2;
ID_9768 = (ID_9767 : pow);
ID_9769 = (ID_6 : \(x5065).(\(x5066).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5065 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5066 : *) : +)~_));
ID_9770 = 6.7f, ID_9769;
ID_9771 = (ID_9770 : -);
ID_9772 = 0, ID_9771;
ID_9773 = (ID_9772 : -);
ID_9774 = ID_9773, 2;
ID_9775 = (ID_9774 : pow);
ID_9776 = ID_9768, ID_9775;
ID_9777 = (ID_9776 :> sqrt);
ID_9778 = ID_9777, 0;
ID_9779 = (ID_9778 : <);
ID_9780 = ID_9777, 0.0001f;
ID_9781 = (ID_9780 : max);
ID_9782 = ID_9781, ID_9777;
ID_9783 = ID_9779, ID_9782;
ID_9784 = (ID_9783 : select2);
ID_9785 = ID_9761, ID_9784;
ID_9786 = (ID_9785 : /);
ID_9787 = ID_9786, 0;
ID_9788 = ID_9756, ID_9787;
ID_9789 = (ID_9788 : select2);
ID_9790 = ID_9454, ID_9789;
ID_9791 = (ID_9790 : *);
ID_9792 = ID_9736, ID_9791;
ID_9793 = (ID_9792 :> _);
ID_9794 = (ID_0 : \(x5067).(\(x5068).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5067 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5068 : *) : +)~_));
ID_9795 = 7.3f, ID_9794;
ID_9796 = (ID_9795 : -);
ID_9797 = 0, ID_9796;
ID_9798 = (ID_9797 : -);
ID_9799 = ID_9798, 2;
ID_9800 = (ID_9799 : pow);
ID_9801 = (ID_6 : \(x5069).(\(x5070).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5069 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5070 : *) : +)~_));
ID_9802 = 6.7f, ID_9801;
ID_9803 = (ID_9802 : -);
ID_9804 = 0, ID_9803;
ID_9805 = (ID_9804 : -);
ID_9806 = ID_9805, 2;
ID_9807 = (ID_9806 : pow);
ID_9808 = ID_9800, ID_9807;
ID_9809 = (ID_9808 :> sqrt);
ID_9810 = ID_9809, 0;
ID_9811 = (ID_9810 : ==);
ID_9812 = ID_9811, ID_69;
ID_9813 = (ID_9812 : select2);
ID_9814 = (ID_0 : \(x5071).(\(x5072).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5071 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5072 : *) : +)~_));
ID_9815 = 7.3f, ID_9814;
ID_9816 = (ID_9815 : -);
ID_9817 = 0, ID_9816;
ID_9818 = (ID_9817 : -);
ID_9819 = (ID_0 : \(x5073).(\(x5074).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5073 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5074 : *) : +)~_));
ID_9820 = 7.3f, ID_9819;
ID_9821 = (ID_9820 : -);
ID_9822 = 0, ID_9821;
ID_9823 = (ID_9822 : -);
ID_9824 = ID_9823, 2;
ID_9825 = (ID_9824 : pow);
ID_9826 = (ID_6 : \(x5075).(\(x5076).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5075 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5076 : *) : +)~_));
ID_9827 = 6.7f, ID_9826;
ID_9828 = (ID_9827 : -);
ID_9829 = 0, ID_9828;
ID_9830 = (ID_9829 : -);
ID_9831 = ID_9830, 2;
ID_9832 = (ID_9831 : pow);
ID_9833 = ID_9825, ID_9832;
ID_9834 = (ID_9833 :> sqrt);
ID_9835 = ID_9834, 0;
ID_9836 = (ID_9835 : <);
ID_9837 = ID_9834, 0.0001f;
ID_9838 = (ID_9837 : max);
ID_9839 = ID_9838, ID_9834;
ID_9840 = ID_9836, ID_9839;
ID_9841 = (ID_9840 : select2);
ID_9842 = ID_9818, ID_9841;
ID_9843 = (ID_9842 : /);
ID_9844 = ID_9843, 0;
ID_9845 = ID_9813, ID_9844;
ID_9846 = (ID_9845 : select2);
ID_9847 = ID_9846, 2;
ID_9848 = (ID_9847 : pow);
ID_9849 = (ID_0 : \(x5077).(\(x5078).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5077 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5078 : *) : +)~_));
ID_9850 = 7.3f, ID_9849;
ID_9851 = (ID_9850 : -);
ID_9852 = 0, ID_9851;
ID_9853 = (ID_9852 : -);
ID_9854 = ID_9853, 2;
ID_9855 = (ID_9854 : pow);
ID_9856 = (ID_6 : \(x5079).(\(x5080).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5079 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5080 : *) : +)~_));
ID_9857 = 6.7f, ID_9856;
ID_9858 = (ID_9857 : -);
ID_9859 = 0, ID_9858;
ID_9860 = (ID_9859 : -);
ID_9861 = ID_9860, 2;
ID_9862 = (ID_9861 : pow);
ID_9863 = ID_9855, ID_9862;
ID_9864 = (ID_9863 :> sqrt);
ID_9865 = ID_9864, 0;
ID_9866 = (ID_9865 : ==);
ID_9867 = ID_9866, ID_69;
ID_9868 = (ID_9867 : select2);
ID_9869 = (ID_6 : \(x5081).(\(x5082).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5081 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5082 : *) : +)~_));
ID_9870 = 6.7f, ID_9869;
ID_9871 = (ID_9870 : -);
ID_9872 = 0, ID_9871;
ID_9873 = (ID_9872 : -);
ID_9874 = (ID_0 : \(x5083).(\(x5084).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5083 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5084 : *) : +)~_));
ID_9875 = 7.3f, ID_9874;
ID_9876 = (ID_9875 : -);
ID_9877 = 0, ID_9876;
ID_9878 = (ID_9877 : -);
ID_9879 = ID_9878, 2;
ID_9880 = (ID_9879 : pow);
ID_9881 = (ID_6 : \(x5085).(\(x5086).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5085 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5086 : *) : +)~_));
ID_9882 = 6.7f, ID_9881;
ID_9883 = (ID_9882 : -);
ID_9884 = 0, ID_9883;
ID_9885 = (ID_9884 : -);
ID_9886 = ID_9885, 2;
ID_9887 = (ID_9886 : pow);
ID_9888 = ID_9880, ID_9887;
ID_9889 = (ID_9888 :> sqrt);
ID_9890 = ID_9889, 0;
ID_9891 = (ID_9890 : <);
ID_9892 = ID_9889, 0.0001f;
ID_9893 = (ID_9892 : max);
ID_9894 = ID_9893, ID_9889;
ID_9895 = ID_9891, ID_9894;
ID_9896 = (ID_9895 : select2);
ID_9897 = ID_9873, ID_9896;
ID_9898 = (ID_9897 : /);
ID_9899 = ID_9898, 0;
ID_9900 = ID_9868, ID_9899;
ID_9901 = (ID_9900 : select2);
ID_9902 = ID_9901, 2;
ID_9903 = (ID_9902 : pow);
ID_9904 = ID_9848, ID_9903;
ID_9905 = (ID_9904 :> sqrt);
ID_9906 = ID_9905, ID_9458;
ID_9907 = (ID_9906 : *);
ID_9908 = ID_9907, 0;
ID_9909 = (ID_9908 : <);
ID_9910 = ID_9907, 0.0001f;
ID_9911 = (ID_9910 : max);
ID_9912 = ID_9911, ID_9907;
ID_9913 = ID_9909, ID_9912;
ID_9914 = (ID_9913 : select2);
ID_9915 = ID_9793, ID_9914;
ID_9916 = (ID_9915 : /);
ID_9917 = ID_9916, 0;
ID_9918 = ID_9681, ID_9917;
ID_9919 = (ID_9918 : select2);
ID_9920 = ID_9919, 0;
ID_9921 = (ID_9920 : <);
ID_9922 = ID_9919, 0.0001f;
ID_9923 = (ID_9922 : max);
ID_9924 = ID_9923, ID_9919;
ID_9925 = ID_9921, ID_9924;
ID_9926 = ID_9925 : select2;
ID_9927 = (ID_9926 : acos);
ID_9928 = ID_9927, 0;
ID_9929 = ID_9680, ID_9928;
ID_9930 = (ID_9929 : select2);
ID_9931 = ID_9359, ID_9930;
ID_9932 = (ID_9931 : *);
ID_9933 = ID_9932, 0;
ID_9934 = ID_9933 : +;
ID_9935 = (ID_9934 : sin);
ID_9936 = (ID_0 : \(x5087).(\(x5088).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5087 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5088 : *) : +)~_));
ID_9937 = 7.3f, ID_9936;
ID_9938 = (ID_9937 : -);
ID_9939 = 0, ID_9938;
ID_9940 = (ID_9939 : -);
ID_9941 = ID_9940, 2;
ID_9942 = (ID_9941 : pow);
ID_9943 = (ID_14 : \(x5089).(\(x5090).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5089 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5090 : *) : +)~_));
ID_9944 = 0, ID_9943;
ID_9945 = (ID_9944 : -);
ID_9946 = 0, ID_9945;
ID_9947 = (ID_9946 : -);
ID_9948 = ID_9947, 2;
ID_9949 = (ID_9948 : pow);
ID_9950 = ID_9942, ID_9949;
ID_9951 = (ID_9950 :> sqrt);
ID_9952 = ID_9951, 0;
ID_9953 = (ID_9952 : <);
ID_9954 = ID_9951, 0.0001f;
ID_9955 = (ID_9954 : max);
ID_9956 = ID_9955, ID_9951;
ID_9957 = ID_9953, ID_9956;
ID_9958 = (ID_9957 : select2);
ID_9959 = ID_76, ID_9958;
ID_9960 = (ID_9959 : /);
ID_9961 = ID_9960, 0;
ID_9962 = ID_712, ID_9961;
ID_9963 = (ID_9962 : select2);
ID_9964 = ID_9963, 2;
ID_9965 = (ID_9964 : pow);
ID_9966 = (ID_0 : \(x5091).(\(x5092).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5091 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5092 : *) : +)~_));
ID_9967 = 7.3f, ID_9966;
ID_9968 = (ID_9967 : -);
ID_9969 = 0, ID_9968;
ID_9970 = (ID_9969 : -);
ID_9971 = ID_9970, 2;
ID_9972 = (ID_9971 : pow);
ID_9973 = (ID_14 : \(x5093).(\(x5094).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5093 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5094 : *) : +)~_));
ID_9974 = 0, ID_9973;
ID_9975 = (ID_9974 : -);
ID_9976 = 0, ID_9975;
ID_9977 = (ID_9976 : -);
ID_9978 = ID_9977, 2;
ID_9979 = (ID_9978 : pow);
ID_9980 = ID_9972, ID_9979;
ID_9981 = (ID_9980 :> sqrt);
ID_9982 = ID_9981, 0;
ID_9983 = (ID_9982 : <);
ID_9984 = ID_9981, 0.0001f;
ID_9985 = (ID_9984 : max);
ID_9986 = ID_9985, ID_9981;
ID_9987 = ID_9983, ID_9986;
ID_9988 = (ID_9987 : select2);
ID_9989 = ID_760, ID_9988;
ID_9990 = (ID_9989 : /);
ID_9991 = ID_9990, 0;
ID_9992 = ID_755, ID_9991;
ID_9993 = (ID_9992 : select2);
ID_9994 = ID_9993, 2;
ID_9995 = (ID_9994 : pow);
ID_9996 = ID_9965, ID_9995;
ID_9997 = (ID_9996 :> sqrt);
ID_9998 = ID_9997, ID_817;
ID_9999 = (ID_9998 : *);
ID_10000 = ID_9999, 0;
ID_10001 = (ID_10000 : ==);
ID_10002 = (ID_0 : \(x5095).(\(x5096).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5095 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5096 : *) : +)~_));
ID_10003 = 7.3f, ID_10002;
ID_10004 = (ID_10003 : -);
ID_10005 = 0, ID_10004;
ID_10006 = (ID_10005 : -);
ID_10007 = ID_10006, 2;
ID_10008 = (ID_10007 : pow);
ID_10009 = (ID_14 : \(x5097).(\(x5098).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5097 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5098 : *) : +)~_));
ID_10010 = 0, ID_10009;
ID_10011 = (ID_10010 : -);
ID_10012 = 0, ID_10011;
ID_10013 = (ID_10012 : -);
ID_10014 = ID_10013, 2;
ID_10015 = (ID_10014 : pow);
ID_10016 = ID_10008, ID_10015;
ID_10017 = (ID_10016 :> sqrt);
ID_10018 = ID_10017, 0;
ID_10019 = (ID_10018 : <);
ID_10020 = ID_10017, 0.0001f;
ID_10021 = (ID_10020 : max);
ID_10022 = ID_10021, ID_10017;
ID_10023 = ID_10019, ID_10022;
ID_10024 = (ID_10023 : select2);
ID_10025 = ID_217, ID_10024;
ID_10026 = (ID_10025 : /);
ID_10027 = ID_10026, 0;
ID_10028 = ID_834, ID_10027;
ID_10029 = (ID_10028 : select2);
ID_10030 = ID_806, ID_10029;
ID_10031 = (ID_10030 : *);
ID_10032 = (ID_0 : \(x5099).(\(x5100).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5099 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5100 : *) : +)~_));
ID_10033 = 7.3f, ID_10032;
ID_10034 = (ID_10033 : -);
ID_10035 = 0, ID_10034;
ID_10036 = (ID_10035 : -);
ID_10037 = ID_10036, 2;
ID_10038 = (ID_10037 : pow);
ID_10039 = (ID_14 : \(x5101).(\(x5102).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5101 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5102 : *) : +)~_));
ID_10040 = 0, ID_10039;
ID_10041 = (ID_10040 : -);
ID_10042 = 0, ID_10041;
ID_10043 = (ID_10042 : -);
ID_10044 = ID_10043, 2;
ID_10045 = (ID_10044 : pow);
ID_10046 = ID_10038, ID_10045;
ID_10047 = (ID_10046 :> sqrt);
ID_10048 = ID_10047, 0;
ID_10049 = (ID_10048 : <);
ID_10050 = ID_10047, 0.0001f;
ID_10051 = (ID_10050 : max);
ID_10052 = ID_10051, ID_10047;
ID_10053 = ID_10049, ID_10052;
ID_10054 = (ID_10053 : select2);
ID_10055 = ID_882, ID_10054;
ID_10056 = (ID_10055 : /);
ID_10057 = ID_10056, 0;
ID_10058 = ID_877, ID_10057;
ID_10059 = (ID_10058 : select2);
ID_10060 = ID_813, ID_10059;
ID_10061 = (ID_10060 : *);
ID_10062 = ID_10031, ID_10061;
ID_10063 = (ID_10062 :> _);
ID_10064 = (ID_0 : \(x5103).(\(x5104).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5103 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5104 : *) : +)~_));
ID_10065 = 7.3f, ID_10064;
ID_10066 = (ID_10065 : -);
ID_10067 = 0, ID_10066;
ID_10068 = (ID_10067 : -);
ID_10069 = ID_10068, 2;
ID_10070 = (ID_10069 : pow);
ID_10071 = (ID_14 : \(x5105).(\(x5106).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5105 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5106 : *) : +)~_));
ID_10072 = 0, ID_10071;
ID_10073 = (ID_10072 : -);
ID_10074 = 0, ID_10073;
ID_10075 = (ID_10074 : -);
ID_10076 = ID_10075, 2;
ID_10077 = (ID_10076 : pow);
ID_10078 = ID_10070, ID_10077;
ID_10079 = (ID_10078 :> sqrt);
ID_10080 = ID_10079, 0;
ID_10081 = (ID_10080 : ==);
ID_10082 = ID_10081, ID_69;
ID_10083 = (ID_10082 : select2);
ID_10084 = (ID_0 : \(x5107).(\(x5108).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5107 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5108 : *) : +)~_));
ID_10085 = 7.3f, ID_10084;
ID_10086 = (ID_10085 : -);
ID_10087 = 0, ID_10086;
ID_10088 = (ID_10087 : -);
ID_10089 = (ID_0 : \(x5109).(\(x5110).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5109 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5110 : *) : +)~_));
ID_10090 = 7.3f, ID_10089;
ID_10091 = (ID_10090 : -);
ID_10092 = 0, ID_10091;
ID_10093 = (ID_10092 : -);
ID_10094 = ID_10093, 2;
ID_10095 = (ID_10094 : pow);
ID_10096 = (ID_14 : \(x5111).(\(x5112).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5111 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5112 : *) : +)~_));
ID_10097 = 0, ID_10096;
ID_10098 = (ID_10097 : -);
ID_10099 = 0, ID_10098;
ID_10100 = (ID_10099 : -);
ID_10101 = ID_10100, 2;
ID_10102 = (ID_10101 : pow);
ID_10103 = ID_10095, ID_10102;
ID_10104 = (ID_10103 :> sqrt);
ID_10105 = ID_10104, 0;
ID_10106 = (ID_10105 : <);
ID_10107 = ID_10104, 0.0001f;
ID_10108 = (ID_10107 : max);
ID_10109 = ID_10108, ID_10104;
ID_10110 = ID_10106, ID_10109;
ID_10111 = (ID_10110 : select2);
ID_10112 = ID_10088, ID_10111;
ID_10113 = (ID_10112 : /);
ID_10114 = ID_10113, 0;
ID_10115 = ID_10083, ID_10114;
ID_10116 = (ID_10115 : select2);
ID_10117 = ID_10116, 2;
ID_10118 = (ID_10117 : pow);
ID_10119 = (ID_0 : \(x5113).(\(x5114).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5113 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5114 : *) : +)~_));
ID_10120 = 7.3f, ID_10119;
ID_10121 = (ID_10120 : -);
ID_10122 = 0, ID_10121;
ID_10123 = (ID_10122 : -);
ID_10124 = ID_10123, 2;
ID_10125 = (ID_10124 : pow);
ID_10126 = (ID_14 : \(x5115).(\(x5116).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5115 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5116 : *) : +)~_));
ID_10127 = 0, ID_10126;
ID_10128 = (ID_10127 : -);
ID_10129 = 0, ID_10128;
ID_10130 = (ID_10129 : -);
ID_10131 = ID_10130, 2;
ID_10132 = (ID_10131 : pow);
ID_10133 = ID_10125, ID_10132;
ID_10134 = (ID_10133 :> sqrt);
ID_10135 = ID_10134, 0;
ID_10136 = (ID_10135 : ==);
ID_10137 = ID_10136, ID_69;
ID_10138 = (ID_10137 : select2);
ID_10139 = (ID_14 : \(x5117).(\(x5118).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5117 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5118 : *) : +)~_));
ID_10140 = 0, ID_10139;
ID_10141 = (ID_10140 : -);
ID_10142 = 0, ID_10141;
ID_10143 = (ID_10142 : -);
ID_10144 = (ID_0 : \(x5119).(\(x5120).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5119 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5120 : *) : +)~_));
ID_10145 = 7.3f, ID_10144;
ID_10146 = (ID_10145 : -);
ID_10147 = 0, ID_10146;
ID_10148 = (ID_10147 : -);
ID_10149 = ID_10148, 2;
ID_10150 = (ID_10149 : pow);
ID_10151 = (ID_14 : \(x5121).(\(x5122).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5121 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5122 : *) : +)~_));
ID_10152 = 0, ID_10151;
ID_10153 = (ID_10152 : -);
ID_10154 = 0, ID_10153;
ID_10155 = (ID_10154 : -);
ID_10156 = ID_10155, 2;
ID_10157 = (ID_10156 : pow);
ID_10158 = ID_10150, ID_10157;
ID_10159 = (ID_10158 :> sqrt);
ID_10160 = ID_10159, 0;
ID_10161 = (ID_10160 : <);
ID_10162 = ID_10159, 0.0001f;
ID_10163 = (ID_10162 : max);
ID_10164 = ID_10163, ID_10159;
ID_10165 = ID_10161, ID_10164;
ID_10166 = (ID_10165 : select2);
ID_10167 = ID_10143, ID_10166;
ID_10168 = (ID_10167 : /);
ID_10169 = ID_10168, 0;
ID_10170 = ID_10138, ID_10169;
ID_10171 = (ID_10170 : select2);
ID_10172 = ID_10171, 2;
ID_10173 = (ID_10172 : pow);
ID_10174 = ID_10118, ID_10173;
ID_10175 = (ID_10174 :> sqrt);
ID_10176 = ID_10175, ID_817;
ID_10177 = (ID_10176 : *);
ID_10178 = ID_10177, 0;
ID_10179 = (ID_10178 : <);
ID_10180 = ID_10177, 0.0001f;
ID_10181 = (ID_10180 : max);
ID_10182 = ID_10181, ID_10177;
ID_10183 = ID_10179, ID_10182;
ID_10184 = (ID_10183 : select2);
ID_10185 = ID_10063, ID_10184;
ID_10186 = (ID_10185 : /);
ID_10187 = ID_10186, 0;
ID_10188 = ID_10001, ID_10187;
ID_10189 = (ID_10188 : select2);
ID_10190 = ID_10189, 0;
ID_10191 = (ID_10190 : ==);
ID_10192 = (ID_10178 : ==);
ID_10193 = (ID_0 : \(x5123).(\(x5124).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5123 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5124 : *) : +)~_));
ID_10194 = 7.3f, ID_10193;
ID_10195 = (ID_10194 : -);
ID_10196 = 0, ID_10195;
ID_10197 = (ID_10196 : -);
ID_10198 = ID_10197, 2;
ID_10199 = (ID_10198 : pow);
ID_10200 = (ID_14 : \(x5125).(\(x5126).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5125 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5126 : *) : +)~_));
ID_10201 = 0, ID_10200;
ID_10202 = (ID_10201 : -);
ID_10203 = 0, ID_10202;
ID_10204 = (ID_10203 : -);
ID_10205 = ID_10204, 2;
ID_10206 = (ID_10205 : pow);
ID_10207 = ID_10199, ID_10206;
ID_10208 = (ID_10207 :> sqrt);
ID_10209 = ID_10208, 0;
ID_10210 = (ID_10209 : ==);
ID_10211 = ID_10210, ID_69;
ID_10212 = (ID_10211 : select2);
ID_10213 = (ID_0 : \(x5127).(\(x5128).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5127 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5128 : *) : +)~_));
ID_10214 = 7.3f, ID_10213;
ID_10215 = (ID_10214 : -);
ID_10216 = 0, ID_10215;
ID_10217 = (ID_10216 : -);
ID_10218 = (ID_0 : \(x5129).(\(x5130).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5129 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5130 : *) : +)~_));
ID_10219 = 7.3f, ID_10218;
ID_10220 = (ID_10219 : -);
ID_10221 = 0, ID_10220;
ID_10222 = (ID_10221 : -);
ID_10223 = ID_10222, 2;
ID_10224 = (ID_10223 : pow);
ID_10225 = (ID_14 : \(x5131).(\(x5132).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5131 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5132 : *) : +)~_));
ID_10226 = 0, ID_10225;
ID_10227 = (ID_10226 : -);
ID_10228 = 0, ID_10227;
ID_10229 = (ID_10228 : -);
ID_10230 = ID_10229, 2;
ID_10231 = (ID_10230 : pow);
ID_10232 = ID_10224, ID_10231;
ID_10233 = (ID_10232 :> sqrt);
ID_10234 = ID_10233, 0;
ID_10235 = (ID_10234 : <);
ID_10236 = ID_10233, 0.0001f;
ID_10237 = (ID_10236 : max);
ID_10238 = ID_10237, ID_10233;
ID_10239 = ID_10235, ID_10238;
ID_10240 = (ID_10239 : select2);
ID_10241 = ID_10217, ID_10240;
ID_10242 = (ID_10241 : /);
ID_10243 = ID_10242, 0;
ID_10244 = ID_10212, ID_10243;
ID_10245 = (ID_10244 : select2);
ID_10246 = ID_806, ID_10245;
ID_10247 = (ID_10246 : *);
ID_10248 = (ID_0 : \(x5133).(\(x5134).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5133 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5134 : *) : +)~_));
ID_10249 = 7.3f, ID_10248;
ID_10250 = (ID_10249 : -);
ID_10251 = 0, ID_10250;
ID_10252 = (ID_10251 : -);
ID_10253 = ID_10252, 2;
ID_10254 = (ID_10253 : pow);
ID_10255 = (ID_14 : \(x5135).(\(x5136).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5135 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5136 : *) : +)~_));
ID_10256 = 0, ID_10255;
ID_10257 = (ID_10256 : -);
ID_10258 = 0, ID_10257;
ID_10259 = (ID_10258 : -);
ID_10260 = ID_10259, 2;
ID_10261 = (ID_10260 : pow);
ID_10262 = ID_10254, ID_10261;
ID_10263 = (ID_10262 :> sqrt);
ID_10264 = ID_10263, 0;
ID_10265 = (ID_10264 : ==);
ID_10266 = ID_10265, ID_69;
ID_10267 = (ID_10266 : select2);
ID_10268 = (ID_14 : \(x5137).(\(x5138).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5137 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5138 : *) : +)~_));
ID_10269 = 0, ID_10268;
ID_10270 = (ID_10269 : -);
ID_10271 = 0, ID_10270;
ID_10272 = (ID_10271 : -);
ID_10273 = (ID_0 : \(x5139).(\(x5140).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5139 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5140 : *) : +)~_));
ID_10274 = 7.3f, ID_10273;
ID_10275 = (ID_10274 : -);
ID_10276 = 0, ID_10275;
ID_10277 = (ID_10276 : -);
ID_10278 = ID_10277, 2;
ID_10279 = (ID_10278 : pow);
ID_10280 = (ID_14 : \(x5141).(\(x5142).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5141 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5142 : *) : +)~_));
ID_10281 = 0, ID_10280;
ID_10282 = (ID_10281 : -);
ID_10283 = 0, ID_10282;
ID_10284 = (ID_10283 : -);
ID_10285 = ID_10284, 2;
ID_10286 = (ID_10285 : pow);
ID_10287 = ID_10279, ID_10286;
ID_10288 = (ID_10287 :> sqrt);
ID_10289 = ID_10288, 0;
ID_10290 = (ID_10289 : <);
ID_10291 = ID_10288, 0.0001f;
ID_10292 = (ID_10291 : max);
ID_10293 = ID_10292, ID_10288;
ID_10294 = ID_10290, ID_10293;
ID_10295 = (ID_10294 : select2);
ID_10296 = ID_10272, ID_10295;
ID_10297 = (ID_10296 : /);
ID_10298 = ID_10297, 0;
ID_10299 = ID_10267, ID_10298;
ID_10300 = (ID_10299 : select2);
ID_10301 = ID_813, ID_10300;
ID_10302 = (ID_10301 : *);
ID_10303 = ID_10247, ID_10302;
ID_10304 = (ID_10303 :> _);
ID_10305 = (ID_0 : \(x5143).(\(x5144).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5143 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5144 : *) : +)~_));
ID_10306 = 7.3f, ID_10305;
ID_10307 = (ID_10306 : -);
ID_10308 = 0, ID_10307;
ID_10309 = (ID_10308 : -);
ID_10310 = ID_10309, 2;
ID_10311 = (ID_10310 : pow);
ID_10312 = (ID_14 : \(x5145).(\(x5146).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5145 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5146 : *) : +)~_));
ID_10313 = 0, ID_10312;
ID_10314 = (ID_10313 : -);
ID_10315 = 0, ID_10314;
ID_10316 = (ID_10315 : -);
ID_10317 = ID_10316, 2;
ID_10318 = (ID_10317 : pow);
ID_10319 = ID_10311, ID_10318;
ID_10320 = (ID_10319 :> sqrt);
ID_10321 = ID_10320, 0;
ID_10322 = (ID_10321 : ==);
ID_10323 = ID_10322, ID_69;
ID_10324 = (ID_10323 : select2);
ID_10325 = (ID_0 : \(x5147).(\(x5148).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5147 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5148 : *) : +)~_));
ID_10326 = 7.3f, ID_10325;
ID_10327 = (ID_10326 : -);
ID_10328 = 0, ID_10327;
ID_10329 = (ID_10328 : -);
ID_10330 = (ID_0 : \(x5149).(\(x5150).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5149 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5150 : *) : +)~_));
ID_10331 = 7.3f, ID_10330;
ID_10332 = (ID_10331 : -);
ID_10333 = 0, ID_10332;
ID_10334 = (ID_10333 : -);
ID_10335 = ID_10334, 2;
ID_10336 = (ID_10335 : pow);
ID_10337 = (ID_14 : \(x5151).(\(x5152).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5151 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5152 : *) : +)~_));
ID_10338 = 0, ID_10337;
ID_10339 = (ID_10338 : -);
ID_10340 = 0, ID_10339;
ID_10341 = (ID_10340 : -);
ID_10342 = ID_10341, 2;
ID_10343 = (ID_10342 : pow);
ID_10344 = ID_10336, ID_10343;
ID_10345 = (ID_10344 :> sqrt);
ID_10346 = ID_10345, 0;
ID_10347 = (ID_10346 : <);
ID_10348 = ID_10345, 0.0001f;
ID_10349 = (ID_10348 : max);
ID_10350 = ID_10349, ID_10345;
ID_10351 = ID_10347, ID_10350;
ID_10352 = (ID_10351 : select2);
ID_10353 = ID_10329, ID_10352;
ID_10354 = (ID_10353 : /);
ID_10355 = ID_10354, 0;
ID_10356 = ID_10324, ID_10355;
ID_10357 = (ID_10356 : select2);
ID_10358 = ID_10357, 2;
ID_10359 = (ID_10358 : pow);
ID_10360 = (ID_0 : \(x5153).(\(x5154).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5153 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5154 : *) : +)~_));
ID_10361 = 7.3f, ID_10360;
ID_10362 = (ID_10361 : -);
ID_10363 = 0, ID_10362;
ID_10364 = (ID_10363 : -);
ID_10365 = ID_10364, 2;
ID_10366 = (ID_10365 : pow);
ID_10367 = (ID_14 : \(x5155).(\(x5156).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5155 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5156 : *) : +)~_));
ID_10368 = 0, ID_10367;
ID_10369 = (ID_10368 : -);
ID_10370 = 0, ID_10369;
ID_10371 = (ID_10370 : -);
ID_10372 = ID_10371, 2;
ID_10373 = (ID_10372 : pow);
ID_10374 = ID_10366, ID_10373;
ID_10375 = (ID_10374 :> sqrt);
ID_10376 = ID_10375, 0;
ID_10377 = (ID_10376 : ==);
ID_10378 = ID_10377, ID_69;
ID_10379 = (ID_10378 : select2);
ID_10380 = (ID_14 : \(x5157).(\(x5158).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5157 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5158 : *) : +)~_));
ID_10381 = 0, ID_10380;
ID_10382 = (ID_10381 : -);
ID_10383 = 0, ID_10382;
ID_10384 = (ID_10383 : -);
ID_10385 = (ID_0 : \(x5159).(\(x5160).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5159 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5160 : *) : +)~_));
ID_10386 = 7.3f, ID_10385;
ID_10387 = (ID_10386 : -);
ID_10388 = 0, ID_10387;
ID_10389 = (ID_10388 : -);
ID_10390 = ID_10389, 2;
ID_10391 = (ID_10390 : pow);
ID_10392 = (ID_14 : \(x5161).(\(x5162).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5161 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5162 : *) : +)~_));
ID_10393 = 0, ID_10392;
ID_10394 = (ID_10393 : -);
ID_10395 = 0, ID_10394;
ID_10396 = (ID_10395 : -);
ID_10397 = ID_10396, 2;
ID_10398 = (ID_10397 : pow);
ID_10399 = ID_10391, ID_10398;
ID_10400 = (ID_10399 :> sqrt);
ID_10401 = ID_10400, 0;
ID_10402 = (ID_10401 : <);
ID_10403 = ID_10400, 0.0001f;
ID_10404 = (ID_10403 : max);
ID_10405 = ID_10404, ID_10400;
ID_10406 = ID_10402, ID_10405;
ID_10407 = (ID_10406 : select2);
ID_10408 = ID_10384, ID_10407;
ID_10409 = (ID_10408 : /);
ID_10410 = ID_10409, 0;
ID_10411 = ID_10379, ID_10410;
ID_10412 = (ID_10411 : select2);
ID_10413 = ID_10412, 2;
ID_10414 = (ID_10413 : pow);
ID_10415 = ID_10359, ID_10414;
ID_10416 = (ID_10415 :> sqrt);
ID_10417 = ID_10416, ID_817;
ID_10418 = (ID_10417 : *);
ID_10419 = ID_10418, 0;
ID_10420 = (ID_10419 : <);
ID_10421 = ID_10418, 0.0001f;
ID_10422 = (ID_10421 : max);
ID_10423 = ID_10422, ID_10418;
ID_10424 = ID_10420, ID_10423;
ID_10425 = (ID_10424 : select2);
ID_10426 = ID_10304, ID_10425;
ID_10427 = (ID_10426 : /);
ID_10428 = ID_10427, 0;
ID_10429 = ID_10192, ID_10428;
ID_10430 = (ID_10429 : select2);
ID_10431 = ID_10430, 0;
ID_10432 = (ID_10431 : <);
ID_10433 = ID_10430, 0.0001f;
ID_10434 = (ID_10433 : max);
ID_10435 = ID_10434, ID_10430;
ID_10436 = ID_10432, ID_10435;
ID_10437 = ID_10436 : select2;
ID_10438 = (ID_10437 : acos);
ID_10439 = ID_10438, 0;
ID_10440 = ID_10191, ID_10439;
ID_10441 = (ID_10440 : select2);
ID_10442 = ID_699, ID_10441;
ID_10443 = ID_10442 : *;
ID_10444 = (ID_10443 : cos);
ID_10445 = ID_9935, ID_10444;
ID_10446 = (ID_10445 : *);
ID_10447 = _, ID_10446;
ID_10448 = (ID_10447 : *);
ID_10449 = (ID_0 : \(x5239).(\(x5240).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5239 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5240 : *) : +)~_));
ID_10450 = 7.3f, ID_10449;
ID_10451 = (ID_10450 : -);
ID_10452 = 0, ID_10451;
ID_10453 = (ID_10452 : -);
ID_10454 = ID_10453, 2;
ID_10455 = (ID_10454 : pow);
ID_10456 = (ID_14 : \(x5241).(\(x5242).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5241 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5242 : *) : +)~_));
ID_10457 = 0, ID_10456;
ID_10458 = (ID_10457 : -);
ID_10459 = 0, ID_10458;
ID_10460 = (ID_10459 : -);
ID_10461 = ID_10460, 2;
ID_10462 = (ID_10461 : pow);
ID_10463 = ID_10455, ID_10462;
ID_10464 = (ID_10463 :> sqrt);
ID_10465 = ID_10464, 0;
ID_10466 = (ID_10465 : <);
ID_10467 = ID_10464, 0.0001f;
ID_10468 = (ID_10467 : max);
ID_10469 = ID_10468, ID_10464;
ID_10470 = ID_10466, ID_10469;
ID_10471 = (ID_10470 : select2);
ID_10472 = ID_76, ID_10471;
ID_10473 = (ID_10472 : /);
ID_10474 = ID_10473, 0;
ID_10475 = ID_1312, ID_10474;
ID_10476 = (ID_10475 : select2);
ID_10477 = ID_10476, 2;
ID_10478 = (ID_10477 : pow);
ID_10479 = (ID_0 : \(x5243).(\(x5244).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5243 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5244 : *) : +)~_));
ID_10480 = 7.3f, ID_10479;
ID_10481 = (ID_10480 : -);
ID_10482 = 0, ID_10481;
ID_10483 = (ID_10482 : -);
ID_10484 = ID_10483, 2;
ID_10485 = (ID_10484 : pow);
ID_10486 = (ID_14 : \(x5245).(\(x5246).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5245 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5246 : *) : +)~_));
ID_10487 = 0, ID_10486;
ID_10488 = (ID_10487 : -);
ID_10489 = 0, ID_10488;
ID_10490 = (ID_10489 : -);
ID_10491 = ID_10490, 2;
ID_10492 = (ID_10491 : pow);
ID_10493 = ID_10485, ID_10492;
ID_10494 = (ID_10493 :> sqrt);
ID_10495 = ID_10494, 0;
ID_10496 = (ID_10495 : <);
ID_10497 = ID_10494, 0.0001f;
ID_10498 = (ID_10497 : max);
ID_10499 = ID_10498, ID_10494;
ID_10500 = ID_10496, ID_10499;
ID_10501 = (ID_10500 : select2);
ID_10502 = ID_1360, ID_10501;
ID_10503 = (ID_10502 : /);
ID_10504 = ID_10503, 0;
ID_10505 = ID_1355, ID_10504;
ID_10506 = (ID_10505 : select2);
ID_10507 = ID_10506, 2;
ID_10508 = (ID_10507 : pow);
ID_10509 = ID_10478, ID_10508;
ID_10510 = (ID_10509 :> sqrt);
ID_10511 = ID_10510, ID_817;
ID_10512 = (ID_10511 : *);
ID_10513 = ID_10512, 0;
ID_10514 = (ID_10513 : ==);
ID_10515 = (ID_0 : \(x5247).(\(x5248).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5247 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5248 : *) : +)~_));
ID_10516 = 7.3f, ID_10515;
ID_10517 = (ID_10516 : -);
ID_10518 = 0, ID_10517;
ID_10519 = (ID_10518 : -);
ID_10520 = ID_10519, 2;
ID_10521 = (ID_10520 : pow);
ID_10522 = (ID_14 : \(x5249).(\(x5250).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5249 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5250 : *) : +)~_));
ID_10523 = 0, ID_10522;
ID_10524 = (ID_10523 : -);
ID_10525 = 0, ID_10524;
ID_10526 = (ID_10525 : -);
ID_10527 = ID_10526, 2;
ID_10528 = (ID_10527 : pow);
ID_10529 = ID_10521, ID_10528;
ID_10530 = (ID_10529 :> sqrt);
ID_10531 = ID_10530, 0;
ID_10532 = (ID_10531 : <);
ID_10533 = ID_10530, 0.0001f;
ID_10534 = (ID_10533 : max);
ID_10535 = ID_10534, ID_10530;
ID_10536 = ID_10532, ID_10535;
ID_10537 = (ID_10536 : select2);
ID_10538 = ID_217, ID_10537;
ID_10539 = (ID_10538 : /);
ID_10540 = ID_10539, 0;
ID_10541 = ID_1409, ID_10540;
ID_10542 = (ID_10541 : select2);
ID_10543 = ID_806, ID_10542;
ID_10544 = (ID_10543 : *);
ID_10545 = (ID_0 : \(x5251).(\(x5252).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5251 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5252 : *) : +)~_));
ID_10546 = 7.3f, ID_10545;
ID_10547 = (ID_10546 : -);
ID_10548 = 0, ID_10547;
ID_10549 = (ID_10548 : -);
ID_10550 = ID_10549, 2;
ID_10551 = (ID_10550 : pow);
ID_10552 = (ID_14 : \(x5253).(\(x5254).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5253 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5254 : *) : +)~_));
ID_10553 = 0, ID_10552;
ID_10554 = (ID_10553 : -);
ID_10555 = 0, ID_10554;
ID_10556 = (ID_10555 : -);
ID_10557 = ID_10556, 2;
ID_10558 = (ID_10557 : pow);
ID_10559 = ID_10551, ID_10558;
ID_10560 = (ID_10559 :> sqrt);
ID_10561 = ID_10560, 0;
ID_10562 = (ID_10561 : <);
ID_10563 = ID_10560, 0.0001f;
ID_10564 = (ID_10563 : max);
ID_10565 = ID_10564, ID_10560;
ID_10566 = ID_10562, ID_10565;
ID_10567 = (ID_10566 : select2);
ID_10568 = ID_1457, ID_10567;
ID_10569 = (ID_10568 : /);
ID_10570 = ID_10569, 0;
ID_10571 = ID_1452, ID_10570;
ID_10572 = (ID_10571 : select2);
ID_10573 = ID_813, ID_10572;
ID_10574 = (ID_10573 : *);
ID_10575 = ID_10544, ID_10574;
ID_10576 = (ID_10575 :> _);
ID_10577 = (ID_0 : \(x5255).(\(x5256).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5255 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5256 : *) : +)~_));
ID_10578 = 7.3f, ID_10577;
ID_10579 = (ID_10578 : -);
ID_10580 = 0, ID_10579;
ID_10581 = (ID_10580 : -);
ID_10582 = ID_10581, 2;
ID_10583 = (ID_10582 : pow);
ID_10584 = (ID_14 : \(x5257).(\(x5258).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5257 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5258 : *) : +)~_));
ID_10585 = 0, ID_10584;
ID_10586 = (ID_10585 : -);
ID_10587 = 0, ID_10586;
ID_10588 = (ID_10587 : -);
ID_10589 = ID_10588, 2;
ID_10590 = (ID_10589 : pow);
ID_10591 = ID_10583, ID_10590;
ID_10592 = (ID_10591 :> sqrt);
ID_10593 = ID_10592, 0;
ID_10594 = (ID_10593 : ==);
ID_10595 = ID_10594, ID_69;
ID_10596 = (ID_10595 : select2);
ID_10597 = (ID_0 : \(x5259).(\(x5260).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5259 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5260 : *) : +)~_));
ID_10598 = 7.3f, ID_10597;
ID_10599 = (ID_10598 : -);
ID_10600 = 0, ID_10599;
ID_10601 = (ID_10600 : -);
ID_10602 = (ID_0 : \(x5261).(\(x5262).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5261 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5262 : *) : +)~_));
ID_10603 = 7.3f, ID_10602;
ID_10604 = (ID_10603 : -);
ID_10605 = 0, ID_10604;
ID_10606 = (ID_10605 : -);
ID_10607 = ID_10606, 2;
ID_10608 = (ID_10607 : pow);
ID_10609 = (ID_14 : \(x5263).(\(x5264).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5263 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5264 : *) : +)~_));
ID_10610 = 0, ID_10609;
ID_10611 = (ID_10610 : -);
ID_10612 = 0, ID_10611;
ID_10613 = (ID_10612 : -);
ID_10614 = ID_10613, 2;
ID_10615 = (ID_10614 : pow);
ID_10616 = ID_10608, ID_10615;
ID_10617 = (ID_10616 :> sqrt);
ID_10618 = ID_10617, 0;
ID_10619 = (ID_10618 : <);
ID_10620 = ID_10617, 0.0001f;
ID_10621 = (ID_10620 : max);
ID_10622 = ID_10621, ID_10617;
ID_10623 = ID_10619, ID_10622;
ID_10624 = (ID_10623 : select2);
ID_10625 = ID_10601, ID_10624;
ID_10626 = (ID_10625 : /);
ID_10627 = ID_10626, 0;
ID_10628 = ID_10596, ID_10627;
ID_10629 = (ID_10628 : select2);
ID_10630 = ID_10629, 2;
ID_10631 = (ID_10630 : pow);
ID_10632 = (ID_0 : \(x5265).(\(x5266).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5265 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5266 : *) : +)~_));
ID_10633 = 7.3f, ID_10632;
ID_10634 = (ID_10633 : -);
ID_10635 = 0, ID_10634;
ID_10636 = (ID_10635 : -);
ID_10637 = ID_10636, 2;
ID_10638 = (ID_10637 : pow);
ID_10639 = (ID_14 : \(x5267).(\(x5268).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5267 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5268 : *) : +)~_));
ID_10640 = 0, ID_10639;
ID_10641 = (ID_10640 : -);
ID_10642 = 0, ID_10641;
ID_10643 = (ID_10642 : -);
ID_10644 = ID_10643, 2;
ID_10645 = (ID_10644 : pow);
ID_10646 = ID_10638, ID_10645;
ID_10647 = (ID_10646 :> sqrt);
ID_10648 = ID_10647, 0;
ID_10649 = (ID_10648 : ==);
ID_10650 = ID_10649, ID_69;
ID_10651 = (ID_10650 : select2);
ID_10652 = (ID_14 : \(x5269).(\(x5270).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5269 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5270 : *) : +)~_));
ID_10653 = 0, ID_10652;
ID_10654 = (ID_10653 : -);
ID_10655 = 0, ID_10654;
ID_10656 = (ID_10655 : -);
ID_10657 = (ID_0 : \(x5271).(\(x5272).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5271 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5272 : *) : +)~_));
ID_10658 = 7.3f, ID_10657;
ID_10659 = (ID_10658 : -);
ID_10660 = 0, ID_10659;
ID_10661 = (ID_10660 : -);
ID_10662 = ID_10661, 2;
ID_10663 = (ID_10662 : pow);
ID_10664 = (ID_14 : \(x5273).(\(x5274).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5273 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5274 : *) : +)~_));
ID_10665 = 0, ID_10664;
ID_10666 = (ID_10665 : -);
ID_10667 = 0, ID_10666;
ID_10668 = (ID_10667 : -);
ID_10669 = ID_10668, 2;
ID_10670 = (ID_10669 : pow);
ID_10671 = ID_10663, ID_10670;
ID_10672 = (ID_10671 :> sqrt);
ID_10673 = ID_10672, 0;
ID_10674 = (ID_10673 : <);
ID_10675 = ID_10672, 0.0001f;
ID_10676 = (ID_10675 : max);
ID_10677 = ID_10676, ID_10672;
ID_10678 = ID_10674, ID_10677;
ID_10679 = (ID_10678 : select2);
ID_10680 = ID_10656, ID_10679;
ID_10681 = (ID_10680 : /);
ID_10682 = ID_10681, 0;
ID_10683 = ID_10651, ID_10682;
ID_10684 = (ID_10683 : select2);
ID_10685 = ID_10684, 2;
ID_10686 = (ID_10685 : pow);
ID_10687 = ID_10631, ID_10686;
ID_10688 = (ID_10687 :> sqrt);
ID_10689 = ID_10688, ID_817;
ID_10690 = (ID_10689 : *);
ID_10691 = ID_10690, 0;
ID_10692 = (ID_10691 : <);
ID_10693 = ID_10690, 0.0001f;
ID_10694 = (ID_10693 : max);
ID_10695 = ID_10694, ID_10690;
ID_10696 = ID_10692, ID_10695;
ID_10697 = (ID_10696 : select2);
ID_10698 = ID_10576, ID_10697;
ID_10699 = (ID_10698 : /);
ID_10700 = ID_10699, 0;
ID_10701 = ID_10514, ID_10700;
ID_10702 = (ID_10701 : select2);
ID_10703 = ID_10702, 0;
ID_10704 = (ID_10703 : ==);
ID_10705 = (ID_10691 : ==);
ID_10706 = (ID_0 : \(x5275).(\(x5276).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5275 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5276 : *) : +)~_));
ID_10707 = 7.3f, ID_10706;
ID_10708 = (ID_10707 : -);
ID_10709 = 0, ID_10708;
ID_10710 = (ID_10709 : -);
ID_10711 = ID_10710, 2;
ID_10712 = (ID_10711 : pow);
ID_10713 = (ID_14 : \(x5277).(\(x5278).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5277 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5278 : *) : +)~_));
ID_10714 = 0, ID_10713;
ID_10715 = (ID_10714 : -);
ID_10716 = 0, ID_10715;
ID_10717 = (ID_10716 : -);
ID_10718 = ID_10717, 2;
ID_10719 = (ID_10718 : pow);
ID_10720 = ID_10712, ID_10719;
ID_10721 = (ID_10720 :> sqrt);
ID_10722 = ID_10721, 0;
ID_10723 = (ID_10722 : ==);
ID_10724 = ID_10723, ID_69;
ID_10725 = (ID_10724 : select2);
ID_10726 = (ID_0 : \(x5279).(\(x5280).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5279 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5280 : *) : +)~_));
ID_10727 = 7.3f, ID_10726;
ID_10728 = (ID_10727 : -);
ID_10729 = 0, ID_10728;
ID_10730 = (ID_10729 : -);
ID_10731 = (ID_0 : \(x5281).(\(x5282).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5281 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5282 : *) : +)~_));
ID_10732 = 7.3f, ID_10731;
ID_10733 = (ID_10732 : -);
ID_10734 = 0, ID_10733;
ID_10735 = (ID_10734 : -);
ID_10736 = ID_10735, 2;
ID_10737 = (ID_10736 : pow);
ID_10738 = (ID_14 : \(x5283).(\(x5284).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5283 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5284 : *) : +)~_));
ID_10739 = 0, ID_10738;
ID_10740 = (ID_10739 : -);
ID_10741 = 0, ID_10740;
ID_10742 = (ID_10741 : -);
ID_10743 = ID_10742, 2;
ID_10744 = (ID_10743 : pow);
ID_10745 = ID_10737, ID_10744;
ID_10746 = (ID_10745 :> sqrt);
ID_10747 = ID_10746, 0;
ID_10748 = (ID_10747 : <);
ID_10749 = ID_10746, 0.0001f;
ID_10750 = (ID_10749 : max);
ID_10751 = ID_10750, ID_10746;
ID_10752 = ID_10748, ID_10751;
ID_10753 = (ID_10752 : select2);
ID_10754 = ID_10730, ID_10753;
ID_10755 = (ID_10754 : /);
ID_10756 = ID_10755, 0;
ID_10757 = ID_10725, ID_10756;
ID_10758 = (ID_10757 : select2);
ID_10759 = ID_806, ID_10758;
ID_10760 = (ID_10759 : *);
ID_10761 = (ID_0 : \(x5285).(\(x5286).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5285 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5286 : *) : +)~_));
ID_10762 = 7.3f, ID_10761;
ID_10763 = (ID_10762 : -);
ID_10764 = 0, ID_10763;
ID_10765 = (ID_10764 : -);
ID_10766 = ID_10765, 2;
ID_10767 = (ID_10766 : pow);
ID_10768 = (ID_14 : \(x5287).(\(x5288).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5287 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5288 : *) : +)~_));
ID_10769 = 0, ID_10768;
ID_10770 = (ID_10769 : -);
ID_10771 = 0, ID_10770;
ID_10772 = (ID_10771 : -);
ID_10773 = ID_10772, 2;
ID_10774 = (ID_10773 : pow);
ID_10775 = ID_10767, ID_10774;
ID_10776 = (ID_10775 :> sqrt);
ID_10777 = ID_10776, 0;
ID_10778 = (ID_10777 : ==);
ID_10779 = ID_10778, ID_69;
ID_10780 = (ID_10779 : select2);
ID_10781 = (ID_14 : \(x5289).(\(x5290).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5289 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5290 : *) : +)~_));
ID_10782 = 0, ID_10781;
ID_10783 = (ID_10782 : -);
ID_10784 = 0, ID_10783;
ID_10785 = (ID_10784 : -);
ID_10786 = (ID_0 : \(x5291).(\(x5292).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5291 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5292 : *) : +)~_));
ID_10787 = 7.3f, ID_10786;
ID_10788 = (ID_10787 : -);
ID_10789 = 0, ID_10788;
ID_10790 = (ID_10789 : -);
ID_10791 = ID_10790, 2;
ID_10792 = (ID_10791 : pow);
ID_10793 = (ID_14 : \(x5293).(\(x5294).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5293 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5294 : *) : +)~_));
ID_10794 = 0, ID_10793;
ID_10795 = (ID_10794 : -);
ID_10796 = 0, ID_10795;
ID_10797 = (ID_10796 : -);
ID_10798 = ID_10797, 2;
ID_10799 = (ID_10798 : pow);
ID_10800 = ID_10792, ID_10799;
ID_10801 = (ID_10800 :> sqrt);
ID_10802 = ID_10801, 0;
ID_10803 = (ID_10802 : <);
ID_10804 = ID_10801, 0.0001f;
ID_10805 = (ID_10804 : max);
ID_10806 = ID_10805, ID_10801;
ID_10807 = ID_10803, ID_10806;
ID_10808 = (ID_10807 : select2);
ID_10809 = ID_10785, ID_10808;
ID_10810 = (ID_10809 : /);
ID_10811 = ID_10810, 0;
ID_10812 = ID_10780, ID_10811;
ID_10813 = (ID_10812 : select2);
ID_10814 = ID_813, ID_10813;
ID_10815 = (ID_10814 : *);
ID_10816 = ID_10760, ID_10815;
ID_10817 = (ID_10816 :> _);
ID_10818 = (ID_0 : \(x5295).(\(x5296).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5295 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5296 : *) : +)~_));
ID_10819 = 7.3f, ID_10818;
ID_10820 = (ID_10819 : -);
ID_10821 = 0, ID_10820;
ID_10822 = (ID_10821 : -);
ID_10823 = ID_10822, 2;
ID_10824 = (ID_10823 : pow);
ID_10825 = (ID_14 : \(x5297).(\(x5298).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5297 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5298 : *) : +)~_));
ID_10826 = 0, ID_10825;
ID_10827 = (ID_10826 : -);
ID_10828 = 0, ID_10827;
ID_10829 = (ID_10828 : -);
ID_10830 = ID_10829, 2;
ID_10831 = (ID_10830 : pow);
ID_10832 = ID_10824, ID_10831;
ID_10833 = (ID_10832 :> sqrt);
ID_10834 = ID_10833, 0;
ID_10835 = (ID_10834 : ==);
ID_10836 = ID_10835, ID_69;
ID_10837 = (ID_10836 : select2);
ID_10838 = (ID_0 : \(x5299).(\(x5300).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5299 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5300 : *) : +)~_));
ID_10839 = 7.3f, ID_10838;
ID_10840 = (ID_10839 : -);
ID_10841 = 0, ID_10840;
ID_10842 = (ID_10841 : -);
ID_10843 = (ID_0 : \(x5301).(\(x5302).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5301 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5302 : *) : +)~_));
ID_10844 = 7.3f, ID_10843;
ID_10845 = (ID_10844 : -);
ID_10846 = 0, ID_10845;
ID_10847 = (ID_10846 : -);
ID_10848 = ID_10847, 2;
ID_10849 = (ID_10848 : pow);
ID_10850 = (ID_14 : \(x5303).(\(x5304).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5303 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5304 : *) : +)~_));
ID_10851 = 0, ID_10850;
ID_10852 = (ID_10851 : -);
ID_10853 = 0, ID_10852;
ID_10854 = (ID_10853 : -);
ID_10855 = ID_10854, 2;
ID_10856 = (ID_10855 : pow);
ID_10857 = ID_10849, ID_10856;
ID_10858 = (ID_10857 :> sqrt);
ID_10859 = ID_10858, 0;
ID_10860 = (ID_10859 : <);
ID_10861 = ID_10858, 0.0001f;
ID_10862 = (ID_10861 : max);
ID_10863 = ID_10862, ID_10858;
ID_10864 = ID_10860, ID_10863;
ID_10865 = (ID_10864 : select2);
ID_10866 = ID_10842, ID_10865;
ID_10867 = (ID_10866 : /);
ID_10868 = ID_10867, 0;
ID_10869 = ID_10837, ID_10868;
ID_10870 = (ID_10869 : select2);
ID_10871 = ID_10870, 2;
ID_10872 = (ID_10871 : pow);
ID_10873 = (ID_0 : \(x5305).(\(x5306).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5305 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5306 : *) : +)~_));
ID_10874 = 7.3f, ID_10873;
ID_10875 = (ID_10874 : -);
ID_10876 = 0, ID_10875;
ID_10877 = (ID_10876 : -);
ID_10878 = ID_10877, 2;
ID_10879 = (ID_10878 : pow);
ID_10880 = (ID_14 : \(x5307).(\(x5308).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5307 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5308 : *) : +)~_));
ID_10881 = 0, ID_10880;
ID_10882 = (ID_10881 : -);
ID_10883 = 0, ID_10882;
ID_10884 = (ID_10883 : -);
ID_10885 = ID_10884, 2;
ID_10886 = (ID_10885 : pow);
ID_10887 = ID_10879, ID_10886;
ID_10888 = (ID_10887 :> sqrt);
ID_10889 = ID_10888, 0;
ID_10890 = (ID_10889 : ==);
ID_10891 = ID_10890, ID_69;
ID_10892 = (ID_10891 : select2);
ID_10893 = (ID_14 : \(x5309).(\(x5310).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5309 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5310 : *) : +)~_));
ID_10894 = 0, ID_10893;
ID_10895 = (ID_10894 : -);
ID_10896 = 0, ID_10895;
ID_10897 = (ID_10896 : -);
ID_10898 = (ID_0 : \(x5311).(\(x5312).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5311 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5312 : *) : +)~_));
ID_10899 = 7.3f, ID_10898;
ID_10900 = (ID_10899 : -);
ID_10901 = 0, ID_10900;
ID_10902 = (ID_10901 : -);
ID_10903 = ID_10902, 2;
ID_10904 = (ID_10903 : pow);
ID_10905 = (ID_14 : \(x5313).(\(x5314).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5313 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5314 : *) : +)~_));
ID_10906 = 0, ID_10905;
ID_10907 = (ID_10906 : -);
ID_10908 = 0, ID_10907;
ID_10909 = (ID_10908 : -);
ID_10910 = ID_10909, 2;
ID_10911 = (ID_10910 : pow);
ID_10912 = ID_10904, ID_10911;
ID_10913 = (ID_10912 :> sqrt);
ID_10914 = ID_10913, 0;
ID_10915 = (ID_10914 : <);
ID_10916 = ID_10913, 0.0001f;
ID_10917 = (ID_10916 : max);
ID_10918 = ID_10917, ID_10913;
ID_10919 = ID_10915, ID_10918;
ID_10920 = (ID_10919 : select2);
ID_10921 = ID_10897, ID_10920;
ID_10922 = (ID_10921 : /);
ID_10923 = ID_10922, 0;
ID_10924 = ID_10892, ID_10923;
ID_10925 = (ID_10924 : select2);
ID_10926 = ID_10925, 2;
ID_10927 = (ID_10926 : pow);
ID_10928 = ID_10872, ID_10927;
ID_10929 = (ID_10928 :> sqrt);
ID_10930 = ID_10929, ID_817;
ID_10931 = (ID_10930 : *);
ID_10932 = ID_10931, 0;
ID_10933 = (ID_10932 : <);
ID_10934 = ID_10931, 0.0001f;
ID_10935 = (ID_10934 : max);
ID_10936 = ID_10935, ID_10931;
ID_10937 = ID_10933, ID_10936;
ID_10938 = (ID_10937 : select2);
ID_10939 = ID_10817, ID_10938;
ID_10940 = (ID_10939 : /);
ID_10941 = ID_10940, 0;
ID_10942 = ID_10705, ID_10941;
ID_10943 = (ID_10942 : select2);
ID_10944 = ID_10943, 0;
ID_10945 = (ID_10944 : <);
ID_10946 = ID_10943, 0.0001f;
ID_10947 = (ID_10946 : max);
ID_10948 = ID_10947, ID_10943;
ID_10949 = ID_10945, ID_10948;
ID_10950 = ID_10949 : select2;
ID_10951 = (ID_10950 : acos);
ID_10952 = ID_10951, 0;
ID_10953 = ID_10704, ID_10952;
ID_10954 = (ID_10953 : select2);
ID_10955 = ID_699, ID_10954;
ID_10956 = ID_10955 : *;
ID_10957 = (ID_10956 : sin);
ID_10958 = _, ID_10957;
ID_10959 = (ID_10958 : *);
ID_10960 = (ID_9934 : cos);
ID_10961 = (ID_0 : \(x5391).(\(x5392).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5391 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5392 : *) : +)~_));
ID_10962 = 7.3f, ID_10961;
ID_10963 = (ID_10962 : -);
ID_10964 = 0, ID_10963;
ID_10965 = (ID_10964 : -);
ID_10966 = ID_10965, 2;
ID_10967 = (ID_10966 : pow);
ID_10968 = (ID_14 : \(x5393).(\(x5394).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5393 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5394 : *) : +)~_));
ID_10969 = 0, ID_10968;
ID_10970 = (ID_10969 : -);
ID_10971 = 0, ID_10970;
ID_10972 = (ID_10971 : -);
ID_10973 = ID_10972, 2;
ID_10974 = (ID_10973 : pow);
ID_10975 = ID_10967, ID_10974;
ID_10976 = (ID_10975 :> sqrt);
ID_10977 = ID_10976, 0;
ID_10978 = (ID_10977 : <);
ID_10979 = ID_10976, 0.0001f;
ID_10980 = (ID_10979 : max);
ID_10981 = ID_10980, ID_10976;
ID_10982 = ID_10978, ID_10981;
ID_10983 = (ID_10982 : select2);
ID_10984 = ID_1910, ID_10983;
ID_10985 = (ID_10984 : /);
ID_10986 = ID_10985, 0;
ID_10987 = ID_1905, ID_10986;
ID_10988 = (ID_10987 : select2);
ID_10989 = ID_10988, 2;
ID_10990 = (ID_10989 : pow);
ID_10991 = (ID_0 : \(x5395).(\(x5396).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5395 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5396 : *) : +)~_));
ID_10992 = 7.3f, ID_10991;
ID_10993 = (ID_10992 : -);
ID_10994 = 0, ID_10993;
ID_10995 = (ID_10994 : -);
ID_10996 = ID_10995, 2;
ID_10997 = (ID_10996 : pow);
ID_10998 = (ID_14 : \(x5397).(\(x5398).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5397 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5398 : *) : +)~_));
ID_10999 = 0, ID_10998;
ID_11000 = (ID_10999 : -);
ID_11001 = 0, ID_11000;
ID_11002 = (ID_11001 : -);
ID_11003 = ID_11002, 2;
ID_11004 = (ID_11003 : pow);
ID_11005 = ID_10997, ID_11004;
ID_11006 = (ID_11005 :> sqrt);
ID_11007 = ID_11006, 0;
ID_11008 = (ID_11007 : <);
ID_11009 = ID_11006, 0.0001f;
ID_11010 = (ID_11009 : max);
ID_11011 = ID_11010, ID_11006;
ID_11012 = ID_11008, ID_11011;
ID_11013 = (ID_11012 : select2);
ID_11014 = ID_1965, ID_11013;
ID_11015 = (ID_11014 : /);
ID_11016 = ID_11015, 0;
ID_11017 = ID_1960, ID_11016;
ID_11018 = (ID_11017 : select2);
ID_11019 = ID_11018, 2;
ID_11020 = (ID_11019 : pow);
ID_11021 = ID_10990, ID_11020;
ID_11022 = (ID_11021 :> sqrt);
ID_11023 = ID_11022, ID_817;
ID_11024 = (ID_11023 : *);
ID_11025 = ID_11024, 0;
ID_11026 = (ID_11025 : ==);
ID_11027 = (ID_0 : \(x5399).(\(x5400).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5399 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5400 : *) : +)~_));
ID_11028 = 7.3f, ID_11027;
ID_11029 = (ID_11028 : -);
ID_11030 = 0, ID_11029;
ID_11031 = (ID_11030 : -);
ID_11032 = ID_11031, 2;
ID_11033 = (ID_11032 : pow);
ID_11034 = (ID_14 : \(x5401).(\(x5402).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5401 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5402 : *) : +)~_));
ID_11035 = 0, ID_11034;
ID_11036 = (ID_11035 : -);
ID_11037 = 0, ID_11036;
ID_11038 = (ID_11037 : -);
ID_11039 = ID_11038, 2;
ID_11040 = (ID_11039 : pow);
ID_11041 = ID_11033, ID_11040;
ID_11042 = (ID_11041 :> sqrt);
ID_11043 = ID_11042, 0;
ID_11044 = (ID_11043 : <);
ID_11045 = ID_11042, 0.0001f;
ID_11046 = (ID_11045 : max);
ID_11047 = ID_11046, ID_11042;
ID_11048 = ID_11044, ID_11047;
ID_11049 = (ID_11048 : select2);
ID_11050 = ID_2026, ID_11049;
ID_11051 = (ID_11050 : /);
ID_11052 = ID_11051, 0;
ID_11053 = ID_2021, ID_11052;
ID_11054 = (ID_11053 : select2);
ID_11055 = ID_806, ID_11054;
ID_11056 = (ID_11055 : *);
ID_11057 = (ID_0 : \(x5403).(\(x5404).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5403 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5404 : *) : +)~_));
ID_11058 = 7.3f, ID_11057;
ID_11059 = (ID_11058 : -);
ID_11060 = 0, ID_11059;
ID_11061 = (ID_11060 : -);
ID_11062 = ID_11061, 2;
ID_11063 = (ID_11062 : pow);
ID_11064 = (ID_14 : \(x5405).(\(x5406).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5405 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5406 : *) : +)~_));
ID_11065 = 0, ID_11064;
ID_11066 = (ID_11065 : -);
ID_11067 = 0, ID_11066;
ID_11068 = (ID_11067 : -);
ID_11069 = ID_11068, 2;
ID_11070 = (ID_11069 : pow);
ID_11071 = ID_11063, ID_11070;
ID_11072 = (ID_11071 :> sqrt);
ID_11073 = ID_11072, 0;
ID_11074 = (ID_11073 : <);
ID_11075 = ID_11072, 0.0001f;
ID_11076 = (ID_11075 : max);
ID_11077 = ID_11076, ID_11072;
ID_11078 = ID_11074, ID_11077;
ID_11079 = (ID_11078 : select2);
ID_11080 = ID_2081, ID_11079;
ID_11081 = (ID_11080 : /);
ID_11082 = ID_11081, 0;
ID_11083 = ID_2076, ID_11082;
ID_11084 = (ID_11083 : select2);
ID_11085 = ID_813, ID_11084;
ID_11086 = (ID_11085 : *);
ID_11087 = ID_11056, ID_11086;
ID_11088 = (ID_11087 :> _);
ID_11089 = (ID_0 : \(x5407).(\(x5408).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5407 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5408 : *) : +)~_));
ID_11090 = 7.3f, ID_11089;
ID_11091 = (ID_11090 : -);
ID_11092 = 0, ID_11091;
ID_11093 = (ID_11092 : -);
ID_11094 = ID_11093, 2;
ID_11095 = (ID_11094 : pow);
ID_11096 = (ID_14 : \(x5409).(\(x5410).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5409 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5410 : *) : +)~_));
ID_11097 = 0, ID_11096;
ID_11098 = (ID_11097 : -);
ID_11099 = 0, ID_11098;
ID_11100 = (ID_11099 : -);
ID_11101 = ID_11100, 2;
ID_11102 = (ID_11101 : pow);
ID_11103 = ID_11095, ID_11102;
ID_11104 = (ID_11103 :> sqrt);
ID_11105 = ID_11104, 0;
ID_11106 = (ID_11105 : ==);
ID_11107 = ID_11106, ID_69;
ID_11108 = (ID_11107 : select2);
ID_11109 = (ID_0 : \(x5411).(\(x5412).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5411 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5412 : *) : +)~_));
ID_11110 = 7.3f, ID_11109;
ID_11111 = (ID_11110 : -);
ID_11112 = 0, ID_11111;
ID_11113 = (ID_11112 : -);
ID_11114 = (ID_0 : \(x5413).(\(x5414).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5413 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5414 : *) : +)~_));
ID_11115 = 7.3f, ID_11114;
ID_11116 = (ID_11115 : -);
ID_11117 = 0, ID_11116;
ID_11118 = (ID_11117 : -);
ID_11119 = ID_11118, 2;
ID_11120 = (ID_11119 : pow);
ID_11121 = (ID_14 : \(x5415).(\(x5416).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5415 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5416 : *) : +)~_));
ID_11122 = 0, ID_11121;
ID_11123 = (ID_11122 : -);
ID_11124 = 0, ID_11123;
ID_11125 = (ID_11124 : -);
ID_11126 = ID_11125, 2;
ID_11127 = (ID_11126 : pow);
ID_11128 = ID_11120, ID_11127;
ID_11129 = (ID_11128 :> sqrt);
ID_11130 = ID_11129, 0;
ID_11131 = (ID_11130 : <);
ID_11132 = ID_11129, 0.0001f;
ID_11133 = (ID_11132 : max);
ID_11134 = ID_11133, ID_11129;
ID_11135 = ID_11131, ID_11134;
ID_11136 = (ID_11135 : select2);
ID_11137 = ID_11113, ID_11136;
ID_11138 = (ID_11137 : /);
ID_11139 = ID_11138, 0;
ID_11140 = ID_11108, ID_11139;
ID_11141 = (ID_11140 : select2);
ID_11142 = ID_11141, 2;
ID_11143 = (ID_11142 : pow);
ID_11144 = (ID_0 : \(x5417).(\(x5418).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5417 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5418 : *) : +)~_));
ID_11145 = 7.3f, ID_11144;
ID_11146 = (ID_11145 : -);
ID_11147 = 0, ID_11146;
ID_11148 = (ID_11147 : -);
ID_11149 = ID_11148, 2;
ID_11150 = (ID_11149 : pow);
ID_11151 = (ID_14 : \(x5419).(\(x5420).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5419 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5420 : *) : +)~_));
ID_11152 = 0, ID_11151;
ID_11153 = (ID_11152 : -);
ID_11154 = 0, ID_11153;
ID_11155 = (ID_11154 : -);
ID_11156 = ID_11155, 2;
ID_11157 = (ID_11156 : pow);
ID_11158 = ID_11150, ID_11157;
ID_11159 = (ID_11158 :> sqrt);
ID_11160 = ID_11159, 0;
ID_11161 = (ID_11160 : ==);
ID_11162 = ID_11161, ID_69;
ID_11163 = (ID_11162 : select2);
ID_11164 = (ID_14 : \(x5421).(\(x5422).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5421 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5422 : *) : +)~_));
ID_11165 = 0, ID_11164;
ID_11166 = (ID_11165 : -);
ID_11167 = 0, ID_11166;
ID_11168 = (ID_11167 : -);
ID_11169 = (ID_0 : \(x5423).(\(x5424).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5423 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5424 : *) : +)~_));
ID_11170 = 7.3f, ID_11169;
ID_11171 = (ID_11170 : -);
ID_11172 = 0, ID_11171;
ID_11173 = (ID_11172 : -);
ID_11174 = ID_11173, 2;
ID_11175 = (ID_11174 : pow);
ID_11176 = (ID_14 : \(x5425).(\(x5426).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5425 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5426 : *) : +)~_));
ID_11177 = 0, ID_11176;
ID_11178 = (ID_11177 : -);
ID_11179 = 0, ID_11178;
ID_11180 = (ID_11179 : -);
ID_11181 = ID_11180, 2;
ID_11182 = (ID_11181 : pow);
ID_11183 = ID_11175, ID_11182;
ID_11184 = (ID_11183 :> sqrt);
ID_11185 = ID_11184, 0;
ID_11186 = (ID_11185 : <);
ID_11187 = ID_11184, 0.0001f;
ID_11188 = (ID_11187 : max);
ID_11189 = ID_11188, ID_11184;
ID_11190 = ID_11186, ID_11189;
ID_11191 = (ID_11190 : select2);
ID_11192 = ID_11168, ID_11191;
ID_11193 = (ID_11192 : /);
ID_11194 = ID_11193, 0;
ID_11195 = ID_11163, ID_11194;
ID_11196 = (ID_11195 : select2);
ID_11197 = ID_11196, 2;
ID_11198 = (ID_11197 : pow);
ID_11199 = ID_11143, ID_11198;
ID_11200 = (ID_11199 :> sqrt);
ID_11201 = ID_11200, ID_817;
ID_11202 = (ID_11201 : *);
ID_11203 = ID_11202, 0;
ID_11204 = (ID_11203 : <);
ID_11205 = ID_11202, 0.0001f;
ID_11206 = (ID_11205 : max);
ID_11207 = ID_11206, ID_11202;
ID_11208 = ID_11204, ID_11207;
ID_11209 = (ID_11208 : select2);
ID_11210 = ID_11088, ID_11209;
ID_11211 = (ID_11210 : /);
ID_11212 = ID_11211, 0;
ID_11213 = ID_11026, ID_11212;
ID_11214 = (ID_11213 : select2);
ID_11215 = ID_11214, 0;
ID_11216 = (ID_11215 : ==);
ID_11217 = (ID_11203 : ==);
ID_11218 = (ID_0 : \(x5427).(\(x5428).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5427 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5428 : *) : +)~_));
ID_11219 = 7.3f, ID_11218;
ID_11220 = (ID_11219 : -);
ID_11221 = 0, ID_11220;
ID_11222 = (ID_11221 : -);
ID_11223 = ID_11222, 2;
ID_11224 = (ID_11223 : pow);
ID_11225 = (ID_14 : \(x5429).(\(x5430).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5429 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5430 : *) : +)~_));
ID_11226 = 0, ID_11225;
ID_11227 = (ID_11226 : -);
ID_11228 = 0, ID_11227;
ID_11229 = (ID_11228 : -);
ID_11230 = ID_11229, 2;
ID_11231 = (ID_11230 : pow);
ID_11232 = ID_11224, ID_11231;
ID_11233 = (ID_11232 :> sqrt);
ID_11234 = ID_11233, 0;
ID_11235 = (ID_11234 : ==);
ID_11236 = ID_11235, ID_69;
ID_11237 = (ID_11236 : select2);
ID_11238 = (ID_0 : \(x5431).(\(x5432).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5431 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5432 : *) : +)~_));
ID_11239 = 7.3f, ID_11238;
ID_11240 = (ID_11239 : -);
ID_11241 = 0, ID_11240;
ID_11242 = (ID_11241 : -);
ID_11243 = (ID_0 : \(x5433).(\(x5434).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5433 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5434 : *) : +)~_));
ID_11244 = 7.3f, ID_11243;
ID_11245 = (ID_11244 : -);
ID_11246 = 0, ID_11245;
ID_11247 = (ID_11246 : -);
ID_11248 = ID_11247, 2;
ID_11249 = (ID_11248 : pow);
ID_11250 = (ID_14 : \(x5435).(\(x5436).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5435 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5436 : *) : +)~_));
ID_11251 = 0, ID_11250;
ID_11252 = (ID_11251 : -);
ID_11253 = 0, ID_11252;
ID_11254 = (ID_11253 : -);
ID_11255 = ID_11254, 2;
ID_11256 = (ID_11255 : pow);
ID_11257 = ID_11249, ID_11256;
ID_11258 = (ID_11257 :> sqrt);
ID_11259 = ID_11258, 0;
ID_11260 = (ID_11259 : <);
ID_11261 = ID_11258, 0.0001f;
ID_11262 = (ID_11261 : max);
ID_11263 = ID_11262, ID_11258;
ID_11264 = ID_11260, ID_11263;
ID_11265 = (ID_11264 : select2);
ID_11266 = ID_11242, ID_11265;
ID_11267 = (ID_11266 : /);
ID_11268 = ID_11267, 0;
ID_11269 = ID_11237, ID_11268;
ID_11270 = (ID_11269 : select2);
ID_11271 = ID_806, ID_11270;
ID_11272 = (ID_11271 : *);
ID_11273 = (ID_0 : \(x5437).(\(x5438).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5437 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5438 : *) : +)~_));
ID_11274 = 7.3f, ID_11273;
ID_11275 = (ID_11274 : -);
ID_11276 = 0, ID_11275;
ID_11277 = (ID_11276 : -);
ID_11278 = ID_11277, 2;
ID_11279 = (ID_11278 : pow);
ID_11280 = (ID_14 : \(x5439).(\(x5440).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5439 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5440 : *) : +)~_));
ID_11281 = 0, ID_11280;
ID_11282 = (ID_11281 : -);
ID_11283 = 0, ID_11282;
ID_11284 = (ID_11283 : -);
ID_11285 = ID_11284, 2;
ID_11286 = (ID_11285 : pow);
ID_11287 = ID_11279, ID_11286;
ID_11288 = (ID_11287 :> sqrt);
ID_11289 = ID_11288, 0;
ID_11290 = (ID_11289 : ==);
ID_11291 = ID_11290, ID_69;
ID_11292 = (ID_11291 : select2);
ID_11293 = (ID_14 : \(x5441).(\(x5442).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5441 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5442 : *) : +)~_));
ID_11294 = 0, ID_11293;
ID_11295 = (ID_11294 : -);
ID_11296 = 0, ID_11295;
ID_11297 = (ID_11296 : -);
ID_11298 = (ID_0 : \(x5443).(\(x5444).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5443 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5444 : *) : +)~_));
ID_11299 = 7.3f, ID_11298;
ID_11300 = (ID_11299 : -);
ID_11301 = 0, ID_11300;
ID_11302 = (ID_11301 : -);
ID_11303 = ID_11302, 2;
ID_11304 = (ID_11303 : pow);
ID_11305 = (ID_14 : \(x5445).(\(x5446).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5445 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5446 : *) : +)~_));
ID_11306 = 0, ID_11305;
ID_11307 = (ID_11306 : -);
ID_11308 = 0, ID_11307;
ID_11309 = (ID_11308 : -);
ID_11310 = ID_11309, 2;
ID_11311 = (ID_11310 : pow);
ID_11312 = ID_11304, ID_11311;
ID_11313 = (ID_11312 :> sqrt);
ID_11314 = ID_11313, 0;
ID_11315 = (ID_11314 : <);
ID_11316 = ID_11313, 0.0001f;
ID_11317 = (ID_11316 : max);
ID_11318 = ID_11317, ID_11313;
ID_11319 = ID_11315, ID_11318;
ID_11320 = (ID_11319 : select2);
ID_11321 = ID_11297, ID_11320;
ID_11322 = (ID_11321 : /);
ID_11323 = ID_11322, 0;
ID_11324 = ID_11292, ID_11323;
ID_11325 = (ID_11324 : select2);
ID_11326 = ID_813, ID_11325;
ID_11327 = (ID_11326 : *);
ID_11328 = ID_11272, ID_11327;
ID_11329 = (ID_11328 :> _);
ID_11330 = (ID_0 : \(x5447).(\(x5448).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5447 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5448 : *) : +)~_));
ID_11331 = 7.3f, ID_11330;
ID_11332 = (ID_11331 : -);
ID_11333 = 0, ID_11332;
ID_11334 = (ID_11333 : -);
ID_11335 = ID_11334, 2;
ID_11336 = (ID_11335 : pow);
ID_11337 = (ID_14 : \(x5449).(\(x5450).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5449 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5450 : *) : +)~_));
ID_11338 = 0, ID_11337;
ID_11339 = (ID_11338 : -);
ID_11340 = 0, ID_11339;
ID_11341 = (ID_11340 : -);
ID_11342 = ID_11341, 2;
ID_11343 = (ID_11342 : pow);
ID_11344 = ID_11336, ID_11343;
ID_11345 = (ID_11344 :> sqrt);
ID_11346 = ID_11345, 0;
ID_11347 = (ID_11346 : ==);
ID_11348 = ID_11347, ID_69;
ID_11349 = (ID_11348 : select2);
ID_11350 = (ID_0 : \(x5451).(\(x5452).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5451 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5452 : *) : +)~_));
ID_11351 = 7.3f, ID_11350;
ID_11352 = (ID_11351 : -);
ID_11353 = 0, ID_11352;
ID_11354 = (ID_11353 : -);
ID_11355 = (ID_0 : \(x5453).(\(x5454).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5453 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5454 : *) : +)~_));
ID_11356 = 7.3f, ID_11355;
ID_11357 = (ID_11356 : -);
ID_11358 = 0, ID_11357;
ID_11359 = (ID_11358 : -);
ID_11360 = ID_11359, 2;
ID_11361 = (ID_11360 : pow);
ID_11362 = (ID_14 : \(x5455).(\(x5456).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5455 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5456 : *) : +)~_));
ID_11363 = 0, ID_11362;
ID_11364 = (ID_11363 : -);
ID_11365 = 0, ID_11364;
ID_11366 = (ID_11365 : -);
ID_11367 = ID_11366, 2;
ID_11368 = (ID_11367 : pow);
ID_11369 = ID_11361, ID_11368;
ID_11370 = (ID_11369 :> sqrt);
ID_11371 = ID_11370, 0;
ID_11372 = (ID_11371 : <);
ID_11373 = ID_11370, 0.0001f;
ID_11374 = (ID_11373 : max);
ID_11375 = ID_11374, ID_11370;
ID_11376 = ID_11372, ID_11375;
ID_11377 = (ID_11376 : select2);
ID_11378 = ID_11354, ID_11377;
ID_11379 = (ID_11378 : /);
ID_11380 = ID_11379, 0;
ID_11381 = ID_11349, ID_11380;
ID_11382 = (ID_11381 : select2);
ID_11383 = ID_11382, 2;
ID_11384 = (ID_11383 : pow);
ID_11385 = (ID_0 : \(x5457).(\(x5458).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5457 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5458 : *) : +)~_));
ID_11386 = 7.3f, ID_11385;
ID_11387 = (ID_11386 : -);
ID_11388 = 0, ID_11387;
ID_11389 = (ID_11388 : -);
ID_11390 = ID_11389, 2;
ID_11391 = (ID_11390 : pow);
ID_11392 = (ID_14 : \(x5459).(\(x5460).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5459 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5460 : *) : +)~_));
ID_11393 = 0, ID_11392;
ID_11394 = (ID_11393 : -);
ID_11395 = 0, ID_11394;
ID_11396 = (ID_11395 : -);
ID_11397 = ID_11396, 2;
ID_11398 = (ID_11397 : pow);
ID_11399 = ID_11391, ID_11398;
ID_11400 = (ID_11399 :> sqrt);
ID_11401 = ID_11400, 0;
ID_11402 = (ID_11401 : ==);
ID_11403 = ID_11402, ID_69;
ID_11404 = (ID_11403 : select2);
ID_11405 = (ID_14 : \(x5461).(\(x5462).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5461 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5462 : *) : +)~_));
ID_11406 = 0, ID_11405;
ID_11407 = (ID_11406 : -);
ID_11408 = 0, ID_11407;
ID_11409 = (ID_11408 : -);
ID_11410 = (ID_0 : \(x5463).(\(x5464).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5463 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5464 : *) : +)~_));
ID_11411 = 7.3f, ID_11410;
ID_11412 = (ID_11411 : -);
ID_11413 = 0, ID_11412;
ID_11414 = (ID_11413 : -);
ID_11415 = ID_11414, 2;
ID_11416 = (ID_11415 : pow);
ID_11417 = (ID_14 : \(x5465).(\(x5466).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5465 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5466 : *) : +)~_));
ID_11418 = 0, ID_11417;
ID_11419 = (ID_11418 : -);
ID_11420 = 0, ID_11419;
ID_11421 = (ID_11420 : -);
ID_11422 = ID_11421, 2;
ID_11423 = (ID_11422 : pow);
ID_11424 = ID_11416, ID_11423;
ID_11425 = (ID_11424 :> sqrt);
ID_11426 = ID_11425, 0;
ID_11427 = (ID_11426 : <);
ID_11428 = ID_11425, 0.0001f;
ID_11429 = (ID_11428 : max);
ID_11430 = ID_11429, ID_11425;
ID_11431 = ID_11427, ID_11430;
ID_11432 = (ID_11431 : select2);
ID_11433 = ID_11409, ID_11432;
ID_11434 = (ID_11433 : /);
ID_11435 = ID_11434, 0;
ID_11436 = ID_11404, ID_11435;
ID_11437 = (ID_11436 : select2);
ID_11438 = ID_11437, 2;
ID_11439 = (ID_11438 : pow);
ID_11440 = ID_11384, ID_11439;
ID_11441 = (ID_11440 :> sqrt);
ID_11442 = ID_11441, ID_817;
ID_11443 = (ID_11442 : *);
ID_11444 = ID_11443, 0;
ID_11445 = (ID_11444 : <);
ID_11446 = ID_11443, 0.0001f;
ID_11447 = (ID_11446 : max);
ID_11448 = ID_11447, ID_11443;
ID_11449 = ID_11445, ID_11448;
ID_11450 = (ID_11449 : select2);
ID_11451 = ID_11329, ID_11450;
ID_11452 = (ID_11451 : /);
ID_11453 = ID_11452, 0;
ID_11454 = ID_11217, ID_11453;
ID_11455 = (ID_11454 : select2);
ID_11456 = ID_11455, 0;
ID_11457 = (ID_11456 : <);
ID_11458 = ID_11455, 0.0001f;
ID_11459 = (ID_11458 : max);
ID_11460 = ID_11459, ID_11455;
ID_11461 = ID_11457, ID_11460;
ID_11462 = ID_11461 : select2;
ID_11463 = (ID_11462 : acos);
ID_11464 = ID_11463, 0;
ID_11465 = ID_11216, ID_11464;
ID_11466 = (ID_11465 : select2);
ID_11467 = ID_1885, ID_11466;
ID_11468 = ID_11467 : *;
ID_11469 = (ID_11468 : cos);
ID_11470 = ID_10960, ID_11469;
ID_11471 = (ID_11470 : *);
ID_11472 = _, ID_11471;
ID_11473 = (ID_11472 : *);
ID_11474 = ID_10959, ID_11473;
ID_11475 = ID_10448, ID_11474;
ID_11476 = ID_37, ID_11475;
ID_11477 = _ <: ID_11476;
ID_11478 = ID_11477 : \(x5470).(\(x5471).(\(x5472).(\(x5473).(((((x5470,x5471 : +),x5472 : +),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : -),x5473 : +),2 : /),((((x5470,x5471 : -),x5472 : +),x5473 : -),2 : /),((((x5470,x5471 : +),x5472 : -),x5473 : -),2 : /)))));
ID_11479 = \(x5477).(x5477,((1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min),(0,(((((((hslider("sigX", 11.0f, 1.0f, 15.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),7.3f : -),2 : pow),(((hslider("sigY", 0.0f, -8.0f, 8.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),6.7f : -),2 : pow) : +),(((hslider("sigZ", 0.0f, -16.0f, 16.0f, 0.001f) : \(x5468).(\(x5469).(((1.0f,(1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x5468 : *),((1,(44.1f,(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x5469 : *) : +)~_)),0 : -),2 : pow) : + : sqrt),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *),340 : /) : max) : min) : @) : ID_11478;
ID_11480 = (ID_9351 : ID_11479);
ID_11481 = ID_9329, ID_11480;
ID_11482 = ID_7178, ID_11481;
ID_11483 = ID_4855, ID_11482;
ID_11484 = ID_2505, ID_11483;
ID_11485 = _ <: ID_11484;
process = ID_11485;
